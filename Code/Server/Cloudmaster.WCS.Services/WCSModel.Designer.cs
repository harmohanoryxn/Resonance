//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionAdmissionStatus", "AdmissionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.AdmissionStatus), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionAdmissionType", "AdmissionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.AdmissionType), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Location), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionOrder", "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Admission), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ExternalSourceAdmission", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_PatientAdmission", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Patient), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_BedCleaningEventBed", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Bed), "BedCleaningEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.BedCleaningEvent), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_BedNote", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Bed), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Note), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_BedRoom", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Room), "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Bed), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_BedUpdate", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Bed), "Update", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Update), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.BedCleaningEventType), "BedCleaningEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.BedCleaningEvent), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ConfigurationConfigurationLocation", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Configuration), "ConfigurationLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.ConfigurationLocation), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ConfigurationConfigurationType", "ConfigurationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ConfigurationType), "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Configuration), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ConfigurationDeviceConfiguration", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Configuration), "DeviceConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.DeviceConfiguration), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_LocationConfigurationLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Location), "ConfigurationLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.ConfigurationLocation), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_DeviceConnection", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Device), "Connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Connection), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_DeviceDeviceConfiguration", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Device), "DeviceConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.DeviceConfiguration), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_DevicePin", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Device), "Pin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Pin), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_LocationWCS_Device", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Location), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Device), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderOrderingDoctor", "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Doctor), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ExternalSourceOrder", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ExternalSourceProcedure", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Procedure), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ExternalSourceProcedureCategory", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "ProcedureCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.ProcedureCategory), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_PatientExternalSource", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Patient), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_RfidDetectorExternalSource", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "RfidDetector", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetector), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_LocationRoom", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Location), "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Room), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Location), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_RfidDetectorLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Location), "RfidDetector", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetector), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_WaitingAreaLocation", "WaitingArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.WaitingArea), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Location), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderNote", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Order), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Note), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_NotificationNotificationType", "NotificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.NotificationType), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Notification), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderNotification", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Order), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Notification), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_NotificationRuleProcedure", "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Procedure), "NotificationRule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.NotificationRule), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderProcedure", "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Procedure), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_OrderStatusOrder", "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.OrderStatus), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Order), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_UpdateOrder", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Order), "Update", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Update), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_RfidDetectionPatient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.Patient), "RfidDetection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetection), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ProcedureCategoryProcedure", "ProcedureCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ProcedureCategory), "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Procedure), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_RfidDetectionRfidDetector", "RfidDetector", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.RfidDetector), "RfidDetection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetection), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_RfidDetectionRfidDirection", "RfidDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.RfidDirection), "RfidDetection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetection), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_WaitingAreaRfidDetector", "WaitingArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.WaitingArea), "RfidDetector", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.RfidDetector), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionAdmittingDoctorDoctor", "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Doctor))]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionAttendingDoctorDoctor", "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Doctor))]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionPrimaryCareDoctor", "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Doctor))]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_AdmissionBed", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Bed), "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Admission), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_ExternalSourceDoctor", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WCS.Data.EF.ExternalSource), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Doctor), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_UpdateAdmission", "Admission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Admission), "Update", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Update), true)]
[assembly: EdmRelationshipAttribute("WCSModel", "FK_UpdateBed", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WCS.Data.EF.Bed), "Update", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WCS.Data.EF.Update), true)]

#endregion

namespace WCS.Data.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WCSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WCSEntities object using the connection string found in the 'WCSEntities' section of the application configuration file.
        /// </summary>
        public WCSEntities() : base("name=WCSEntities", "WCSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WCSEntities object.
        /// </summary>
        public WCSEntities(string connectionString) : base(connectionString, "WCSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WCSEntities object.
        /// </summary>
        public WCSEntities(EntityConnection connection) : base(connection, "WCSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Admission> Admission
        {
            get
            {
                if ((_Admission == null))
                {
                    _Admission = base.CreateObjectSet<Admission>("Admission");
                }
                return _Admission;
            }
        }
        private ObjectSet<Admission> _Admission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionStatus> AdmissionStatus
        {
            get
            {
                if ((_AdmissionStatus == null))
                {
                    _AdmissionStatus = base.CreateObjectSet<AdmissionStatus>("AdmissionStatus");
                }
                return _AdmissionStatus;
            }
        }
        private ObjectSet<AdmissionStatus> _AdmissionStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionType> AdmissionType
        {
            get
            {
                if ((_AdmissionType == null))
                {
                    _AdmissionType = base.CreateObjectSet<AdmissionType>("AdmissionType");
                }
                return _AdmissionType;
            }
        }
        private ObjectSet<AdmissionType> _AdmissionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bed> Bed
        {
            get
            {
                if ((_Bed == null))
                {
                    _Bed = base.CreateObjectSet<Bed>("Bed");
                }
                return _Bed;
            }
        }
        private ObjectSet<Bed> _Bed;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BedCleaningEvent> BedCleaningEvent
        {
            get
            {
                if ((_BedCleaningEvent == null))
                {
                    _BedCleaningEvent = base.CreateObjectSet<BedCleaningEvent>("BedCleaningEvent");
                }
                return _BedCleaningEvent;
            }
        }
        private ObjectSet<BedCleaningEvent> _BedCleaningEvent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BedCleaningEventType> BedCleaningEventType
        {
            get
            {
                if ((_BedCleaningEventType == null))
                {
                    _BedCleaningEventType = base.CreateObjectSet<BedCleaningEventType>("BedCleaningEventType");
                }
                return _BedCleaningEventType;
            }
        }
        private ObjectSet<BedCleaningEventType> _BedCleaningEventType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configuration
        {
            get
            {
                if ((_Configuration == null))
                {
                    _Configuration = base.CreateObjectSet<Configuration>("Configuration");
                }
                return _Configuration;
            }
        }
        private ObjectSet<Configuration> _Configuration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigurationLocation> ConfigurationLocation
        {
            get
            {
                if ((_ConfigurationLocation == null))
                {
                    _ConfigurationLocation = base.CreateObjectSet<ConfigurationLocation>("ConfigurationLocation");
                }
                return _ConfigurationLocation;
            }
        }
        private ObjectSet<ConfigurationLocation> _ConfigurationLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigurationType> ConfigurationType
        {
            get
            {
                if ((_ConfigurationType == null))
                {
                    _ConfigurationType = base.CreateObjectSet<ConfigurationType>("ConfigurationType");
                }
                return _ConfigurationType;
            }
        }
        private ObjectSet<ConfigurationType> _ConfigurationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        new public ObjectSet<Connection> Connection
        {
            get
            {
                if ((_Connection == null))
                {
                    _Connection = base.CreateObjectSet<Connection>("Connection");
                }
                return _Connection;
            }
        }
        private ObjectSet<Connection> _Connection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Device
        {
            get
            {
                if ((_Device == null))
                {
                    _Device = base.CreateObjectSet<Device>("Device");
                }
                return _Device;
            }
        }
        private ObjectSet<Device> _Device;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeviceConfiguration> DeviceConfiguration
        {
            get
            {
                if ((_DeviceConfiguration == null))
                {
                    _DeviceConfiguration = base.CreateObjectSet<DeviceConfiguration>("DeviceConfiguration");
                }
                return _DeviceConfiguration;
            }
        }
        private ObjectSet<DeviceConfiguration> _DeviceConfiguration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctor
        {
            get
            {
                if ((_Doctor == null))
                {
                    _Doctor = base.CreateObjectSet<Doctor>("Doctor");
                }
                return _Doctor;
            }
        }
        private ObjectSet<Doctor> _Doctor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExternalSource> ExternalSource
        {
            get
            {
                if ((_ExternalSource == null))
                {
                    _ExternalSource = base.CreateObjectSet<ExternalSource>("ExternalSource");
                }
                return _ExternalSource;
            }
        }
        private ObjectSet<ExternalSource> _ExternalSource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Location
        {
            get
            {
                if ((_Location == null))
                {
                    _Location = base.CreateObjectSet<Location>("Location");
                }
                return _Location;
            }
        }
        private ObjectSet<Location> _Location;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Note
        {
            get
            {
                if ((_Note == null))
                {
                    _Note = base.CreateObjectSet<Note>("Note");
                }
                return _Note;
            }
        }
        private ObjectSet<Note> _Note;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notification
        {
            get
            {
                if ((_Notification == null))
                {
                    _Notification = base.CreateObjectSet<Notification>("Notification");
                }
                return _Notification;
            }
        }
        private ObjectSet<Notification> _Notification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationRule> NotificationRule
        {
            get
            {
                if ((_NotificationRule == null))
                {
                    _NotificationRule = base.CreateObjectSet<NotificationRule>("NotificationRule");
                }
                return _NotificationRule;
            }
        }
        private ObjectSet<NotificationRule> _NotificationRule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationType> NotificationType
        {
            get
            {
                if ((_NotificationType == null))
                {
                    _NotificationType = base.CreateObjectSet<NotificationType>("NotificationType");
                }
                return _NotificationType;
            }
        }
        private ObjectSet<NotificationType> _NotificationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<Order>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<Order> _Order;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderStatus> OrderStatus
        {
            get
            {
                if ((_OrderStatus == null))
                {
                    _OrderStatus = base.CreateObjectSet<OrderStatus>("OrderStatus");
                }
                return _OrderStatus;
            }
        }
        private ObjectSet<OrderStatus> _OrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patient
        {
            get
            {
                if ((_Patient == null))
                {
                    _Patient = base.CreateObjectSet<Patient>("Patient");
                }
                return _Patient;
            }
        }
        private ObjectSet<Patient> _Patient;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pin> Pin
        {
            get
            {
                if ((_Pin == null))
                {
                    _Pin = base.CreateObjectSet<Pin>("Pin");
                }
                return _Pin;
            }
        }
        private ObjectSet<Pin> _Pin;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Procedure> Procedure
        {
            get
            {
                if ((_Procedure == null))
                {
                    _Procedure = base.CreateObjectSet<Procedure>("Procedure");
                }
                return _Procedure;
            }
        }
        private ObjectSet<Procedure> _Procedure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcedureCategory> ProcedureCategory
        {
            get
            {
                if ((_ProcedureCategory == null))
                {
                    _ProcedureCategory = base.CreateObjectSet<ProcedureCategory>("ProcedureCategory");
                }
                return _ProcedureCategory;
            }
        }
        private ObjectSet<ProcedureCategory> _ProcedureCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RfidDetection> RfidDetection
        {
            get
            {
                if ((_RfidDetection == null))
                {
                    _RfidDetection = base.CreateObjectSet<RfidDetection>("RfidDetection");
                }
                return _RfidDetection;
            }
        }
        private ObjectSet<RfidDetection> _RfidDetection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RfidDetector> RfidDetector
        {
            get
            {
                if ((_RfidDetector == null))
                {
                    _RfidDetector = base.CreateObjectSet<RfidDetector>("RfidDetector");
                }
                return _RfidDetector;
            }
        }
        private ObjectSet<RfidDetector> _RfidDetector;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RfidDirection> RfidDirection
        {
            get
            {
                if ((_RfidDirection == null))
                {
                    _RfidDirection = base.CreateObjectSet<RfidDirection>("RfidDirection");
                }
                return _RfidDirection;
            }
        }
        private ObjectSet<RfidDirection> _RfidDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Room
        {
            get
            {
                if ((_Room == null))
                {
                    _Room = base.CreateObjectSet<Room>("Room");
                }
                return _Room;
            }
        }
        private ObjectSet<Room> _Room;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Update> Update
        {
            get
            {
                if ((_Update == null))
                {
                    _Update = base.CreateObjectSet<Update>("Update");
                }
                return _Update;
            }
        }
        private ObjectSet<Update> _Update;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WaitingArea> WaitingArea
        {
            get
            {
                if ((_WaitingArea == null))
                {
                    _WaitingArea = base.CreateObjectSet<WaitingArea>("WaitingArea");
                }
                return _WaitingArea;
            }
        }
        private ObjectSet<WaitingArea> _WaitingArea;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Admission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmission(Admission admission)
        {
            base.AddObject("Admission", admission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionStatus(AdmissionStatus admissionStatus)
        {
            base.AddObject("AdmissionStatus", admissionStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionType(AdmissionType admissionType)
        {
            base.AddObject("AdmissionType", admissionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bed EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBed(Bed bed)
        {
            base.AddObject("Bed", bed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BedCleaningEvent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBedCleaningEvent(BedCleaningEvent bedCleaningEvent)
        {
            base.AddObject("BedCleaningEvent", bedCleaningEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BedCleaningEventType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBedCleaningEventType(BedCleaningEventType bedCleaningEventType)
        {
            base.AddObject("BedCleaningEventType", bedCleaningEventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configuration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfiguration(Configuration configuration)
        {
            base.AddObject("Configuration", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigurationLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurationLocation(ConfigurationLocation configurationLocation)
        {
            base.AddObject("ConfigurationLocation", configurationLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigurationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurationType(ConfigurationType configurationType)
        {
            base.AddObject("ConfigurationType", configurationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Connection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConnection(Connection connection)
        {
            base.AddObject("Connection", connection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Device EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevice(Device device)
        {
            base.AddObject("Device", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeviceConfiguration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeviceConfiguration(DeviceConfiguration deviceConfiguration)
        {
            base.AddObject("DeviceConfiguration", deviceConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctor(Doctor doctor)
        {
            base.AddObject("Doctor", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExternalSource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternalSource(ExternalSource externalSource)
        {
            base.AddObject("ExternalSource", externalSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Location EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocation(Location location)
        {
            base.AddObject("Location", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Note EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNote(Note note)
        {
            base.AddObject("Note", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotification(Notification notification)
        {
            base.AddObject("Notification", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationRule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationRule(NotificationRule notificationRule)
        {
            base.AddObject("NotificationRule", notificationRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationType(NotificationType notificationType)
        {
            base.AddObject("NotificationType", notificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Order EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrder(Order order)
        {
            base.AddObject("Order", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderStatus(OrderStatus orderStatus)
        {
            base.AddObject("OrderStatus", orderStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient(Patient patient)
        {
            base.AddObject("Patient", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pin EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPin(Pin pin)
        {
            base.AddObject("Pin", pin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Procedure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcedure(Procedure procedure)
        {
            base.AddObject("Procedure", procedure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcedureCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcedureCategory(ProcedureCategory procedureCategory)
        {
            base.AddObject("ProcedureCategory", procedureCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RfidDetection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRfidDetection(RfidDetection rfidDetection)
        {
            base.AddObject("RfidDetection", rfidDetection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RfidDetector EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRfidDetector(RfidDetector rfidDetector)
        {
            base.AddObject("RfidDetector", rfidDetector);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RfidDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRfidDirection(RfidDirection rfidDirection)
        {
            base.AddObject("RfidDirection", rfidDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Room EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoom(Room room)
        {
            base.AddObject("Room", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Update EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUpdate(Update update)
        {
            base.AddObject("Update", update);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WaitingArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWaitingArea(WaitingArea waitingArea)
        {
            base.AddObject("WaitingArea", waitingArea);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Admission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Admission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Admission object.
        /// </summary>
        /// <param name="admissionId">Initial value of the admissionId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="admissionType_admissionTypeId">Initial value of the AdmissionType_admissionTypeId property.</param>
        /// <param name="admissionStatus_admissionStatusId">Initial value of the AdmissionStatus_admissionStatusId property.</param>
        /// <param name="location_locationId">Initial value of the Location_locationId property.</param>
        public static Admission CreateAdmission(global::System.Int32 admissionId, global::System.Int32 externalSourceId, global::System.String externalId, global::System.Int32 patientId, global::System.Int32 admissionType_admissionTypeId, global::System.Int32 admissionStatus_admissionStatusId, global::System.Int32 location_locationId)
        {
            Admission admission = new Admission();
            admission.admissionId = admissionId;
            admission.externalSourceId = externalSourceId;
            admission.externalId = externalId;
            admission.patientId = patientId;
            admission.AdmissionType_admissionTypeId = admissionType_admissionTypeId;
            admission.AdmissionStatus_admissionStatusId = admissionStatus_admissionStatusId;
            admission.Location_locationId = location_locationId;
            return admission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 admissionId
        {
            get
            {
                return _admissionId;
            }
            set
            {
                if (_admissionId != value)
                {
                    OnadmissionIdChanging(value);
                    ReportPropertyChanging("admissionId");
                    _admissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("admissionId");
                    OnadmissionIdChanged();
                }
            }
        }
        private global::System.Int32 _admissionId;
        partial void OnadmissionIdChanging(global::System.Int32 value);
        partial void OnadmissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> admitDateTime
        {
            get
            {
                return _admitDateTime;
            }
            set
            {
                OnadmitDateTimeChanging(value);
                ReportPropertyChanging("admitDateTime");
                _admitDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admitDateTime");
                OnadmitDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _admitDateTime;
        partial void OnadmitDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnadmitDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dischargeDateTime
        {
            get
            {
                return _dischargeDateTime;
            }
            set
            {
                OndischargeDateTimeChanging(value);
                ReportPropertyChanging("dischargeDateTime");
                _dischargeDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dischargeDateTime");
                OndischargeDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _dischargeDateTime;
        partial void OndischargeDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OndischargeDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.Int32 _patientId;
        partial void OnpatientIdChanging(global::System.Int32 value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionType_admissionTypeId
        {
            get
            {
                return _AdmissionType_admissionTypeId;
            }
            set
            {
                OnAdmissionType_admissionTypeIdChanging(value);
                ReportPropertyChanging("AdmissionType_admissionTypeId");
                _AdmissionType_admissionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionType_admissionTypeId");
                OnAdmissionType_admissionTypeIdChanged();
            }
        }
        private global::System.Int32 _AdmissionType_admissionTypeId;
        partial void OnAdmissionType_admissionTypeIdChanging(global::System.Int32 value);
        partial void OnAdmissionType_admissionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionStatus_admissionStatusId
        {
            get
            {
                return _AdmissionStatus_admissionStatusId;
            }
            set
            {
                OnAdmissionStatus_admissionStatusIdChanging(value);
                ReportPropertyChanging("AdmissionStatus_admissionStatusId");
                _AdmissionStatus_admissionStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStatus_admissionStatusId");
                OnAdmissionStatus_admissionStatusIdChanged();
            }
        }
        private global::System.Int32 _AdmissionStatus_admissionStatusId;
        partial void OnAdmissionStatus_admissionStatusIdChanging(global::System.Int32 value);
        partial void OnAdmissionStatus_admissionStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Location_locationId
        {
            get
            {
                return _Location_locationId;
            }
            set
            {
                OnLocation_locationIdChanging(value);
                ReportPropertyChanging("Location_locationId");
                _Location_locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Location_locationId");
                OnLocation_locationIdChanged();
            }
        }
        private global::System.Int32 _Location_locationId;
        partial void OnLocation_locationIdChanging(global::System.Int32 value);
        partial void OnLocation_locationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Bed_bedId
        {
            get
            {
                return _Bed_bedId;
            }
            set
            {
                OnBed_bedIdChanging(value);
                ReportPropertyChanging("Bed_bedId");
                _Bed_bedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bed_bedId");
                OnBed_bedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Bed_bedId;
        partial void OnBed_bedIdChanging(Nullable<global::System.Int32> value);
        partial void OnBed_bedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> estimatedDischargeDateTime
        {
            get
            {
                return _estimatedDischargeDateTime;
            }
            set
            {
                OnestimatedDischargeDateTimeChanging(value);
                ReportPropertyChanging("estimatedDischargeDateTime");
                _estimatedDischargeDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("estimatedDischargeDateTime");
                OnestimatedDischargeDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _estimatedDischargeDateTime;
        partial void OnestimatedDischargeDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnestimatedDischargeDateTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAdmissionStatus", "AdmissionStatus")]
        public AdmissionStatus AdmissionStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionStatus>("WCSModel.FK_AdmissionAdmissionStatus", "AdmissionStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionStatus>("WCSModel.FK_AdmissionAdmissionStatus", "AdmissionStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionStatus> AdmissionStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionStatus>("WCSModel.FK_AdmissionAdmissionStatus", "AdmissionStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionStatus>("WCSModel.FK_AdmissionAdmissionStatus", "AdmissionStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAdmissionType", "AdmissionType")]
        public AdmissionType AdmissionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("WCSModel.FK_AdmissionAdmissionType", "AdmissionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("WCSModel.FK_AdmissionAdmissionType", "AdmissionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionType> AdmissionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionType>("WCSModel.FK_AdmissionAdmissionType", "AdmissionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionType>("WCSModel.FK_AdmissionAdmissionType", "AdmissionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_AdmissionLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_AdmissionLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_AdmissionLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_AdmissionLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("WCSModel.FK_AdmissionOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("WCSModel.FK_AdmissionOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ExternalSourceAdmission", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceAdmission", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceAdmission", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceAdmission", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceAdmission", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_PatientAdmission", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_PatientAdmission", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_PatientAdmission", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_PatientAdmission", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("WCSModel.FK_PatientAdmission", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAdmittingDoctorDoctor", "Doctor")]
        public Doctor AdmittingDoctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAdmittingDoctorDoctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAdmittingDoctorDoctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> AdmittingDoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAdmittingDoctorDoctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("WCSModel.FK_AdmissionAdmittingDoctorDoctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAttendingDoctorDoctor", "Doctor")]
        public Doctor AttendingDoctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAttendingDoctorDoctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAttendingDoctorDoctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> AttendingDoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionAttendingDoctorDoctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("WCSModel.FK_AdmissionAttendingDoctorDoctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionPrimaryCareDoctor", "Doctor")]
        public Doctor PrimaryCareDoctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionPrimaryCareDoctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionPrimaryCareDoctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> PrimaryCareDoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_AdmissionPrimaryCareDoctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("WCSModel.FK_AdmissionPrimaryCareDoctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionBed", "Bed")]
        public Bed Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_AdmissionBed", "Bed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_AdmissionBed", "Bed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bed> BedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_AdmissionBed", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bed>("WCSModel.FK_AdmissionBed", "Bed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateAdmission", "Update")]
        public EntityCollection<Update> Updates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Update>("WCSModel.FK_UpdateAdmission", "Update");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Update>("WCSModel.FK_UpdateAdmission", "Update", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="AdmissionStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionStatus object.
        /// </summary>
        /// <param name="admissionStatusId">Initial value of the admissionStatusId property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static AdmissionStatus CreateAdmissionStatus(global::System.Int32 admissionStatusId, global::System.String status)
        {
            AdmissionStatus admissionStatus = new AdmissionStatus();
            admissionStatus.admissionStatusId = admissionStatusId;
            admissionStatus.status = status;
            return admissionStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 admissionStatusId
        {
            get
            {
                return _admissionStatusId;
            }
            set
            {
                if (_admissionStatusId != value)
                {
                    OnadmissionStatusIdChanging(value);
                    ReportPropertyChanging("admissionStatusId");
                    _admissionStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("admissionStatusId");
                    OnadmissionStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _admissionStatusId;
        partial void OnadmissionStatusIdChanging(global::System.Int32 value);
        partial void OnadmissionStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAdmissionStatus", "Admission")]
        public EntityCollection<Admission> Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admission>("WCSModel.FK_AdmissionAdmissionStatus", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admission>("WCSModel.FK_AdmissionAdmissionStatus", "Admission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="AdmissionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionType object.
        /// </summary>
        /// <param name="admissionTypeId">Initial value of the admissionTypeId property.</param>
        /// <param name="type">Initial value of the type property.</param>
        public static AdmissionType CreateAdmissionType(global::System.Int32 admissionTypeId, global::System.String type)
        {
            AdmissionType admissionType = new AdmissionType();
            admissionType.admissionTypeId = admissionTypeId;
            admissionType.type = type;
            return admissionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 admissionTypeId
        {
            get
            {
                return _admissionTypeId;
            }
            set
            {
                if (_admissionTypeId != value)
                {
                    OnadmissionTypeIdChanging(value);
                    ReportPropertyChanging("admissionTypeId");
                    _admissionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("admissionTypeId");
                    OnadmissionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _admissionTypeId;
        partial void OnadmissionTypeIdChanging(global::System.Int32 value);
        partial void OnadmissionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionAdmissionType", "Admission")]
        public EntityCollection<Admission> Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admission>("WCSModel.FK_AdmissionAdmissionType", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admission>("WCSModel.FK_AdmissionAdmissionType", "Admission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Bed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bed object.
        /// </summary>
        /// <param name="bedId">Initial value of the bedId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Bed CreateBed(global::System.Int32 bedId, global::System.String name)
        {
            Bed bed = new Bed();
            bed.bedId = bedId;
            bed.name = name;
            return bed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bedId
        {
            get
            {
                return _bedId;
            }
            set
            {
                if (_bedId != value)
                {
                    OnbedIdChanging(value);
                    ReportPropertyChanging("bedId");
                    _bedId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("bedId");
                    OnbedIdChanged();
                }
            }
        }
        private global::System.Int32 _bedId;
        partial void OnbedIdChanging(global::System.Int32 value);
        partial void OnbedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Room_roomId
        {
            get
            {
                return _Room_roomId;
            }
            set
            {
                OnRoom_roomIdChanging(value);
                ReportPropertyChanging("Room_roomId");
                _Room_roomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Room_roomId");
                OnRoom_roomIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Room_roomId;
        partial void OnRoom_roomIdChanging(Nullable<global::System.Int32> value);
        partial void OnRoom_roomIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedCleaningEventBed", "BedCleaningEvent")]
        public EntityCollection<BedCleaningEvent> BedCleaningEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BedCleaningEvent>("WCSModel.FK_BedCleaningEventBed", "BedCleaningEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BedCleaningEvent>("WCSModel.FK_BedCleaningEventBed", "BedCleaningEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedNote", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("WCSModel.FK_BedNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("WCSModel.FK_BedNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedRoom", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("WCSModel.FK_BedRoom", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("WCSModel.FK_BedRoom", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("WCSModel.FK_BedRoom", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("WCSModel.FK_BedRoom", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedUpdate", "Update")]
        public EntityCollection<Update> Updates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Update>("WCSModel.FK_BedUpdate", "Update");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Update>("WCSModel.FK_BedUpdate", "Update", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionBed", "Admission")]
        public EntityCollection<Admission> Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admission>("WCSModel.FK_AdmissionBed", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admission>("WCSModel.FK_AdmissionBed", "Admission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateBed", "Update")]
        public EntityCollection<Update> Update
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Update>("WCSModel.FK_UpdateBed", "Update");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Update>("WCSModel.FK_UpdateBed", "Update", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="BedCleaningEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BedCleaningEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BedCleaningEvent object.
        /// </summary>
        /// <param name="bedCleaningEventId">Initial value of the bedCleaningEventId property.</param>
        /// <param name="timestamp">Initial value of the timestamp property.</param>
        /// <param name="bed_bedId">Initial value of the Bed_bedId property.</param>
        /// <param name="bedCleaningEventTypeId">Initial value of the bedCleaningEventTypeId property.</param>
        public static BedCleaningEvent CreateBedCleaningEvent(global::System.Int32 bedCleaningEventId, global::System.DateTime timestamp, global::System.Int32 bed_bedId, global::System.Int32 bedCleaningEventTypeId)
        {
            BedCleaningEvent bedCleaningEvent = new BedCleaningEvent();
            bedCleaningEvent.bedCleaningEventId = bedCleaningEventId;
            bedCleaningEvent.timestamp = timestamp;
            bedCleaningEvent.Bed_bedId = bed_bedId;
            bedCleaningEvent.bedCleaningEventTypeId = bedCleaningEventTypeId;
            return bedCleaningEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bedCleaningEventId
        {
            get
            {
                return _bedCleaningEventId;
            }
            set
            {
                if (_bedCleaningEventId != value)
                {
                    OnbedCleaningEventIdChanging(value);
                    ReportPropertyChanging("bedCleaningEventId");
                    _bedCleaningEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("bedCleaningEventId");
                    OnbedCleaningEventIdChanged();
                }
            }
        }
        private global::System.Int32 _bedCleaningEventId;
        partial void OnbedCleaningEventIdChanging(global::System.Int32 value);
        partial void OnbedCleaningEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime timestamp
        {
            get
            {
                return _timestamp;
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.DateTime _timestamp;
        partial void OntimestampChanging(global::System.DateTime value);
        partial void OntimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bed_bedId
        {
            get
            {
                return _Bed_bedId;
            }
            set
            {
                OnBed_bedIdChanging(value);
                ReportPropertyChanging("Bed_bedId");
                _Bed_bedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bed_bedId");
                OnBed_bedIdChanged();
            }
        }
        private global::System.Int32 _Bed_bedId;
        partial void OnBed_bedIdChanging(global::System.Int32 value);
        partial void OnBed_bedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bedCleaningEventTypeId
        {
            get
            {
                return _bedCleaningEventTypeId;
            }
            set
            {
                OnbedCleaningEventTypeIdChanging(value);
                ReportPropertyChanging("bedCleaningEventTypeId");
                _bedCleaningEventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bedCleaningEventTypeId");
                OnbedCleaningEventTypeIdChanged();
            }
        }
        private global::System.Int32 _bedCleaningEventTypeId;
        partial void OnbedCleaningEventTypeIdChanging(global::System.Int32 value);
        partial void OnbedCleaningEventTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedCleaningEventBed", "Bed")]
        public Bed Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedCleaningEventBed", "Bed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedCleaningEventBed", "Bed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bed> BedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedCleaningEventBed", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bed>("WCSModel.FK_BedCleaningEventBed", "Bed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType")]
        public BedCleaningEventType BedCleaningEventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedCleaningEventType>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedCleaningEventType>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BedCleaningEventType> BedCleaningEventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedCleaningEventType>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BedCleaningEventType>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEventType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="BedCleaningEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BedCleaningEventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BedCleaningEventType object.
        /// </summary>
        /// <param name="bedCleaningEventTypeId">Initial value of the bedCleaningEventTypeId property.</param>
        /// <param name="eventType">Initial value of the eventType property.</param>
        public static BedCleaningEventType CreateBedCleaningEventType(global::System.Int32 bedCleaningEventTypeId, global::System.String eventType)
        {
            BedCleaningEventType bedCleaningEventType = new BedCleaningEventType();
            bedCleaningEventType.bedCleaningEventTypeId = bedCleaningEventTypeId;
            bedCleaningEventType.eventType = eventType;
            return bedCleaningEventType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 bedCleaningEventTypeId
        {
            get
            {
                return _bedCleaningEventTypeId;
            }
            set
            {
                if (_bedCleaningEventTypeId != value)
                {
                    OnbedCleaningEventTypeIdChanging(value);
                    ReportPropertyChanging("bedCleaningEventTypeId");
                    _bedCleaningEventTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("bedCleaningEventTypeId");
                    OnbedCleaningEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _bedCleaningEventTypeId;
        partial void OnbedCleaningEventTypeIdChanging(global::System.Int32 value);
        partial void OnbedCleaningEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String eventType
        {
            get
            {
                return _eventType;
            }
            set
            {
                OneventTypeChanging(value);
                ReportPropertyChanging("eventType");
                _eventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("eventType");
                OneventTypeChanged();
            }
        }
        private global::System.String _eventType;
        partial void OneventTypeChanging(global::System.String value);
        partial void OneventTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedCleaningEventBedCleaningEventType", "BedCleaningEvent")]
        public EntityCollection<BedCleaningEvent> BedCleaningEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BedCleaningEvent>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BedCleaningEvent>("WCSModel.FK_BedCleaningEventBedCleaningEventType", "BedCleaningEvent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="configurationType_ConfigurationTypeId">Initial value of the ConfigurationType_ConfigurationTypeId property.</param>
        public static Configuration CreateConfiguration(global::System.Int32 configurationId, global::System.String name, global::System.Int32 configurationType_ConfigurationTypeId)
        {
            Configuration configuration = new Configuration();
            configuration.configurationId = configurationId;
            configuration.name = name;
            configuration.ConfigurationType_ConfigurationTypeId = configurationType_ConfigurationTypeId;
            return configuration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                if (_configurationId != value)
                {
                    OnconfigurationIdChanging(value);
                    ReportPropertyChanging("configurationId");
                    _configurationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("configurationId");
                    OnconfigurationIdChanged();
                }
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationType_ConfigurationTypeId
        {
            get
            {
                return _ConfigurationType_ConfigurationTypeId;
            }
            set
            {
                OnConfigurationType_ConfigurationTypeIdChanging(value);
                ReportPropertyChanging("ConfigurationType_ConfigurationTypeId");
                _ConfigurationType_ConfigurationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurationType_ConfigurationTypeId");
                OnConfigurationType_ConfigurationTypeIdChanged();
            }
        }
        private global::System.Int32 _ConfigurationType_ConfigurationTypeId;
        partial void OnConfigurationType_ConfigurationTypeIdChanging(global::System.Int32 value);
        partial void OnConfigurationType_ConfigurationTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationConfigurationLocation", "ConfigurationLocation")]
        public EntityCollection<ConfigurationLocation> ConfigurationLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigurationLocation>("WCSModel.FK_ConfigurationConfigurationLocation", "ConfigurationLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigurationLocation>("WCSModel.FK_ConfigurationConfigurationLocation", "ConfigurationLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationConfigurationType", "ConfigurationType")]
        public ConfigurationType ConfigurationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WCSModel.FK_ConfigurationConfigurationType", "ConfigurationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WCSModel.FK_ConfigurationConfigurationType", "ConfigurationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfigurationType> ConfigurationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WCSModel.FK_ConfigurationConfigurationType", "ConfigurationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfigurationType>("WCSModel.FK_ConfigurationConfigurationType", "ConfigurationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationDeviceConfiguration", "DeviceConfiguration")]
        public EntityCollection<DeviceConfiguration> DeviceConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceConfiguration>("WCSModel.FK_ConfigurationDeviceConfiguration", "DeviceConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceConfiguration>("WCSModel.FK_ConfigurationDeviceConfiguration", "DeviceConfiguration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="ConfigurationLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigurationLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigurationLocation object.
        /// </summary>
        /// <param name="configurationLocationId">Initial value of the configurationLocationId property.</param>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="locationId">Initial value of the locationId property.</param>
        /// <param name="isDefault">Initial value of the isDefault property.</param>
        public static ConfigurationLocation CreateConfigurationLocation(global::System.Int32 configurationLocationId, global::System.Int32 configurationId, global::System.Int32 locationId, global::System.Boolean isDefault)
        {
            ConfigurationLocation configurationLocation = new ConfigurationLocation();
            configurationLocation.configurationLocationId = configurationLocationId;
            configurationLocation.configurationId = configurationId;
            configurationLocation.locationId = locationId;
            configurationLocation.isDefault = isDefault;
            return configurationLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationLocationId
        {
            get
            {
                return _configurationLocationId;
            }
            set
            {
                if (_configurationLocationId != value)
                {
                    OnconfigurationLocationIdChanging(value);
                    ReportPropertyChanging("configurationLocationId");
                    _configurationLocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("configurationLocationId");
                    OnconfigurationLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _configurationLocationId;
        partial void OnconfigurationLocationIdChanging(global::System.Int32 value);
        partial void OnconfigurationLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                OnconfigurationIdChanging(value);
                ReportPropertyChanging("configurationId");
                _configurationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configurationId");
                OnconfigurationIdChanged();
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                OnlocationIdChanging(value);
                ReportPropertyChanging("locationId");
                _locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("locationId");
                OnlocationIdChanged();
            }
        }
        private global::System.Int32 _locationId;
        partial void OnlocationIdChanging(global::System.Int32 value);
        partial void OnlocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDefault
        {
            get
            {
                return _isDefault;
            }
            set
            {
                OnisDefaultChanging(value);
                ReportPropertyChanging("isDefault");
                _isDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDefault");
                OnisDefaultChanged();
            }
        }
        private global::System.Boolean _isDefault;
        partial void OnisDefaultChanging(global::System.Boolean value);
        partial void OnisDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationConfigurationLocation", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationConfigurationLocation", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationConfigurationLocation", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationConfigurationLocation", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("WCSModel.FK_ConfigurationConfigurationLocation", "Configuration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationConfigurationLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationConfigurationLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationConfigurationLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationConfigurationLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_LocationConfigurationLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="ConfigurationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigurationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigurationType object.
        /// </summary>
        /// <param name="configurationTypeId">Initial value of the ConfigurationTypeId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static ConfigurationType CreateConfigurationType(global::System.Int32 configurationTypeId, global::System.String name)
        {
            ConfigurationType configurationType = new ConfigurationType();
            configurationType.ConfigurationTypeId = configurationTypeId;
            configurationType.name = name;
            return configurationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationTypeId
        {
            get
            {
                return _ConfigurationTypeId;
            }
            set
            {
                if (_ConfigurationTypeId != value)
                {
                    OnConfigurationTypeIdChanging(value);
                    ReportPropertyChanging("ConfigurationTypeId");
                    _ConfigurationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigurationTypeId");
                    OnConfigurationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ConfigurationTypeId;
        partial void OnConfigurationTypeIdChanging(global::System.Int32 value);
        partial void OnConfigurationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationConfigurationType", "Configuration")]
        public EntityCollection<Configuration> Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration>("WCSModel.FK_ConfigurationConfigurationType", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration>("WCSModel.FK_ConfigurationConfigurationType", "Configuration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Connection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Connection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Connection object.
        /// </summary>
        /// <param name="connectionId">Initial value of the connectionId property.</param>
        /// <param name="connectionTime">Initial value of the connectionTime property.</param>
        /// <param name="deviceId">Initial value of the deviceId property.</param>
        public static Connection CreateConnection(global::System.Int32 connectionId, global::System.DateTime connectionTime, global::System.Int32 deviceId)
        {
            Connection connection = new Connection();
            connection.connectionId = connectionId;
            connection.connectionTime = connectionTime;
            connection.deviceId = deviceId;
            return connection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connectionId
        {
            get
            {
                return _connectionId;
            }
            set
            {
                if (_connectionId != value)
                {
                    OnconnectionIdChanging(value);
                    ReportPropertyChanging("connectionId");
                    _connectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("connectionId");
                    OnconnectionIdChanged();
                }
            }
        }
        private global::System.Int32 _connectionId;
        partial void OnconnectionIdChanging(global::System.Int32 value);
        partial void OnconnectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime connectionTime
        {
            get
            {
                return _connectionTime;
            }
            set
            {
                OnconnectionTimeChanging(value);
                ReportPropertyChanging("connectionTime");
                _connectionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connectionTime");
                OnconnectionTimeChanged();
            }
        }
        private global::System.DateTime _connectionTime;
        partial void OnconnectionTimeChanging(global::System.DateTime value);
        partial void OnconnectionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 deviceId
        {
            get
            {
                return _deviceId;
            }
            set
            {
                OndeviceIdChanging(value);
                ReportPropertyChanging("deviceId");
                _deviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deviceId");
                OndeviceIdChanged();
            }
        }
        private global::System.Int32 _deviceId;
        partial void OndeviceIdChanging(global::System.Int32 value);
        partial void OndeviceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DeviceConnection", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceConnection", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceConnection", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceConnection", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("WCSModel.FK_DeviceConnection", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="deviceId">Initial value of the deviceId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="lockTimeout">Initial value of the lockTimeout property.</param>
        /// <param name="configurationTimeout">Initial value of the configurationTimeout property.</param>
        public static Device CreateDevice(global::System.Int32 deviceId, global::System.String name, global::System.String description, global::System.Int32 lockTimeout, global::System.Int32 configurationTimeout)
        {
            Device device = new Device();
            device.deviceId = deviceId;
            device.name = name;
            device.description = description;
            device.lockTimeout = lockTimeout;
            device.configurationTimeout = configurationTimeout;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 deviceId
        {
            get
            {
                return _deviceId;
            }
            set
            {
                if (_deviceId != value)
                {
                    OndeviceIdChanging(value);
                    ReportPropertyChanging("deviceId");
                    _deviceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("deviceId");
                    OndeviceIdChanged();
                }
            }
        }
        private global::System.Int32 _deviceId;
        partial void OndeviceIdChanging(global::System.Int32 value);
        partial void OndeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String os
        {
            get
            {
                return _os;
            }
            set
            {
                OnosChanging(value);
                ReportPropertyChanging("os");
                _os = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("os");
                OnosChanged();
            }
        }
        private global::System.String _os;
        partial void OnosChanging(global::System.String value);
        partial void OnosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clientVersion
        {
            get
            {
                return _clientVersion;
            }
            set
            {
                OnclientVersionChanging(value);
                ReportPropertyChanging("clientVersion");
                _clientVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("clientVersion");
                OnclientVersionChanged();
            }
        }
        private global::System.String _clientVersion;
        partial void OnclientVersionChanging(global::System.String value);
        partial void OnclientVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastConnection
        {
            get
            {
                return _lastConnection;
            }
            set
            {
                OnlastConnectionChanging(value);
                ReportPropertyChanging("lastConnection");
                _lastConnection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastConnection");
                OnlastConnectionChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastConnection;
        partial void OnlastConnectionChanging(Nullable<global::System.DateTime> value);
        partial void OnlastConnectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                OnlocationIdChanging(value);
                ReportPropertyChanging("locationId");
                _locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("locationId");
                OnlocationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _locationId;
        partial void OnlocationIdChanging(Nullable<global::System.Int32> value);
        partial void OnlocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lockTimeout
        {
            get
            {
                return _lockTimeout;
            }
            set
            {
                OnlockTimeoutChanging(value);
                ReportPropertyChanging("lockTimeout");
                _lockTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lockTimeout");
                OnlockTimeoutChanged();
            }
        }
        private global::System.Int32 _lockTimeout;
        partial void OnlockTimeoutChanging(global::System.Int32 value);
        partial void OnlockTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationTimeout
        {
            get
            {
                return _configurationTimeout;
            }
            set
            {
                OnconfigurationTimeoutChanging(value);
                ReportPropertyChanging("configurationTimeout");
                _configurationTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configurationTimeout");
                OnconfigurationTimeoutChanged();
            }
        }
        private global::System.Int32 _configurationTimeout;
        partial void OnconfigurationTimeoutChanging(global::System.Int32 value);
        partial void OnconfigurationTimeoutChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DeviceConnection", "Connection")]
        public EntityCollection<Connection> Connection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connection>("WCSModel.FK_DeviceConnection", "Connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connection>("WCSModel.FK_DeviceConnection", "Connection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DeviceDeviceConfiguration", "DeviceConfiguration")]
        public EntityCollection<DeviceConfiguration> DeviceConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeviceConfiguration>("WCSModel.FK_DeviceDeviceConfiguration", "DeviceConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeviceConfiguration>("WCSModel.FK_DeviceDeviceConfiguration", "DeviceConfiguration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DevicePin", "Pin")]
        public EntityCollection<Pin> Pin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pin>("WCSModel.FK_DevicePin", "Pin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pin>("WCSModel.FK_DevicePin", "Pin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationWCS_Device", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationWCS_Device", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationWCS_Device", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationWCS_Device", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_LocationWCS_Device", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="DeviceConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeviceConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeviceConfiguration object.
        /// </summary>
        /// <param name="deviceId">Initial value of the deviceId property.</param>
        /// <param name="shortcutKeyNo">Initial value of the shortcutKeyNo property.</param>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="orderTimeout">Initial value of the orderTimeout property.</param>
        /// <param name="presenceTimeout">Initial value of the presenceTimeout property.</param>
        /// <param name="rfidTimeout">Initial value of the rfidTimeout property.</param>
        /// <param name="cleaningBedDataTimeout">Initial value of the cleaningBedDataTimeout property.</param>
        /// <param name="dischargeTimeout">Initial value of the dischargeTimeout property.</param>
        /// <param name="admissionsTimeout">Initial value of the admissionsTimeout property.</param>
        public static DeviceConfiguration CreateDeviceConfiguration(global::System.Int32 deviceId, global::System.Int32 shortcutKeyNo, global::System.Int32 configurationId, global::System.Int32 orderTimeout, global::System.Int32 presenceTimeout, global::System.Int32 rfidTimeout, global::System.Int32 cleaningBedDataTimeout, global::System.Int32 dischargeTimeout, global::System.Int32 admissionsTimeout)
        {
            DeviceConfiguration deviceConfiguration = new DeviceConfiguration();
            deviceConfiguration.deviceId = deviceId;
            deviceConfiguration.shortcutKeyNo = shortcutKeyNo;
            deviceConfiguration.configurationId = configurationId;
            deviceConfiguration.orderTimeout = orderTimeout;
            deviceConfiguration.presenceTimeout = presenceTimeout;
            deviceConfiguration.rfidTimeout = rfidTimeout;
            deviceConfiguration.cleaningBedDataTimeout = cleaningBedDataTimeout;
            deviceConfiguration.dischargeTimeout = dischargeTimeout;
            deviceConfiguration.admissionsTimeout = admissionsTimeout;
            return deviceConfiguration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 deviceId
        {
            get
            {
                return _deviceId;
            }
            set
            {
                if (_deviceId != value)
                {
                    OndeviceIdChanging(value);
                    ReportPropertyChanging("deviceId");
                    _deviceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("deviceId");
                    OndeviceIdChanged();
                }
            }
        }
        private global::System.Int32 _deviceId;
        partial void OndeviceIdChanging(global::System.Int32 value);
        partial void OndeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 shortcutKeyNo
        {
            get
            {
                return _shortcutKeyNo;
            }
            set
            {
                if (_shortcutKeyNo != value)
                {
                    OnshortcutKeyNoChanging(value);
                    ReportPropertyChanging("shortcutKeyNo");
                    _shortcutKeyNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("shortcutKeyNo");
                    OnshortcutKeyNoChanged();
                }
            }
        }
        private global::System.Int32 _shortcutKeyNo;
        partial void OnshortcutKeyNoChanging(global::System.Int32 value);
        partial void OnshortcutKeyNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                OnconfigurationIdChanging(value);
                ReportPropertyChanging("configurationId");
                _configurationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configurationId");
                OnconfigurationIdChanged();
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderTimeout
        {
            get
            {
                return _orderTimeout;
            }
            set
            {
                OnorderTimeoutChanging(value);
                ReportPropertyChanging("orderTimeout");
                _orderTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderTimeout");
                OnorderTimeoutChanged();
            }
        }
        private global::System.Int32 _orderTimeout;
        partial void OnorderTimeoutChanging(global::System.Int32 value);
        partial void OnorderTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 presenceTimeout
        {
            get
            {
                return _presenceTimeout;
            }
            set
            {
                OnpresenceTimeoutChanging(value);
                ReportPropertyChanging("presenceTimeout");
                _presenceTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("presenceTimeout");
                OnpresenceTimeoutChanged();
            }
        }
        private global::System.Int32 _presenceTimeout;
        partial void OnpresenceTimeoutChanging(global::System.Int32 value);
        partial void OnpresenceTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidTimeout
        {
            get
            {
                return _rfidTimeout;
            }
            set
            {
                OnrfidTimeoutChanging(value);
                ReportPropertyChanging("rfidTimeout");
                _rfidTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rfidTimeout");
                OnrfidTimeoutChanged();
            }
        }
        private global::System.Int32 _rfidTimeout;
        partial void OnrfidTimeoutChanging(global::System.Int32 value);
        partial void OnrfidTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cleaningBedDataTimeout
        {
            get
            {
                return _cleaningBedDataTimeout;
            }
            set
            {
                OncleaningBedDataTimeoutChanging(value);
                ReportPropertyChanging("cleaningBedDataTimeout");
                _cleaningBedDataTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cleaningBedDataTimeout");
                OncleaningBedDataTimeoutChanged();
            }
        }
        private global::System.Int32 _cleaningBedDataTimeout;
        partial void OncleaningBedDataTimeoutChanging(global::System.Int32 value);
        partial void OncleaningBedDataTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dischargeTimeout
        {
            get
            {
                return _dischargeTimeout;
            }
            set
            {
                OndischargeTimeoutChanging(value);
                ReportPropertyChanging("dischargeTimeout");
                _dischargeTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dischargeTimeout");
                OndischargeTimeoutChanged();
            }
        }
        private global::System.Int32 _dischargeTimeout;
        partial void OndischargeTimeoutChanging(global::System.Int32 value);
        partial void OndischargeTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 admissionsTimeout
        {
            get
            {
                return _admissionsTimeout;
            }
            set
            {
                OnadmissionsTimeoutChanging(value);
                ReportPropertyChanging("admissionsTimeout");
                _admissionsTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admissionsTimeout");
                OnadmissionsTimeoutChanged();
            }
        }
        private global::System.Int32 _admissionsTimeout;
        partial void OnadmissionsTimeoutChanging(global::System.Int32 value);
        partial void OnadmissionsTimeoutChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ConfigurationDeviceConfiguration", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationDeviceConfiguration", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationDeviceConfiguration", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WCSModel.FK_ConfigurationDeviceConfiguration", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("WCSModel.FK_ConfigurationDeviceConfiguration", "Configuration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DeviceDeviceConfiguration", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceDeviceConfiguration", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceDeviceConfiguration", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DeviceDeviceConfiguration", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("WCSModel.FK_DeviceDeviceConfiguration", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="doctorId">Initial value of the doctorId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        public static Doctor CreateDoctor(global::System.Int32 doctorId, global::System.String name, global::System.Int32 externalSourceId, global::System.String externalId)
        {
            Doctor doctor = new Doctor();
            doctor.doctorId = doctorId;
            doctor.name = name;
            doctor.externalSourceId = externalSourceId;
            doctor.externalId = externalId;
            return doctor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 doctorId
        {
            get
            {
                return _doctorId;
            }
            set
            {
                if (_doctorId != value)
                {
                    OndoctorIdChanging(value);
                    ReportPropertyChanging("doctorId");
                    _doctorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("doctorId");
                    OndoctorIdChanged();
                }
            }
        }
        private global::System.Int32 _doctorId;
        partial void OndoctorIdChanging(global::System.Int32 value);
        partial void OndoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderOrderingDoctor", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("WCSModel.FK_OrderOrderingDoctor", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("WCSModel.FK_OrderOrderingDoctor", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ExternalSourceDoctor", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceDoctor", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceDoctor", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceDoctor", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceDoctor", "ExternalSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="ExternalSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExternalSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalSource object.
        /// </summary>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="source">Initial value of the source property.</param>
        public static ExternalSource CreateExternalSource(global::System.Int32 externalSourceId, global::System.String source)
        {
            ExternalSource externalSource = new ExternalSource();
            externalSource.externalSourceId = externalSourceId;
            externalSource.source = source;
            return externalSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                if (_externalSourceId != value)
                {
                    OnexternalSourceIdChanging(value);
                    ReportPropertyChanging("externalSourceId");
                    _externalSourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("externalSourceId");
                    OnexternalSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the locationId property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="isEmergency">Initial value of the isEmergency property.</param>
        /// <param name="includeInMerge">Initial value of the includeInMerge property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.String code, global::System.String name, global::System.Boolean isEmergency, global::System.Boolean includeInMerge)
        {
            Location location = new Location();
            location.locationId = locationId;
            location.code = code;
            location.name = name;
            location.isEmergency = isEmergency;
            location.includeInMerge = includeInMerge;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                if (_locationId != value)
                {
                    OnlocationIdChanging(value);
                    ReportPropertyChanging("locationId");
                    _locationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("locationId");
                    OnlocationIdChanged();
                }
            }
        }
        private global::System.Int32 _locationId;
        partial void OnlocationIdChanging(global::System.Int32 value);
        partial void OnlocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isEmergency
        {
            get
            {
                return _isEmergency;
            }
            set
            {
                OnisEmergencyChanging(value);
                ReportPropertyChanging("isEmergency");
                _isEmergency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isEmergency");
                OnisEmergencyChanged();
            }
        }
        private global::System.Boolean _isEmergency;
        partial void OnisEmergencyChanging(global::System.Boolean value);
        partial void OnisEmergencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactInfo
        {
            get
            {
                return _contactInfo;
            }
            set
            {
                OncontactInfoChanging(value);
                ReportPropertyChanging("contactInfo");
                _contactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactInfo");
                OncontactInfoChanged();
            }
        }
        private global::System.String _contactInfo;
        partial void OncontactInfoChanging(global::System.String value);
        partial void OncontactInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WaitingArea_waitingAreaId
        {
            get
            {
                return _WaitingArea_waitingAreaId;
            }
            set
            {
                OnWaitingArea_waitingAreaIdChanging(value);
                ReportPropertyChanging("WaitingArea_waitingAreaId");
                _WaitingArea_waitingAreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WaitingArea_waitingAreaId");
                OnWaitingArea_waitingAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WaitingArea_waitingAreaId;
        partial void OnWaitingArea_waitingAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnWaitingArea_waitingAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean includeInMerge
        {
            get
            {
                return _includeInMerge;
            }
            set
            {
                OnincludeInMergeChanging(value);
                ReportPropertyChanging("includeInMerge");
                _includeInMerge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("includeInMerge");
                OnincludeInMergeChanged();
            }
        }
        private global::System.Boolean _includeInMerge;
        partial void OnincludeInMergeChanging(global::System.Boolean value);
        partial void OnincludeInMergeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionLocation", "Admission")]
        public EntityCollection<Admission> Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admission>("WCSModel.FK_AdmissionLocation", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admission>("WCSModel.FK_AdmissionLocation", "Admission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationConfigurationLocation", "ConfigurationLocation")]
        public EntityCollection<ConfigurationLocation> ConfigurationLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigurationLocation>("WCSModel.FK_LocationConfigurationLocation", "ConfigurationLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigurationLocation>("WCSModel.FK_LocationConfigurationLocation", "ConfigurationLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationWCS_Device", "Device")]
        public EntityCollection<Device> Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("WCSModel.FK_LocationWCS_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("WCSModel.FK_LocationWCS_Device", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationRoom", "Room")]
        public EntityCollection<Room> Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Room>("WCSModel.FK_LocationRoom", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Room>("WCSModel.FK_LocationRoom", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderLocation", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("WCSModel.FK_OrderLocation", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("WCSModel.FK_OrderLocation", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectorLocation", "RfidDetector")]
        public EntityCollection<RfidDetector> RfidDetector
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RfidDetector>("WCSModel.FK_RfidDetectorLocation", "RfidDetector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RfidDetector>("WCSModel.FK_RfidDetectorLocation", "RfidDetector", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_WaitingAreaLocation", "WaitingArea")]
        public WaitingArea WaitingArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaLocation", "WaitingArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaLocation", "WaitingArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WaitingArea> WaitingAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaLocation", "WaitingArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaLocation", "WaitingArea", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="noteId">Initial value of the noteId property.</param>
        /// <param name="noteOrder">Initial value of the noteOrder property.</param>
        public static Note CreateNote(global::System.Int32 noteId, global::System.Int32 noteOrder)
        {
            Note note = new Note();
            note.noteId = noteId;
            note.noteOrder = noteOrder;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 noteId
        {
            get
            {
                return _noteId;
            }
            set
            {
                if (_noteId != value)
                {
                    OnnoteIdChanging(value);
                    ReportPropertyChanging("noteId");
                    _noteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("noteId");
                    OnnoteIdChanged();
                }
            }
        }
        private global::System.Int32 _noteId;
        partial void OnnoteIdChanging(global::System.Int32 value);
        partial void OnnoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateCreated
        {
            get
            {
                return _dateCreated;
            }
            set
            {
                OndateCreatedChanging(value);
                ReportPropertyChanging("dateCreated");
                _dateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateCreated");
                OndateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateCreated;
        partial void OndateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OndateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 noteOrder
        {
            get
            {
                return _noteOrder;
            }
            set
            {
                OnnoteOrderChanging(value);
                ReportPropertyChanging("noteOrder");
                _noteOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("noteOrder");
                OnnoteOrderChanged();
            }
        }
        private global::System.Int32 _noteOrder;
        partial void OnnoteOrderChanging(global::System.Int32 value);
        partial void OnnoteOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> bedId
        {
            get
            {
                return _bedId;
            }
            set
            {
                OnbedIdChanging(value);
                ReportPropertyChanging("bedId");
                _bedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bedId");
                OnbedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _bedId;
        partial void OnbedIdChanging(Nullable<global::System.Int32> value);
        partial void OnbedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> orderId
        {
            get
            {
                return _orderId;
            }
            set
            {
                OnorderIdChanging(value);
                ReportPropertyChanging("orderId");
                _orderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderId");
                OnorderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _orderId;
        partial void OnorderIdChanging(Nullable<global::System.Int32> value);
        partial void OnorderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedNote", "Bed")]
        public Bed Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedNote", "Bed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedNote", "Bed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bed> BedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_BedNote", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bed>("WCSModel.FK_BedNote", "Bed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderNote", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNote", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNote", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNote", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("WCSModel.FK_OrderNote", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="notificationId">Initial value of the notificationId property.</param>
        /// <param name="notificationTypeId">Initial value of the notificationTypeId property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="priorToProcedureTime">Initial value of the priorToProcedureTime property.</param>
        /// <param name="isAcknowledgmentRequired">Initial value of the isAcknowledgmentRequired property.</param>
        /// <param name="acknowledged">Initial value of the acknowledged property.</param>
        /// <param name="orderId">Initial value of the orderId property.</param>
        /// <param name="durationMinutes">Initial value of the durationMinutes property.</param>
        /// <param name="radiationRiskDurationMinutes">Initial value of the radiationRiskDurationMinutes property.</param>
        public static Notification CreateNotification(global::System.Int32 notificationId, global::System.Int32 notificationTypeId, global::System.String description, global::System.Int32 priorToProcedureTime, global::System.Boolean isAcknowledgmentRequired, global::System.Boolean acknowledged, global::System.Int32 orderId, global::System.Int32 durationMinutes, global::System.Int32 radiationRiskDurationMinutes)
        {
            Notification notification = new Notification();
            notification.notificationId = notificationId;
            notification.notificationTypeId = notificationTypeId;
            notification.description = description;
            notification.priorToProcedureTime = priorToProcedureTime;
            notification.isAcknowledgmentRequired = isAcknowledgmentRequired;
            notification.acknowledged = acknowledged;
            notification.orderId = orderId;
            notification.durationMinutes = durationMinutes;
            notification.radiationRiskDurationMinutes = radiationRiskDurationMinutes;
            return notification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notificationId
        {
            get
            {
                return _notificationId;
            }
            set
            {
                if (_notificationId != value)
                {
                    OnnotificationIdChanging(value);
                    ReportPropertyChanging("notificationId");
                    _notificationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("notificationId");
                    OnnotificationIdChanged();
                }
            }
        }
        private global::System.Int32 _notificationId;
        partial void OnnotificationIdChanging(global::System.Int32 value);
        partial void OnnotificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notificationTypeId
        {
            get
            {
                return _notificationTypeId;
            }
            set
            {
                OnnotificationTypeIdChanging(value);
                ReportPropertyChanging("notificationTypeId");
                _notificationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notificationTypeId");
                OnnotificationTypeIdChanged();
            }
        }
        private global::System.Int32 _notificationTypeId;
        partial void OnnotificationTypeIdChanging(global::System.Int32 value);
        partial void OnnotificationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 priorToProcedureTime
        {
            get
            {
                return _priorToProcedureTime;
            }
            set
            {
                OnpriorToProcedureTimeChanging(value);
                ReportPropertyChanging("priorToProcedureTime");
                _priorToProcedureTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("priorToProcedureTime");
                OnpriorToProcedureTimeChanged();
            }
        }
        private global::System.Int32 _priorToProcedureTime;
        partial void OnpriorToProcedureTimeChanging(global::System.Int32 value);
        partial void OnpriorToProcedureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAcknowledgmentRequired
        {
            get
            {
                return _isAcknowledgmentRequired;
            }
            set
            {
                OnisAcknowledgmentRequiredChanging(value);
                ReportPropertyChanging("isAcknowledgmentRequired");
                _isAcknowledgmentRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAcknowledgmentRequired");
                OnisAcknowledgmentRequiredChanged();
            }
        }
        private global::System.Boolean _isAcknowledgmentRequired;
        partial void OnisAcknowledgmentRequiredChanging(global::System.Boolean value);
        partial void OnisAcknowledgmentRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean acknowledged
        {
            get
            {
                return _acknowledged;
            }
            set
            {
                OnacknowledgedChanging(value);
                ReportPropertyChanging("acknowledged");
                _acknowledged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acknowledged");
                OnacknowledgedChanged();
            }
        }
        private global::System.Boolean _acknowledged;
        partial void OnacknowledgedChanging(global::System.Boolean value);
        partial void OnacknowledgedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> acknowledgedTime
        {
            get
            {
                return _acknowledgedTime;
            }
            set
            {
                OnacknowledgedTimeChanging(value);
                ReportPropertyChanging("acknowledgedTime");
                _acknowledgedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acknowledgedTime");
                OnacknowledgedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _acknowledgedTime;
        partial void OnacknowledgedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnacknowledgedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String acknowledgedBy
        {
            get
            {
                return _acknowledgedBy;
            }
            set
            {
                OnacknowledgedByChanging(value);
                ReportPropertyChanging("acknowledgedBy");
                _acknowledgedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("acknowledgedBy");
                OnacknowledgedByChanged();
            }
        }
        private global::System.String _acknowledgedBy;
        partial void OnacknowledgedByChanging(global::System.String value);
        partial void OnacknowledgedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> notificationOrder
        {
            get
            {
                return _notificationOrder;
            }
            set
            {
                OnnotificationOrderChanging(value);
                ReportPropertyChanging("notificationOrder");
                _notificationOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notificationOrder");
                OnnotificationOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _notificationOrder;
        partial void OnnotificationOrderChanging(Nullable<global::System.Int32> value);
        partial void OnnotificationOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderId
        {
            get
            {
                return _orderId;
            }
            set
            {
                OnorderIdChanging(value);
                ReportPropertyChanging("orderId");
                _orderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderId");
                OnorderIdChanged();
            }
        }
        private global::System.Int32 _orderId;
        partial void OnorderIdChanging(global::System.Int32 value);
        partial void OnorderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 durationMinutes
        {
            get
            {
                return _durationMinutes;
            }
            set
            {
                OndurationMinutesChanging(value);
                ReportPropertyChanging("durationMinutes");
                _durationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("durationMinutes");
                OndurationMinutesChanged();
            }
        }
        private global::System.Int32 _durationMinutes;
        partial void OndurationMinutesChanging(global::System.Int32 value);
        partial void OndurationMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 radiationRiskDurationMinutes
        {
            get
            {
                return _radiationRiskDurationMinutes;
            }
            set
            {
                OnradiationRiskDurationMinutesChanging(value);
                ReportPropertyChanging("radiationRiskDurationMinutes");
                _radiationRiskDurationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("radiationRiskDurationMinutes");
                OnradiationRiskDurationMinutesChanged();
            }
        }
        private global::System.Int32 _radiationRiskDurationMinutes;
        partial void OnradiationRiskDurationMinutesChanging(global::System.Int32 value);
        partial void OnradiationRiskDurationMinutesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_NotificationNotificationType", "NotificationType")]
        public NotificationType NotificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("WCSModel.FK_NotificationNotificationType", "NotificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("WCSModel.FK_NotificationNotificationType", "NotificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationType> NotificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("WCSModel.FK_NotificationNotificationType", "NotificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationType>("WCSModel.FK_NotificationNotificationType", "NotificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderNotification", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNotification", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNotification", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_OrderNotification", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("WCSModel.FK_OrderNotification", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="NotificationRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationRule object.
        /// </summary>
        /// <param name="notificationRuleId">Initial value of the notificationRuleId property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="priorToProcedureTime">Initial value of the priorToProcedureTime property.</param>
        /// <param name="durationMinutes">Initial value of the durationMinutes property.</param>
        /// <param name="isAcknowledgmentRequired">Initial value of the isAcknowledgmentRequired property.</param>
        /// <param name="procedure_procedureId">Initial value of the Procedure_procedureId property.</param>
        /// <param name="radiationRiskDurationMinutes">Initial value of the radiationRiskDurationMinutes property.</param>
        public static NotificationRule CreateNotificationRule(global::System.Int32 notificationRuleId, global::System.String description, global::System.Int32 priorToProcedureTime, global::System.Int32 durationMinutes, global::System.Boolean isAcknowledgmentRequired, global::System.Int32 procedure_procedureId, global::System.Int32 radiationRiskDurationMinutes)
        {
            NotificationRule notificationRule = new NotificationRule();
            notificationRule.notificationRuleId = notificationRuleId;
            notificationRule.description = description;
            notificationRule.priorToProcedureTime = priorToProcedureTime;
            notificationRule.durationMinutes = durationMinutes;
            notificationRule.isAcknowledgmentRequired = isAcknowledgmentRequired;
            notificationRule.Procedure_procedureId = procedure_procedureId;
            notificationRule.radiationRiskDurationMinutes = radiationRiskDurationMinutes;
            return notificationRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notificationRuleId
        {
            get
            {
                return _notificationRuleId;
            }
            set
            {
                if (_notificationRuleId != value)
                {
                    OnnotificationRuleIdChanging(value);
                    ReportPropertyChanging("notificationRuleId");
                    _notificationRuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("notificationRuleId");
                    OnnotificationRuleIdChanged();
                }
            }
        }
        private global::System.Int32 _notificationRuleId;
        partial void OnnotificationRuleIdChanging(global::System.Int32 value);
        partial void OnnotificationRuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 priorToProcedureTime
        {
            get
            {
                return _priorToProcedureTime;
            }
            set
            {
                OnpriorToProcedureTimeChanging(value);
                ReportPropertyChanging("priorToProcedureTime");
                _priorToProcedureTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("priorToProcedureTime");
                OnpriorToProcedureTimeChanged();
            }
        }
        private global::System.Int32 _priorToProcedureTime;
        partial void OnpriorToProcedureTimeChanging(global::System.Int32 value);
        partial void OnpriorToProcedureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 durationMinutes
        {
            get
            {
                return _durationMinutes;
            }
            set
            {
                OndurationMinutesChanging(value);
                ReportPropertyChanging("durationMinutes");
                _durationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("durationMinutes");
                OndurationMinutesChanged();
            }
        }
        private global::System.Int32 _durationMinutes;
        partial void OndurationMinutesChanging(global::System.Int32 value);
        partial void OndurationMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAcknowledgmentRequired
        {
            get
            {
                return _isAcknowledgmentRequired;
            }
            set
            {
                OnisAcknowledgmentRequiredChanging(value);
                ReportPropertyChanging("isAcknowledgmentRequired");
                _isAcknowledgmentRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAcknowledgmentRequired");
                OnisAcknowledgmentRequiredChanged();
            }
        }
        private global::System.Boolean _isAcknowledgmentRequired;
        partial void OnisAcknowledgmentRequiredChanging(global::System.Boolean value);
        partial void OnisAcknowledgmentRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Procedure_procedureId
        {
            get
            {
                return _Procedure_procedureId;
            }
            set
            {
                OnProcedure_procedureIdChanging(value);
                ReportPropertyChanging("Procedure_procedureId");
                _Procedure_procedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Procedure_procedureId");
                OnProcedure_procedureIdChanged();
            }
        }
        private global::System.Int32 _Procedure_procedureId;
        partial void OnProcedure_procedureIdChanging(global::System.Int32 value);
        partial void OnProcedure_procedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 radiationRiskDurationMinutes
        {
            get
            {
                return _radiationRiskDurationMinutes;
            }
            set
            {
                OnradiationRiskDurationMinutesChanging(value);
                ReportPropertyChanging("radiationRiskDurationMinutes");
                _radiationRiskDurationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("radiationRiskDurationMinutes");
                OnradiationRiskDurationMinutesChanged();
            }
        }
        private global::System.Int32 _radiationRiskDurationMinutes;
        partial void OnradiationRiskDurationMinutesChanging(global::System.Int32 value);
        partial void OnradiationRiskDurationMinutesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_NotificationRuleProcedure", "Procedure")]
        public Procedure Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_NotificationRuleProcedure", "Procedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_NotificationRuleProcedure", "Procedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Procedure> ProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_NotificationRuleProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Procedure>("WCSModel.FK_NotificationRuleProcedure", "Procedure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="NotificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationType object.
        /// </summary>
        /// <param name="notificationTypeId">Initial value of the notificationTypeId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static NotificationType CreateNotificationType(global::System.Int32 notificationTypeId, global::System.String name)
        {
            NotificationType notificationType = new NotificationType();
            notificationType.notificationTypeId = notificationTypeId;
            notificationType.name = name;
            return notificationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notificationTypeId
        {
            get
            {
                return _notificationTypeId;
            }
            set
            {
                if (_notificationTypeId != value)
                {
                    OnnotificationTypeIdChanging(value);
                    ReportPropertyChanging("notificationTypeId");
                    _notificationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("notificationTypeId");
                    OnnotificationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _notificationTypeId;
        partial void OnnotificationTypeIdChanging(global::System.Int32 value);
        partial void OnnotificationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_NotificationNotificationType", "Notification")]
        public EntityCollection<Notification> Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("WCSModel.FK_NotificationNotificationType", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("WCSModel.FK_NotificationNotificationType", "Notification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderId">Initial value of the orderId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="orderStatusId">Initial value of the orderStatusId property.</param>
        /// <param name="admissionId">Initial value of the admissionId property.</param>
        /// <param name="procedure_procedureId">Initial value of the Procedure_procedureId property.</param>
        /// <param name="department_locationId">Initial value of the Department_locationId property.</param>
        /// <param name="isHidden">Initial value of the isHidden property.</param>
        /// <param name="acknowledged">Initial value of the acknowledged property.</param>
        /// <param name="requiresSupervision">Initial value of the requiresSupervision property.</param>
        /// <param name="requiresFootwear">Initial value of the requiresFootwear property.</param>
        /// <param name="requiresMedicalRecords">Initial value of the requiresMedicalRecords property.</param>
        public static Order CreateOrder(global::System.Int32 orderId, global::System.Int32 externalSourceId, global::System.String externalId, global::System.Int32 orderStatusId, global::System.Int32 admissionId, global::System.Int32 procedure_procedureId, global::System.Int32 department_locationId, global::System.Boolean isHidden, global::System.Boolean acknowledged, global::System.Boolean requiresSupervision, global::System.Boolean requiresFootwear, global::System.Boolean requiresMedicalRecords)
        {
            Order order = new Order();
            order.orderId = orderId;
            order.externalSourceId = externalSourceId;
            order.externalId = externalId;
            order.orderStatusId = orderStatusId;
            order.admissionId = admissionId;
            order.Procedure_procedureId = procedure_procedureId;
            order.Department_locationId = department_locationId;
            order.isHidden = isHidden;
            order.acknowledged = acknowledged;
            order.requiresSupervision = requiresSupervision;
            order.requiresFootwear = requiresFootwear;
            order.requiresMedicalRecords = requiresMedicalRecords;
            return order;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderId
        {
            get
            {
                return _orderId;
            }
            set
            {
                if (_orderId != value)
                {
                    OnorderIdChanging(value);
                    ReportPropertyChanging("orderId");
                    _orderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderId");
                    OnorderIdChanged();
                }
            }
        }
        private global::System.Int32 _orderId;
        partial void OnorderIdChanging(global::System.Int32 value);
        partial void OnorderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String orderNumber
        {
            get
            {
                return _orderNumber;
            }
            set
            {
                OnorderNumberChanging(value);
                ReportPropertyChanging("orderNumber");
                _orderNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("orderNumber");
                OnorderNumberChanged();
            }
        }
        private global::System.String _orderNumber;
        partial void OnorderNumberChanging(global::System.String value);
        partial void OnorderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> procedureTime
        {
            get
            {
                return _procedureTime;
            }
            set
            {
                OnprocedureTimeChanging(value);
                ReportPropertyChanging("procedureTime");
                _procedureTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("procedureTime");
                OnprocedureTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _procedureTime;
        partial void OnprocedureTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnprocedureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderStatusId
        {
            get
            {
                return _orderStatusId;
            }
            set
            {
                OnorderStatusIdChanging(value);
                ReportPropertyChanging("orderStatusId");
                _orderStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderStatusId");
                OnorderStatusIdChanged();
            }
        }
        private global::System.Int32 _orderStatusId;
        partial void OnorderStatusIdChanging(global::System.Int32 value);
        partial void OnorderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> completedTime
        {
            get
            {
                return _completedTime;
            }
            set
            {
                OncompletedTimeChanging(value);
                ReportPropertyChanging("completedTime");
                _completedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("completedTime");
                OncompletedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _completedTime;
        partial void OncompletedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OncompletedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 admissionId
        {
            get
            {
                return _admissionId;
            }
            set
            {
                OnadmissionIdChanging(value);
                ReportPropertyChanging("admissionId");
                _admissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("admissionId");
                OnadmissionIdChanged();
            }
        }
        private global::System.Int32 _admissionId;
        partial void OnadmissionIdChanging(global::System.Int32 value);
        partial void OnadmissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String clinicalIndicator
        {
            get
            {
                return _clinicalIndicator;
            }
            set
            {
                OnclinicalIndicatorChanging(value);
                ReportPropertyChanging("clinicalIndicator");
                _clinicalIndicator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("clinicalIndicator");
                OnclinicalIndicatorChanged();
            }
        }
        private global::System.String _clinicalIndicator;
        partial void OnclinicalIndicatorChanging(global::System.String value);
        partial void OnclinicalIndicatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> estimatedProcedureDuration
        {
            get
            {
                return _estimatedProcedureDuration;
            }
            set
            {
                OnestimatedProcedureDurationChanging(value);
                ReportPropertyChanging("estimatedProcedureDuration");
                _estimatedProcedureDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("estimatedProcedureDuration");
                OnestimatedProcedureDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _estimatedProcedureDuration;
        partial void OnestimatedProcedureDurationChanging(Nullable<global::System.Int32> value);
        partial void OnestimatedProcedureDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Procedure_procedureId
        {
            get
            {
                return _Procedure_procedureId;
            }
            set
            {
                OnProcedure_procedureIdChanging(value);
                ReportPropertyChanging("Procedure_procedureId");
                _Procedure_procedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Procedure_procedureId");
                OnProcedure_procedureIdChanged();
            }
        }
        private global::System.Int32 _Procedure_procedureId;
        partial void OnProcedure_procedureIdChanging(global::System.Int32 value);
        partial void OnProcedure_procedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Department_locationId
        {
            get
            {
                return _Department_locationId;
            }
            set
            {
                OnDepartment_locationIdChanging(value);
                ReportPropertyChanging("Department_locationId");
                _Department_locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Department_locationId");
                OnDepartment_locationIdChanged();
            }
        }
        private global::System.Int32 _Department_locationId;
        partial void OnDepartment_locationIdChanging(global::System.Int32 value);
        partial void OnDepartment_locationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderingDoctor_doctorId
        {
            get
            {
                return _OrderingDoctor_doctorId;
            }
            set
            {
                OnOrderingDoctor_doctorIdChanging(value);
                ReportPropertyChanging("OrderingDoctor_doctorId");
                _OrderingDoctor_doctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderingDoctor_doctorId");
                OnOrderingDoctor_doctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderingDoctor_doctorId;
        partial void OnOrderingDoctor_doctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrderingDoctor_doctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isHidden
        {
            get
            {
                return _isHidden;
            }
            set
            {
                OnisHiddenChanging(value);
                ReportPropertyChanging("isHidden");
                _isHidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isHidden");
                OnisHiddenChanged();
            }
        }
        private global::System.Boolean _isHidden;
        partial void OnisHiddenChanging(global::System.Boolean value);
        partial void OnisHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean acknowledged
        {
            get
            {
                return _acknowledged;
            }
            set
            {
                OnacknowledgedChanging(value);
                ReportPropertyChanging("acknowledged");
                _acknowledged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acknowledged");
                OnacknowledgedChanged();
            }
        }
        private global::System.Boolean _acknowledged;
        partial void OnacknowledgedChanging(global::System.Boolean value);
        partial void OnacknowledgedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> acknowledgedTime
        {
            get
            {
                return _acknowledgedTime;
            }
            set
            {
                OnacknowledgedTimeChanging(value);
                ReportPropertyChanging("acknowledgedTime");
                _acknowledgedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("acknowledgedTime");
                OnacknowledgedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _acknowledgedTime;
        partial void OnacknowledgedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnacknowledgedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String acknowledgedBy
        {
            get
            {
                return _acknowledgedBy;
            }
            set
            {
                OnacknowledgedByChanging(value);
                ReportPropertyChanging("acknowledgedBy");
                _acknowledgedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("acknowledgedBy");
                OnacknowledgedByChanged();
            }
        }
        private global::System.String _acknowledgedBy;
        partial void OnacknowledgedByChanging(global::System.String value);
        partial void OnacknowledgedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String history
        {
            get
            {
                return _history;
            }
            set
            {
                OnhistoryChanging(value);
                ReportPropertyChanging("history");
                _history = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("history");
                OnhistoryChanged();
            }
        }
        private global::System.String _history;
        partial void OnhistoryChanging(global::System.String value);
        partial void OnhistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String diagnosis
        {
            get
            {
                return _diagnosis;
            }
            set
            {
                OndiagnosisChanging(value);
                ReportPropertyChanging("diagnosis");
                _diagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("diagnosis");
                OndiagnosisChanged();
            }
        }
        private global::System.String _diagnosis;
        partial void OndiagnosisChanging(global::System.String value);
        partial void OndiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean requiresSupervision
        {
            get
            {
                return _requiresSupervision;
            }
            set
            {
                OnrequiresSupervisionChanging(value);
                ReportPropertyChanging("requiresSupervision");
                _requiresSupervision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requiresSupervision");
                OnrequiresSupervisionChanged();
            }
        }
        private global::System.Boolean _requiresSupervision;
        partial void OnrequiresSupervisionChanging(global::System.Boolean value);
        partial void OnrequiresSupervisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currentCardiologist
        {
            get
            {
                return _currentCardiologist;
            }
            set
            {
                OncurrentCardiologistChanging(value);
                ReportPropertyChanging("currentCardiologist");
                _currentCardiologist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currentCardiologist");
                OncurrentCardiologistChanged();
            }
        }
        private global::System.String _currentCardiologist;
        partial void OncurrentCardiologistChanging(global::System.String value);
        partial void OncurrentCardiologistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean requiresFootwear
        {
            get
            {
                return _requiresFootwear;
            }
            set
            {
                OnrequiresFootwearChanging(value);
                ReportPropertyChanging("requiresFootwear");
                _requiresFootwear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requiresFootwear");
                OnrequiresFootwearChanged();
            }
        }
        private global::System.Boolean _requiresFootwear;
        partial void OnrequiresFootwearChanging(global::System.Boolean value);
        partial void OnrequiresFootwearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean requiresMedicalRecords
        {
            get
            {
                return _requiresMedicalRecords;
            }
            set
            {
                OnrequiresMedicalRecordsChanging(value);
                ReportPropertyChanging("requiresMedicalRecords");
                _requiresMedicalRecords = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("requiresMedicalRecords");
                OnrequiresMedicalRecordsChanged();
            }
        }
        private global::System.Boolean _requiresMedicalRecords;
        partial void OnrequiresMedicalRecordsChanging(global::System.Boolean value);
        partial void OnrequiresMedicalRecordsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_AdmissionOrder", "Admission")]
        public Admission Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_AdmissionOrder", "Admission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_AdmissionOrder", "Admission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Admission> AdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_AdmissionOrder", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Admission>("WCSModel.FK_AdmissionOrder", "Admission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderOrderingDoctor", "Doctor")]
        public Doctor OrderingDoctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_OrderOrderingDoctor", "Doctor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_OrderOrderingDoctor", "Doctor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> OrderingDoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("WCSModel.FK_OrderOrderingDoctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("WCSModel.FK_OrderOrderingDoctor", "Doctor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ExternalSourceOrder", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceOrder", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceOrder", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceOrder", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceOrder", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderLocation", "Location")]
        public Location Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_OrderLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_OrderLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_OrderLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_OrderLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderNote", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("WCSModel.FK_OrderNote", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("WCSModel.FK_OrderNote", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderNotification", "Notification")]
        public EntityCollection<Notification> Notifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("WCSModel.FK_OrderNotification", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("WCSModel.FK_OrderNotification", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderProcedure", "Procedure")]
        public Procedure Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_OrderProcedure", "Procedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_OrderProcedure", "Procedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Procedure> ProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WCSModel.FK_OrderProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Procedure>("WCSModel.FK_OrderProcedure", "Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderStatusOrder", "OrderStatus")]
        public OrderStatus OrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("WCSModel.FK_OrderStatusOrder", "OrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("WCSModel.FK_OrderStatusOrder", "OrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatus> OrderStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("WCSModel.FK_OrderStatusOrder", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatus>("WCSModel.FK_OrderStatusOrder", "OrderStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateOrder", "Update")]
        public EntityCollection<Update> Updates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Update>("WCSModel.FK_UpdateOrder", "Update");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Update>("WCSModel.FK_UpdateOrder", "Update", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="OrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderStatus object.
        /// </summary>
        /// <param name="orderStatusId">Initial value of the orderStatusId property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static OrderStatus CreateOrderStatus(global::System.Int32 orderStatusId, global::System.String status)
        {
            OrderStatus orderStatus = new OrderStatus();
            orderStatus.orderStatusId = orderStatusId;
            orderStatus.status = status;
            return orderStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderStatusId
        {
            get
            {
                return _orderStatusId;
            }
            set
            {
                if (_orderStatusId != value)
                {
                    OnorderStatusIdChanging(value);
                    ReportPropertyChanging("orderStatusId");
                    _orderStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderStatusId");
                    OnorderStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _orderStatusId;
        partial void OnorderStatusIdChanging(global::System.Int32 value);
        partial void OnorderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderStatusOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("WCSModel.FK_OrderStatusOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("WCSModel.FK_OrderStatusOrder", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="isMrsaPositive">Initial value of the isMrsaPositive property.</param>
        /// <param name="isFallRisk">Initial value of the isFallRisk property.</param>
        /// <param name="isAssistanceRequired">Initial value of the isAssistanceRequired property.</param>
        /// <param name="assistanceDescription">Initial value of the assistanceDescription property.</param>
        /// <param name="hasLatexAllergy">Initial value of the hasLatexAllergy property.</param>
        public static Patient CreatePatient(global::System.Int32 patientId, global::System.Int32 externalSourceId, global::System.String externalId, global::System.Boolean isMrsaPositive, global::System.Boolean isFallRisk, global::System.Boolean isAssistanceRequired, global::System.String assistanceDescription, global::System.Boolean hasLatexAllergy)
        {
            Patient patient = new Patient();
            patient.patientId = patientId;
            patient.externalSourceId = externalSourceId;
            patient.externalId = externalId;
            patient.isMrsaPositive = isMrsaPositive;
            patient.isFallRisk = isFallRisk;
            patient.isAssistanceRequired = isAssistanceRequired;
            patient.assistanceDescription = assistanceDescription;
            patient.hasLatexAllergy = hasLatexAllergy;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                if (_patientId != value)
                {
                    OnpatientIdChanging(value);
                    ReportPropertyChanging("patientId");
                    _patientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("patientId");
                    OnpatientIdChanged();
                }
            }
        }
        private global::System.Int32 _patientId;
        partial void OnpatientIdChanging(global::System.Int32 value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String givenName
        {
            get
            {
                return _givenName;
            }
            set
            {
                OngivenNameChanging(value);
                ReportPropertyChanging("givenName");
                _givenName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("givenName");
                OngivenNameChanged();
            }
        }
        private global::System.String _givenName;
        partial void OngivenNameChanging(global::System.String value);
        partial void OngivenNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dob
        {
            get
            {
                return _dob;
            }
            set
            {
                OndobChanging(value);
                ReportPropertyChanging("dob");
                _dob = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dob");
                OndobChanged();
            }
        }
        private Nullable<global::System.DateTime> _dob;
        partial void OndobChanging(Nullable<global::System.DateTime> value);
        partial void OndobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sex
        {
            get
            {
                return _sex;
            }
            set
            {
                OnsexChanging(value);
                ReportPropertyChanging("sex");
                _sex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sex");
                OnsexChanged();
            }
        }
        private global::System.String _sex;
        partial void OnsexChanging(global::System.String value);
        partial void OnsexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isMrsaPositive
        {
            get
            {
                return _isMrsaPositive;
            }
            set
            {
                OnisMrsaPositiveChanging(value);
                ReportPropertyChanging("isMrsaPositive");
                _isMrsaPositive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isMrsaPositive");
                OnisMrsaPositiveChanged();
            }
        }
        private global::System.Boolean _isMrsaPositive;
        partial void OnisMrsaPositiveChanging(global::System.Boolean value);
        partial void OnisMrsaPositiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isFallRisk
        {
            get
            {
                return _isFallRisk;
            }
            set
            {
                OnisFallRiskChanging(value);
                ReportPropertyChanging("isFallRisk");
                _isFallRisk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isFallRisk");
                OnisFallRiskChanged();
            }
        }
        private global::System.Boolean _isFallRisk;
        partial void OnisFallRiskChanging(global::System.Boolean value);
        partial void OnisFallRiskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAssistanceRequired
        {
            get
            {
                return _isAssistanceRequired;
            }
            set
            {
                OnisAssistanceRequiredChanging(value);
                ReportPropertyChanging("isAssistanceRequired");
                _isAssistanceRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAssistanceRequired");
                OnisAssistanceRequiredChanged();
            }
        }
        private global::System.Boolean _isAssistanceRequired;
        partial void OnisAssistanceRequiredChanging(global::System.Boolean value);
        partial void OnisAssistanceRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String assistanceDescription
        {
            get
            {
                return _assistanceDescription;
            }
            set
            {
                OnassistanceDescriptionChanging(value);
                ReportPropertyChanging("assistanceDescription");
                _assistanceDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("assistanceDescription");
                OnassistanceDescriptionChanged();
            }
        }
        private global::System.String _assistanceDescription;
        partial void OnassistanceDescriptionChanging(global::System.String value);
        partial void OnassistanceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean hasLatexAllergy
        {
            get
            {
                return _hasLatexAllergy;
            }
            set
            {
                OnhasLatexAllergyChanging(value);
                ReportPropertyChanging("hasLatexAllergy");
                _hasLatexAllergy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hasLatexAllergy");
                OnhasLatexAllergyChanged();
            }
        }
        private global::System.Boolean _hasLatexAllergy;
        partial void OnhasLatexAllergyChanging(global::System.Boolean value);
        partial void OnhasLatexAllergyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_PatientAdmission", "Admission")]
        public EntityCollection<Admission> Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Admission>("WCSModel.FK_PatientAdmission", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Admission>("WCSModel.FK_PatientAdmission", "Admission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_PatientExternalSource", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_PatientExternalSource", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_PatientExternalSource", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_PatientExternalSource", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_PatientExternalSource", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionPatient", "RfidDetection")]
        public EntityCollection<RfidDetection> RfidDetection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionPatient", "RfidDetection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionPatient", "RfidDetection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Pin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pin object.
        /// </summary>
        /// <param name="pinId">Initial value of the pinId property.</param>
        /// <param name="device_deviceId">Initial value of the Device_deviceId property.</param>
        /// <param name="pin1">Initial value of the pin property.</param>
        public static Pin CreatePin(global::System.Int32 pinId, global::System.Int32 device_deviceId, global::System.String pin1)
        {
            Pin pin = new Pin();
            pin.pinId = pinId;
            pin.Device_deviceId = device_deviceId;
            pin.pin = pin1;
            return pin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pinId
        {
            get
            {
                return _pinId;
            }
            set
            {
                if (_pinId != value)
                {
                    OnpinIdChanging(value);
                    ReportPropertyChanging("pinId");
                    _pinId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pinId");
                    OnpinIdChanged();
                }
            }
        }
        private global::System.Int32 _pinId;
        partial void OnpinIdChanging(global::System.Int32 value);
        partial void OnpinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Device_deviceId
        {
            get
            {
                return _Device_deviceId;
            }
            set
            {
                OnDevice_deviceIdChanging(value);
                ReportPropertyChanging("Device_deviceId");
                _Device_deviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Device_deviceId");
                OnDevice_deviceIdChanged();
            }
        }
        private global::System.Int32 _Device_deviceId;
        partial void OnDevice_deviceIdChanging(global::System.Int32 value);
        partial void OnDevice_deviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin
        {
            get
            {
                return _pin;
            }
            set
            {
                OnpinChanging(value);
                ReportPropertyChanging("pin");
                _pin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pin");
                OnpinChanged();
            }
        }
        private global::System.String _pin;
        partial void OnpinChanging(global::System.String value);
        partial void OnpinChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_DevicePin", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DevicePin", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DevicePin", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WCSModel.FK_DevicePin", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("WCSModel.FK_DevicePin", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Procedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Procedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Procedure object.
        /// </summary>
        /// <param name="procedureId">Initial value of the procedureId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="procedureCategory_procedureCategoryId">Initial value of the ProcedureCategory_procedureCategoryId property.</param>
        public static Procedure CreateProcedure(global::System.Int32 procedureId, global::System.Int32 externalSourceId, global::System.String externalId, global::System.String code, global::System.String description, global::System.Int32 procedureCategory_procedureCategoryId)
        {
            Procedure procedure = new Procedure();
            procedure.procedureId = procedureId;
            procedure.externalSourceId = externalSourceId;
            procedure.externalId = externalId;
            procedure.code = code;
            procedure.description = description;
            procedure.ProcedureCategory_procedureCategoryId = procedureCategory_procedureCategoryId;
            return procedure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 procedureId
        {
            get
            {
                return _procedureId;
            }
            set
            {
                if (_procedureId != value)
                {
                    OnprocedureIdChanging(value);
                    ReportPropertyChanging("procedureId");
                    _procedureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("procedureId");
                    OnprocedureIdChanged();
                }
            }
        }
        private global::System.Int32 _procedureId;
        partial void OnprocedureIdChanging(global::System.Int32 value);
        partial void OnprocedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> durationMinutes
        {
            get
            {
                return _durationMinutes;
            }
            set
            {
                OndurationMinutesChanging(value);
                ReportPropertyChanging("durationMinutes");
                _durationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("durationMinutes");
                OndurationMinutesChanged();
            }
        }
        private Nullable<global::System.Int32> _durationMinutes;
        partial void OndurationMinutesChanging(Nullable<global::System.Int32> value);
        partial void OndurationMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcedureCategory_procedureCategoryId
        {
            get
            {
                return _ProcedureCategory_procedureCategoryId;
            }
            set
            {
                OnProcedureCategory_procedureCategoryIdChanging(value);
                ReportPropertyChanging("ProcedureCategory_procedureCategoryId");
                _ProcedureCategory_procedureCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcedureCategory_procedureCategoryId");
                OnProcedureCategory_procedureCategoryIdChanged();
            }
        }
        private global::System.Int32 _ProcedureCategory_procedureCategoryId;
        partial void OnProcedureCategory_procedureCategoryIdChanging(global::System.Int32 value);
        partial void OnProcedureCategory_procedureCategoryIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ExternalSourceProcedure", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedure", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedure", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedure", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedure", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_NotificationRuleProcedure", "NotificationRule")]
        public EntityCollection<NotificationRule> NotificationRule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationRule>("WCSModel.FK_NotificationRuleProcedure", "NotificationRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationRule>("WCSModel.FK_NotificationRuleProcedure", "NotificationRule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_OrderProcedure", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("WCSModel.FK_OrderProcedure", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("WCSModel.FK_OrderProcedure", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ProcedureCategoryProcedure", "ProcedureCategory")]
        public ProcedureCategory ProcedureCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WCSModel.FK_ProcedureCategoryProcedure", "ProcedureCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WCSModel.FK_ProcedureCategoryProcedure", "ProcedureCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProcedureCategory> ProcedureCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WCSModel.FK_ProcedureCategoryProcedure", "ProcedureCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProcedureCategory>("WCSModel.FK_ProcedureCategoryProcedure", "ProcedureCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="ProcedureCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcedureCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcedureCategory object.
        /// </summary>
        /// <param name="procedureCategoryId">Initial value of the procedureCategoryId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="includeInMerge">Initial value of the includeInMerge property.</param>
        /// <param name="description">Initial value of the description property.</param>
        public static ProcedureCategory CreateProcedureCategory(global::System.Int32 procedureCategoryId, global::System.Int32 externalSourceId, global::System.String externalId, global::System.Boolean includeInMerge, global::System.String description)
        {
            ProcedureCategory procedureCategory = new ProcedureCategory();
            procedureCategory.procedureCategoryId = procedureCategoryId;
            procedureCategory.externalSourceId = externalSourceId;
            procedureCategory.externalId = externalId;
            procedureCategory.includeInMerge = includeInMerge;
            procedureCategory.description = description;
            return procedureCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 procedureCategoryId
        {
            get
            {
                return _procedureCategoryId;
            }
            set
            {
                if (_procedureCategoryId != value)
                {
                    OnprocedureCategoryIdChanging(value);
                    ReportPropertyChanging("procedureCategoryId");
                    _procedureCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("procedureCategoryId");
                    OnprocedureCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _procedureCategoryId;
        partial void OnprocedureCategoryIdChanging(global::System.Int32 value);
        partial void OnprocedureCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean includeInMerge
        {
            get
            {
                return _includeInMerge;
            }
            set
            {
                OnincludeInMergeChanging(value);
                ReportPropertyChanging("includeInMerge");
                _includeInMerge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("includeInMerge");
                OnincludeInMergeChanged();
            }
        }
        private global::System.Boolean _includeInMerge;
        partial void OnincludeInMergeChanging(global::System.Boolean value);
        partial void OnincludeInMergeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ExternalSourceProcedureCategory", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedureCategory", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedureCategory", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedureCategory", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_ExternalSourceProcedureCategory", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_ProcedureCategoryProcedure", "Procedure")]
        public EntityCollection<Procedure> Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Procedure>("WCSModel.FK_ProcedureCategoryProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Procedure>("WCSModel.FK_ProcedureCategoryProcedure", "Procedure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="RfidDetection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RfidDetection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RfidDetection object.
        /// </summary>
        /// <param name="rfidDetectionId">Initial value of the rfidDetectionId property.</param>
        /// <param name="patientId">Initial value of the patientId property.</param>
        /// <param name="rfidDirectionId">Initial value of the rfidDirectionId property.</param>
        /// <param name="rfidDetectorId">Initial value of the rfidDetectorId property.</param>
        /// <param name="dateTimeDetected">Initial value of the dateTimeDetected property.</param>
        public static RfidDetection CreateRfidDetection(global::System.Int32 rfidDetectionId, global::System.Int32 patientId, global::System.Int32 rfidDirectionId, global::System.Int32 rfidDetectorId, global::System.DateTime dateTimeDetected)
        {
            RfidDetection rfidDetection = new RfidDetection();
            rfidDetection.rfidDetectionId = rfidDetectionId;
            rfidDetection.patientId = patientId;
            rfidDetection.rfidDirectionId = rfidDirectionId;
            rfidDetection.rfidDetectorId = rfidDetectorId;
            rfidDetection.dateTimeDetected = dateTimeDetected;
            return rfidDetection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidDetectionId
        {
            get
            {
                return _rfidDetectionId;
            }
            set
            {
                if (_rfidDetectionId != value)
                {
                    OnrfidDetectionIdChanging(value);
                    ReportPropertyChanging("rfidDetectionId");
                    _rfidDetectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rfidDetectionId");
                    OnrfidDetectionIdChanged();
                }
            }
        }
        private global::System.Int32 _rfidDetectionId;
        partial void OnrfidDetectionIdChanging(global::System.Int32 value);
        partial void OnrfidDetectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 patientId
        {
            get
            {
                return _patientId;
            }
            set
            {
                OnpatientIdChanging(value);
                ReportPropertyChanging("patientId");
                _patientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("patientId");
                OnpatientIdChanged();
            }
        }
        private global::System.Int32 _patientId;
        partial void OnpatientIdChanging(global::System.Int32 value);
        partial void OnpatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidDirectionId
        {
            get
            {
                return _rfidDirectionId;
            }
            set
            {
                OnrfidDirectionIdChanging(value);
                ReportPropertyChanging("rfidDirectionId");
                _rfidDirectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rfidDirectionId");
                OnrfidDirectionIdChanged();
            }
        }
        private global::System.Int32 _rfidDirectionId;
        partial void OnrfidDirectionIdChanging(global::System.Int32 value);
        partial void OnrfidDirectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidDetectorId
        {
            get
            {
                return _rfidDetectorId;
            }
            set
            {
                OnrfidDetectorIdChanging(value);
                ReportPropertyChanging("rfidDetectorId");
                _rfidDetectorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rfidDetectorId");
                OnrfidDetectorIdChanged();
            }
        }
        private global::System.Int32 _rfidDetectorId;
        partial void OnrfidDetectorIdChanging(global::System.Int32 value);
        partial void OnrfidDetectorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateTimeDetected
        {
            get
            {
                return _dateTimeDetected;
            }
            set
            {
                OndateTimeDetectedChanging(value);
                ReportPropertyChanging("dateTimeDetected");
                _dateTimeDetected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateTimeDetected");
                OndateTimeDetectedChanged();
            }
        }
        private global::System.DateTime _dateTimeDetected;
        partial void OndateTimeDetectedChanging(global::System.DateTime value);
        partial void OndateTimeDetectedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionPatient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_RfidDetectionPatient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_RfidDetectionPatient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("WCSModel.FK_RfidDetectionPatient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("WCSModel.FK_RfidDetectionPatient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionRfidDetector", "RfidDetector")]
        public RfidDetector RfidDetector
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDetector>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetector").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDetector>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetector").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RfidDetector> RfidDetectorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDetector>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RfidDetector>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetector", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionRfidDirection", "RfidDirection")]
        public RfidDirection RfidDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDirection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDirection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RfidDirection> RfidDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RfidDirection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RfidDirection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="RfidDetector")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RfidDetector : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RfidDetector object.
        /// </summary>
        /// <param name="rfidDetectorId">Initial value of the rfidDetectorId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        public static RfidDetector CreateRfidDetector(global::System.Int32 rfidDetectorId, global::System.Int32 externalSourceId, global::System.String externalId)
        {
            RfidDetector rfidDetector = new RfidDetector();
            rfidDetector.rfidDetectorId = rfidDetectorId;
            rfidDetector.externalSourceId = externalSourceId;
            rfidDetector.externalId = externalId;
            return rfidDetector;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidDetectorId
        {
            get
            {
                return _rfidDetectorId;
            }
            set
            {
                if (_rfidDetectorId != value)
                {
                    OnrfidDetectorIdChanging(value);
                    ReportPropertyChanging("rfidDetectorId");
                    _rfidDetectorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rfidDetectorId");
                    OnrfidDetectorIdChanged();
                }
            }
        }
        private global::System.Int32 _rfidDetectorId;
        partial void OnrfidDetectorIdChanging(global::System.Int32 value);
        partial void OnrfidDetectorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Location_locationId
        {
            get
            {
                return _Location_locationId;
            }
            set
            {
                OnLocation_locationIdChanging(value);
                ReportPropertyChanging("Location_locationId");
                _Location_locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Location_locationId");
                OnLocation_locationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Location_locationId;
        partial void OnLocation_locationIdChanging(Nullable<global::System.Int32> value);
        partial void OnLocation_locationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WaitingArea_waitingAreaId
        {
            get
            {
                return _WaitingArea_waitingAreaId;
            }
            set
            {
                OnWaitingArea_waitingAreaIdChanging(value);
                ReportPropertyChanging("WaitingArea_waitingAreaId");
                _WaitingArea_waitingAreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WaitingArea_waitingAreaId");
                OnWaitingArea_waitingAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WaitingArea_waitingAreaId;
        partial void OnWaitingArea_waitingAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnWaitingArea_waitingAreaIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectorExternalSource", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_RfidDetectorExternalSource", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_RfidDetectorExternalSource", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WCSModel.FK_RfidDetectorExternalSource", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WCSModel.FK_RfidDetectorExternalSource", "ExternalSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectorLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_RfidDetectorLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_RfidDetectorLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_RfidDetectorLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_RfidDetectorLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionRfidDetector", "RfidDetection")]
        public EntityCollection<RfidDetection> RfidDetection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionRfidDetector", "RfidDetection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_WaitingAreaRfidDetector", "WaitingArea")]
        public WaitingArea WaitingArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaRfidDetector", "WaitingArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaRfidDetector", "WaitingArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WaitingArea> WaitingAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaRfidDetector", "WaitingArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WaitingArea>("WCSModel.FK_WaitingAreaRfidDetector", "WaitingArea", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="RfidDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RfidDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RfidDirection object.
        /// </summary>
        /// <param name="rfidDirectionId">Initial value of the rfidDirectionId property.</param>
        /// <param name="direction">Initial value of the direction property.</param>
        public static RfidDirection CreateRfidDirection(global::System.Int32 rfidDirectionId, global::System.String direction)
        {
            RfidDirection rfidDirection = new RfidDirection();
            rfidDirection.rfidDirectionId = rfidDirectionId;
            rfidDirection.direction = direction;
            return rfidDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rfidDirectionId
        {
            get
            {
                return _rfidDirectionId;
            }
            set
            {
                if (_rfidDirectionId != value)
                {
                    OnrfidDirectionIdChanging(value);
                    ReportPropertyChanging("rfidDirectionId");
                    _rfidDirectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rfidDirectionId");
                    OnrfidDirectionIdChanged();
                }
            }
        }
        private global::System.Int32 _rfidDirectionId;
        partial void OnrfidDirectionIdChanging(global::System.Int32 value);
        partial void OnrfidDirectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String direction
        {
            get
            {
                return _direction;
            }
            set
            {
                OndirectionChanging(value);
                ReportPropertyChanging("direction");
                _direction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("direction");
                OndirectionChanged();
            }
        }
        private global::System.String _direction;
        partial void OndirectionChanging(global::System.String value);
        partial void OndirectionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_RfidDetectionRfidDirection", "RfidDetection")]
        public EntityCollection<RfidDetection> RfidDetection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDetection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RfidDetection>("WCSModel.FK_RfidDetectionRfidDirection", "RfidDetection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="roomId">Initial value of the roomId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="location_locationId">Initial value of the Location_locationId property.</param>
        public static Room CreateRoom(global::System.Int32 roomId, global::System.String name, global::System.Int32 location_locationId)
        {
            Room room = new Room();
            room.roomId = roomId;
            room.name = name;
            room.Location_locationId = location_locationId;
            return room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 roomId
        {
            get
            {
                return _roomId;
            }
            set
            {
                if (_roomId != value)
                {
                    OnroomIdChanging(value);
                    ReportPropertyChanging("roomId");
                    _roomId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("roomId");
                    OnroomIdChanged();
                }
            }
        }
        private global::System.Int32 _roomId;
        partial void OnroomIdChanging(global::System.Int32 value);
        partial void OnroomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Location_locationId
        {
            get
            {
                return _Location_locationId;
            }
            set
            {
                OnLocation_locationIdChanging(value);
                ReportPropertyChanging("Location_locationId");
                _Location_locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Location_locationId");
                OnLocation_locationIdChanged();
            }
        }
        private global::System.Int32 _Location_locationId;
        partial void OnLocation_locationIdChanging(global::System.Int32 value);
        partial void OnLocation_locationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_BedRoom", "Bed")]
        public EntityCollection<Bed> Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bed>("WCSModel.FK_BedRoom", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bed>("WCSModel.FK_BedRoom", "Bed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_LocationRoom", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationRoom", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationRoom", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WCSModel.FK_LocationRoom", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WCSModel.FK_LocationRoom", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="Update")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Update : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Update object.
        /// </summary>
        /// <param name="updateId">Initial value of the updateId property.</param>
        public static Update CreateUpdate(global::System.Int32 updateId)
        {
            Update update = new Update();
            update.updateId = updateId;
            return update;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 updateId
        {
            get
            {
                return _updateId;
            }
            set
            {
                if (_updateId != value)
                {
                    OnupdateIdChanging(value);
                    ReportPropertyChanging("updateId");
                    _updateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("updateId");
                    OnupdateIdChanged();
                }
            }
        }
        private global::System.Int32 _updateId;
        partial void OnupdateIdChanging(global::System.Int32 value);
        partial void OnupdateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateCreated
        {
            get
            {
                return _dateCreated;
            }
            set
            {
                OndateCreatedChanging(value);
                ReportPropertyChanging("dateCreated");
                _dateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateCreated");
                OndateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateCreated;
        partial void OndateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OndateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Order_orderId
        {
            get
            {
                return _Order_orderId;
            }
            set
            {
                OnOrder_orderIdChanging(value);
                ReportPropertyChanging("Order_orderId");
                _Order_orderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order_orderId");
                OnOrder_orderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Order_orderId;
        partial void OnOrder_orderIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrder_orderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Bed_bedId
        {
            get
            {
                return _Bed_bedId;
            }
            set
            {
                OnBed_bedIdChanging(value);
                ReportPropertyChanging("Bed_bedId");
                _Bed_bedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bed_bedId");
                OnBed_bedIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Bed_bedId;
        partial void OnBed_bedIdChanging(Nullable<global::System.Int32> value);
        partial void OnBed_bedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Admission_admissionId
        {
            get
            {
                return _Admission_admissionId;
            }
            set
            {
                OnAdmission_admissionIdChanging(value);
                ReportPropertyChanging("Admission_admissionId");
                _Admission_admissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Admission_admissionId");
                OnAdmission_admissionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Admission_admissionId;
        partial void OnAdmission_admissionIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdmission_admissionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateOrder", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_UpdateOrder", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_UpdateOrder", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("WCSModel.FK_UpdateOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("WCSModel.FK_UpdateOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateAdmission", "Admission")]
        public Admission Admission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_UpdateAdmission", "Admission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_UpdateAdmission", "Admission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Admission> AdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Admission>("WCSModel.FK_UpdateAdmission", "Admission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Admission>("WCSModel.FK_UpdateAdmission", "Admission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_UpdateBed", "Bed")]
        public Bed Bed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_UpdateBed", "Bed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_UpdateBed", "Bed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bed> BedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bed>("WCSModel.FK_UpdateBed", "Bed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bed>("WCSModel.FK_UpdateBed", "Bed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WCSModel", Name="WaitingArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WaitingArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WaitingArea object.
        /// </summary>
        /// <param name="waitingAreaId">Initial value of the waitingAreaId property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static WaitingArea CreateWaitingArea(global::System.Int32 waitingAreaId, global::System.String code, global::System.String name)
        {
            WaitingArea waitingArea = new WaitingArea();
            waitingArea.waitingAreaId = waitingAreaId;
            waitingArea.code = code;
            waitingArea.name = name;
            return waitingArea;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 waitingAreaId
        {
            get
            {
                return _waitingAreaId;
            }
            set
            {
                if (_waitingAreaId != value)
                {
                    OnwaitingAreaIdChanging(value);
                    ReportPropertyChanging("waitingAreaId");
                    _waitingAreaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("waitingAreaId");
                    OnwaitingAreaIdChanged();
                }
            }
        }
        private global::System.Int32 _waitingAreaId;
        partial void OnwaitingAreaIdChanging(global::System.Int32 value);
        partial void OnwaitingAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_WaitingAreaLocation", "Location")]
        public EntityCollection<Location> Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("WCSModel.FK_WaitingAreaLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("WCSModel.FK_WaitingAreaLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WCSModel", "FK_WaitingAreaRfidDetector", "RfidDetector")]
        public EntityCollection<RfidDetector> RfidDetector
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RfidDetector>("WCSModel.FK_WaitingAreaRfidDetector", "RfidDetector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RfidDetector>("WCSModel.FK_WaitingAreaRfidDetector", "RfidDetector", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
