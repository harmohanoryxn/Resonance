//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cloudmaster.WCS.DataServicesInvoker.DataServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationToken", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class AuthenticationToken : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAuthenticatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LockScreenTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAuthenticated {
            get {
                return this.IsAuthenticatedField;
            }
            set {
                if ((this.IsAuthenticatedField.Equals(value) != true)) {
                    this.IsAuthenticatedField = value;
                    this.RaisePropertyChanged("IsAuthenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LockScreenTimeout {
            get {
                return this.LockScreenTimeoutField;
            }
            set {
                if ((this.LockScreenTimeoutField.Equals(value) != true)) {
                    this.LockScreenTimeoutField = value;
                    this.RaisePropertyChanged("LockScreenTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfiguration", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class DeviceConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfigurationInstance[] InstancesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfigurationInstance[] Instances {
            get {
                return this.InstancesField;
            }
            set {
                if ((object.ReferenceEquals(this.InstancesField, value) != true)) {
                    this.InstancesField = value;
                    this.RaisePropertyChanged("Instances");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfigurationInstance", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class DeviceConfigurationInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.PollingTimeouts PollingTimeoutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresLoggingOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortcutKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfigurationType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationSummary[] VisibleLocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaitingRoomLocationCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.PollingTimeouts PollingTimeouts {
            get {
                return this.PollingTimeoutsField;
            }
            set {
                if ((object.ReferenceEquals(this.PollingTimeoutsField, value) != true)) {
                    this.PollingTimeoutsField = value;
                    this.RaisePropertyChanged("PollingTimeouts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresLoggingOn {
            get {
                return this.RequiresLoggingOnField;
            }
            set {
                if ((this.RequiresLoggingOnField.Equals(value) != true)) {
                    this.RequiresLoggingOnField = value;
                    this.RaisePropertyChanged("RequiresLoggingOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortcutKey {
            get {
                return this.ShortcutKeyField;
            }
            set {
                if ((this.ShortcutKeyField.Equals(value) != true)) {
                    this.ShortcutKeyField = value;
                    this.RaisePropertyChanged("ShortcutKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfigurationType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationSummary[] VisibleLocations {
            get {
                return this.VisibleLocationsField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleLocationsField, value) != true)) {
                    this.VisibleLocationsField = value;
                    this.RaisePropertyChanged("VisibleLocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaitingRoomLocationCode {
            get {
                return this.WaitingRoomLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WaitingRoomLocationCodeField, value) != true)) {
                    this.WaitingRoomLocationCodeField = value;
                    this.RaisePropertyChanged("WaitingRoomLocationCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PollingTimeouts", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class PollingTimeouts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdmissionsTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CleaningBedDataTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigurationTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DischargeTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PresenceTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RfidTimeoutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdmissionsTimeout {
            get {
                return this.AdmissionsTimeoutField;
            }
            set {
                if ((this.AdmissionsTimeoutField.Equals(value) != true)) {
                    this.AdmissionsTimeoutField = value;
                    this.RaisePropertyChanged("AdmissionsTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CleaningBedDataTimeout {
            get {
                return this.CleaningBedDataTimeoutField;
            }
            set {
                if ((this.CleaningBedDataTimeoutField.Equals(value) != true)) {
                    this.CleaningBedDataTimeoutField = value;
                    this.RaisePropertyChanged("CleaningBedDataTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigurationTimeout {
            get {
                return this.ConfigurationTimeoutField;
            }
            set {
                if ((this.ConfigurationTimeoutField.Equals(value) != true)) {
                    this.ConfigurationTimeoutField = value;
                    this.RaisePropertyChanged("ConfigurationTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DischargeTimeout {
            get {
                return this.DischargeTimeoutField;
            }
            set {
                if ((this.DischargeTimeoutField.Equals(value) != true)) {
                    this.DischargeTimeoutField = value;
                    this.RaisePropertyChanged("DischargeTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTimeout {
            get {
                return this.OrderTimeoutField;
            }
            set {
                if ((this.OrderTimeoutField.Equals(value) != true)) {
                    this.OrderTimeoutField = value;
                    this.RaisePropertyChanged("OrderTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PresenceTimeout {
            get {
                return this.PresenceTimeoutField;
            }
            set {
                if ((this.PresenceTimeoutField.Equals(value) != true)) {
                    this.PresenceTimeoutField = value;
                    this.RaisePropertyChanged("PresenceTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RfidTimeout {
            get {
                return this.RfidTimeoutField;
            }
            set {
                if ((this.RfidTimeoutField.Equals(value) != true)) {
                    this.RfidTimeoutField = value;
                    this.RaisePropertyChanged("RfidTimeout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceConfigurationType", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum DeviceConfigurationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ward = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Department = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cleaning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Physio = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admissions = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discharge = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationSummary", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class LocationSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaitingRoomCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaitingRoomCode {
            get {
                return this.WaitingRoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WaitingRoomCodeField, value) != true)) {
                    this.WaitingRoomCodeField = value;
                    this.RaisePropertyChanged("WaitingRoomCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Presence", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Presence : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LongTermNotificationsPendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShortTermNotificationsPendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> TimeSinceLastConnectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LongTermNotificationsPending {
            get {
                return this.LongTermNotificationsPendingField;
            }
            set {
                if ((this.LongTermNotificationsPendingField.Equals(value) != true)) {
                    this.LongTermNotificationsPendingField = value;
                    this.RaisePropertyChanged("LongTermNotificationsPending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShortTermNotificationsPending {
            get {
                return this.ShortTermNotificationsPendingField;
            }
            set {
                if ((this.ShortTermNotificationsPendingField.Equals(value) != true)) {
                    this.ShortTermNotificationsPendingField = value;
                    this.RaisePropertyChanged("ShortTermNotificationsPending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> TimeSinceLastConnection {
            get {
                return this.TimeSinceLastConnectionField;
            }
            set {
                if ((this.TimeSinceLastConnectionField.Equals(value) != true)) {
                    this.TimeSinceLastConnectionField = value;
                    this.RaisePropertyChanged("TimeSinceLastConnection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LocationCodes", Namespace="http://schemas.datacontract.org/2004/07/WCS.Services.DataServices", ItemName="code")]
    [System.SerializableAttribute()]
    public class LocationCodes : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcknowledgedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission AdmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClinicalIndicatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCardiologistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstimatedProcedureDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Note[] NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Notification[] NotificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderingDoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProcedureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresFootwearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresMedicalRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresSupervisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.OrderStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Update[] UpdatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Acknowledged {
            get {
                return this.AcknowledgedField;
            }
            set {
                if ((this.AcknowledgedField.Equals(value) != true)) {
                    this.AcknowledgedField = value;
                    this.RaisePropertyChanged("Acknowledged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission Admission {
            get {
                return this.AdmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmissionField, value) != true)) {
                    this.AdmissionField = value;
                    this.RaisePropertyChanged("Admission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClinicalIndicators {
            get {
                return this.ClinicalIndicatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicalIndicatorsField, value) != true)) {
                    this.ClinicalIndicatorsField = value;
                    this.RaisePropertyChanged("ClinicalIndicators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedTime {
            get {
                return this.CompletedTimeField;
            }
            set {
                if ((this.CompletedTimeField.Equals(value) != true)) {
                    this.CompletedTimeField = value;
                    this.RaisePropertyChanged("CompletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCardiologist {
            get {
                return this.CurrentCardiologistField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCardiologistField, value) != true)) {
                    this.CurrentCardiologistField = value;
                    this.RaisePropertyChanged("CurrentCardiologist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentCode {
            get {
                return this.DepartmentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentCodeField, value) != true)) {
                    this.DepartmentCodeField = value;
                    this.RaisePropertyChanged("DepartmentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EstimatedProcedureDuration {
            get {
                return this.EstimatedProcedureDurationField;
            }
            set {
                if ((this.EstimatedProcedureDurationField.Equals(value) != true)) {
                    this.EstimatedProcedureDurationField = value;
                    this.RaisePropertyChanged("EstimatedProcedureDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string History {
            get {
                return this.HistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryField, value) != true)) {
                    this.HistoryField = value;
                    this.RaisePropertyChanged("History");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((this.IsHiddenField.Equals(value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Note[] Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Notification[] Notifications {
            get {
                return this.NotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationsField, value) != true)) {
                    this.NotificationsField = value;
                    this.RaisePropertyChanged("Notifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberField, value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderingDoctor {
            get {
                return this.OrderingDoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderingDoctorField, value) != true)) {
                    this.OrderingDoctorField = value;
                    this.RaisePropertyChanged("OrderingDoctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureCode {
            get {
                return this.ProcedureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureCodeField, value) != true)) {
                    this.ProcedureCodeField = value;
                    this.RaisePropertyChanged("ProcedureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureDescription {
            get {
                return this.ProcedureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureDescriptionField, value) != true)) {
                    this.ProcedureDescriptionField = value;
                    this.RaisePropertyChanged("ProcedureDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProcedureTime {
            get {
                return this.ProcedureTimeField;
            }
            set {
                if ((this.ProcedureTimeField.Equals(value) != true)) {
                    this.ProcedureTimeField = value;
                    this.RaisePropertyChanged("ProcedureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresFootwear {
            get {
                return this.RequiresFootwearField;
            }
            set {
                if ((this.RequiresFootwearField.Equals(value) != true)) {
                    this.RequiresFootwearField = value;
                    this.RaisePropertyChanged("RequiresFootwear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresMedicalRecords {
            get {
                return this.RequiresMedicalRecordsField;
            }
            set {
                if ((this.RequiresMedicalRecordsField.Equals(value) != true)) {
                    this.RequiresMedicalRecordsField = value;
                    this.RaisePropertyChanged("RequiresMedicalRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresSupervision {
            get {
                return this.RequiresSupervisionField;
            }
            set {
                if ((this.RequiresSupervisionField.Equals(value) != true)) {
                    this.RequiresSupervisionField = value;
                    this.RaisePropertyChanged("RequiresSupervision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.OrderStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Update[] Updates {
            get {
                return this.UpdatesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatesField, value) != true)) {
                    this.UpdatesField = value;
                    this.RaisePropertyChanged("Updates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admission", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Admission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdmissionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdmitDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdmittingDoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttendingDoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.CriticalCareIndicators CriticalCareIndicatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DischargeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedDischargeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Patient PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryDoctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Update[] UpdatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdmissionId {
            get {
                return this.AdmissionIdField;
            }
            set {
                if ((this.AdmissionIdField.Equals(value) != true)) {
                    this.AdmissionIdField = value;
                    this.RaisePropertyChanged("AdmissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AdmitDateTime {
            get {
                return this.AdmitDateTimeField;
            }
            set {
                if ((this.AdmitDateTimeField.Equals(value) != true)) {
                    this.AdmitDateTimeField = value;
                    this.RaisePropertyChanged("AdmitDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdmittingDoctor {
            get {
                return this.AdmittingDoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmittingDoctorField, value) != true)) {
                    this.AdmittingDoctorField = value;
                    this.RaisePropertyChanged("AdmittingDoctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttendingDoctor {
            get {
                return this.AttendingDoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendingDoctorField, value) != true)) {
                    this.AttendingDoctorField = value;
                    this.RaisePropertyChanged("AttendingDoctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.CriticalCareIndicators CriticalCareIndicators {
            get {
                return this.CriticalCareIndicatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriticalCareIndicatorsField, value) != true)) {
                    this.CriticalCareIndicatorsField = value;
                    this.RaisePropertyChanged("CriticalCareIndicators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DischargeDateTime {
            get {
                return this.DischargeDateTimeField;
            }
            set {
                if ((this.DischargeDateTimeField.Equals(value) != true)) {
                    this.DischargeDateTimeField = value;
                    this.RaisePropertyChanged("DischargeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayCode {
            get {
                return this.DisplayCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayCodeField, value) != true)) {
                    this.DisplayCodeField = value;
                    this.RaisePropertyChanged("DisplayCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedDischargeDateTime {
            get {
                return this.EstimatedDischargeDateTimeField;
            }
            set {
                if ((this.EstimatedDischargeDateTimeField.Equals(value) != true)) {
                    this.EstimatedDischargeDateTimeField = value;
                    this.RaisePropertyChanged("EstimatedDischargeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDoctor {
            get {
                return this.PrimaryDoctorField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDoctorField, value) != true)) {
                    this.PrimaryDoctorField = value;
                    this.RaisePropertyChanged("PrimaryDoctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Update[] Updates {
            get {
                return this.UpdatesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatesField, value) != true)) {
                    this.UpdatesField = value;
                    this.RaisePropertyChanged("Updates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Note : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoteId {
            get {
                return this.NoteIdField;
            }
            set {
                if ((this.NoteIdField.Equals(value) != true)) {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteMessage {
            get {
                return this.NoteMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteMessageField, value) != true)) {
                    this.NoteMessageField = value;
                    this.RaisePropertyChanged("NoteMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Notification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcknowledgedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcknowledgedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AcknowledgedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.NotificationType NotificationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan PriorToProcedureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresAcknowledgementField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Acknowledged {
            get {
                return this.AcknowledgedField;
            }
            set {
                if ((this.AcknowledgedField.Equals(value) != true)) {
                    this.AcknowledgedField = value;
                    this.RaisePropertyChanged("Acknowledged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcknowledgedBy {
            get {
                return this.AcknowledgedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AcknowledgedByField, value) != true)) {
                    this.AcknowledgedByField = value;
                    this.RaisePropertyChanged("AcknowledgedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AcknowledgedTime {
            get {
                return this.AcknowledgedTimeField;
            }
            set {
                if ((this.AcknowledgedTimeField.Equals(value) != true)) {
                    this.AcknowledgedTimeField = value;
                    this.RaisePropertyChanged("AcknowledgedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotificationId {
            get {
                return this.NotificationIdField;
            }
            set {
                if ((this.NotificationIdField.Equals(value) != true)) {
                    this.NotificationIdField = value;
                    this.RaisePropertyChanged("NotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.NotificationType NotificationType {
            get {
                return this.NotificationTypeField;
            }
            set {
                if ((this.NotificationTypeField.Equals(value) != true)) {
                    this.NotificationTypeField = value;
                    this.RaisePropertyChanged("NotificationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan PriorToProcedureTime {
            get {
                return this.PriorToProcedureTimeField;
            }
            set {
                if ((this.PriorToProcedureTimeField.Equals(value) != true)) {
                    this.PriorToProcedureTimeField = value;
                    this.RaisePropertyChanged("PriorToProcedureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresAcknowledgement {
            get {
                return this.RequiresAcknowledgementField;
            }
            set {
                if ((this.RequiresAcknowledgementField.Equals(value) != true)) {
                    this.RequiresAcknowledgementField = value;
                    this.RaisePropertyChanged("RequiresAcknowledgement");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStatus", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum OrderStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Update", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Update : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdmissionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AdmissionId {
            get {
                return this.AdmissionIdField;
            }
            set {
                if ((this.AdmissionIdField.Equals(value) != true)) {
                    this.AdmissionIdField = value;
                    this.RaisePropertyChanged("AdmissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateId {
            get {
                return this.UpdateIdField;
            }
            set {
                if ((this.UpdateIdField.Equals(value) != true)) {
                    this.UpdateIdField = value;
                    this.RaisePropertyChanged("UpdateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriticalCareIndicators", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class CriticalCareIndicators : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLatexAllergyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFallRiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMrsaRiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRadiationRiskField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLatexAllergy {
            get {
                return this.HasLatexAllergyField;
            }
            set {
                if ((this.HasLatexAllergyField.Equals(value) != true)) {
                    this.HasLatexAllergyField = value;
                    this.RaisePropertyChanged("HasLatexAllergy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFallRisk {
            get {
                return this.IsFallRiskField;
            }
            set {
                if ((this.IsFallRiskField.Equals(value) != true)) {
                    this.IsFallRiskField = value;
                    this.RaisePropertyChanged("IsFallRisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMrsaRisk {
            get {
                return this.IsMrsaRiskField;
            }
            set {
                if ((this.IsMrsaRiskField.Equals(value) != true)) {
                    this.IsMrsaRiskField = value;
                    this.RaisePropertyChanged("IsMrsaRisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRadiationRisk {
            get {
                return this.IsRadiationRiskField;
            }
            set {
                if ((this.IsRadiationRiskField.Equals(value) != true)) {
                    this.IsRadiationRiskField = value;
                    this.RaisePropertyChanged("IsRadiationRisk");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmergencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bed {
            get {
                return this.BedField;
            }
            set {
                if ((object.ReferenceEquals(this.BedField, value) != true)) {
                    this.BedField = value;
                    this.RaisePropertyChanged("Bed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmergency {
            get {
                return this.IsEmergencyField;
            }
            set {
                if ((this.IsEmergencyField.Equals(value) != true)) {
                    this.IsEmergencyField = value;
                    this.RaisePropertyChanged("IsEmergency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssistanceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GivenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPeopleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAssistanceRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientSex SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssistanceDescription {
            get {
                return this.AssistanceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssistanceDescriptionField, value) != true)) {
                    this.AssistanceDescriptionField = value;
                    this.RaisePropertyChanged("AssistanceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GivenName {
            get {
                return this.GivenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GivenNameField, value) != true)) {
                    this.GivenNameField = value;
                    this.RaisePropertyChanged("GivenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPeopleNumber {
            get {
                return this.IPeopleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IPeopleNumberField, value) != true)) {
                    this.IPeopleNumberField = value;
                    this.RaisePropertyChanged("IPeopleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAssistanceRequired {
            get {
                return this.IsAssistanceRequiredField;
            }
            set {
                if ((this.IsAssistanceRequiredField.Equals(value) != true)) {
                    this.IsAssistanceRequiredField = value;
                    this.RaisePropertyChanged("IsAssistanceRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientSex Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdmissionStatus", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum AdmissionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Registered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admitted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discharged = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdmissionType", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum AdmissionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        In = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Out = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientSex", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum PatientSex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationType", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum NotificationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prep = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Physio = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bed", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Bed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.BedTime[] AvailableTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.CriticalCareIndicators CriticalCareIndicatorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.BedStatus CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedDischargeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.CleaningService LatestServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Note[] NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.CleaningService[] ServicesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedTime[] AvailableTimes {
            get {
                return this.AvailableTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableTimesField, value) != true)) {
                    this.AvailableTimesField = value;
                    this.RaisePropertyChanged("AvailableTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.CriticalCareIndicators CriticalCareIndicators {
            get {
                return this.CriticalCareIndicatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.CriticalCareIndicatorsField, value) != true)) {
                    this.CriticalCareIndicatorsField = value;
                    this.RaisePropertyChanged("CriticalCareIndicators");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedStatus CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((this.CurrentStatusField.Equals(value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedDischargeDate {
            get {
                return this.EstimatedDischargeDateField;
            }
            set {
                if ((this.EstimatedDischargeDateField.Equals(value) != true)) {
                    this.EstimatedDischargeDateField = value;
                    this.RaisePropertyChanged("EstimatedDischargeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.CleaningService LatestService {
            get {
                return this.LatestServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.LatestServiceField, value) != true)) {
                    this.LatestServiceField = value;
                    this.RaisePropertyChanged("LatestService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Note[] Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.CleaningService[] Services {
            get {
                return this.ServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicesField, value) != true)) {
                    this.ServicesField = value;
                    this.RaisePropertyChanged("Services");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CleaningService", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class CleaningService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CleaningServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.BedCleaningEventType CleaningServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CleaningServiceId {
            get {
                return this.CleaningServiceIdField;
            }
            set {
                if ((this.CleaningServiceIdField.Equals(value) != true)) {
                    this.CleaningServiceIdField = value;
                    this.RaisePropertyChanged("CleaningServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedCleaningEventType CleaningServiceType {
            get {
                return this.CleaningServiceTypeField;
            }
            set {
                if ((this.CleaningServiceTypeField.Equals(value) != true)) {
                    this.CleaningServiceTypeField = value;
                    this.RaisePropertyChanged("CleaningServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServiceTime {
            get {
                return this.ServiceTimeField;
            }
            set {
                if ((this.ServiceTimeField.Equals(value) != true)) {
                    this.ServiceTimeField = value;
                    this.RaisePropertyChanged("ServiceTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WardField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomId {
            get {
                return this.RoomIdField;
            }
            set {
                if ((this.RoomIdField.Equals(value) != true)) {
                    this.RoomIdField = value;
                    this.RaisePropertyChanged("RoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ward {
            get {
                return this.WardField;
            }
            set {
                if ((object.ReferenceEquals(this.WardField, value) != true)) {
                    this.WardField = value;
                    this.RaisePropertyChanged("Ward");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BedTime", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class BedTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDueToDischargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDueToDischarge {
            get {
                return this.IsDueToDischargeField;
            }
            set {
                if ((this.IsDueToDischargeField.Equals(value) != true)) {
                    this.IsDueToDischargeField = value;
                    this.RaisePropertyChanged("IsDueToDischarge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BedStatus", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum BedStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Clean = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dirty = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiresDeepClean = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BedCleaningEventType", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum BedCleaningEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BedCleaned = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BedMarkedAsDirty = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PatientCodes", Namespace="http://schemas.datacontract.org/2004/07/WCS.Services.DataServices", ItemName="code")]
    [System.SerializableAttribute()]
    public class PatientCodes : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Detection", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class Detection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.DetectionLocation DetectionLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.DetectionDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetectionId {
            get {
                return this.DetectionIdField;
            }
            set {
                if ((this.DetectionIdField.Equals(value) != true)) {
                    this.DetectionIdField = value;
                    this.RaisePropertyChanged("DetectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.DetectionLocation DetectionLocation {
            get {
                return this.DetectionLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DetectionLocationField, value) != true)) {
                    this.DetectionLocationField = value;
                    this.RaisePropertyChanged("DetectionLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.DetectionDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectionLocation", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class DetectionLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetectorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetectorId {
            get {
                return this.DetectorIdField;
            }
            set {
                if ((this.DetectorIdField.Equals(value) != true)) {
                    this.DetectorIdField = value;
                    this.RaisePropertyChanged("DetectorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectionDirection", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    public enum DetectionDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        In = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Out = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BedDischargeData", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class BedDischargeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BedIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission CurrentAdmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedDischargeDateLastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Room RoomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BedId {
            get {
                return this.BedIdField;
            }
            set {
                if ((this.BedIdField.Equals(value) != true)) {
                    this.BedIdField = value;
                    this.RaisePropertyChanged("BedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission CurrentAdmission {
            get {
                return this.CurrentAdmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentAdmissionField, value) != true)) {
                    this.CurrentAdmissionField = value;
                    this.RaisePropertyChanged("CurrentAdmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedDischargeDateLastUpdated {
            get {
                return this.EstimatedDischargeDateLastUpdatedField;
            }
            set {
                if ((this.EstimatedDischargeDateLastUpdatedField.Equals(value) != true)) {
                    this.EstimatedDischargeDateLastUpdatedField = value;
                    this.RaisePropertyChanged("EstimatedDischargeDateLastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdmissionsData", Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1")]
    [System.SerializableAttribute()]
    public partial class AdmissionsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission[] AdmissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData[] BedsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Admission[] Admissions {
            get {
                return this.AdmissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdmissionsField, value) != true)) {
                    this.AdmissionsField = value;
                    this.RaisePropertyChanged("Admissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData[] Beds {
            get {
                return this.BedsField;
            }
            set {
                if ((object.ReferenceEquals(this.BedsField, value) != true)) {
                    this.BedsField = value;
                    this.RaisePropertyChanged("Beds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.cloudmaster.ie/2012/01/WCS/1", ConfigurationName="DataServices.IDataServices")]
    public interface IDataServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/Authenticate", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AuthenticateResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.AuthenticationToken Authenticate(string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetTimestamp", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetTimestampResponse")]
        System.DateTime GetTimestamp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetConfigurations", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetConfigurationsRespon" +
            "se")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfiguration GetConfigurations(string device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetLatestPollingTimeout" +
            "s", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetLatestPollingTimeout" +
            "sResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.PollingTimeouts GetLatestPollingTimeouts(string device, int shortcutKeyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetPresenceData", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetPresenceDataResponse" +
            "")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Presence[] GetPresenceData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetOrders", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetOrdersResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order[] GetOrders(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AcknowledgeOrder", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AcknowledgeOrderRespons" +
            "e")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AcknowledgeOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/HideOrder", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/HideOrderResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order HideOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UnhideOrder", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UnhideOrderResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order UnhideOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UpdateProcedureTime", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UpdateProcedureTimeResp" +
            "onse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order UpdateProcedureTime(int orderId, System.DateTime procedureTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AddOrderNote", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AddOrderNoteResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AddOrderNote(int orderId, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/DeleteOrderNote", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/DeleteOrderNoteResponse" +
            "")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order DeleteOrderNote(int orderId, int noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AcknowledgeNotification" +
            "", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AcknowledgeNotification" +
            "Response")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AcknowledgeNotification(int notificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetCleaningBedData", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetCleaningBedDataRespo" +
            "nse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed[] GetCleaningBedData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/MarkBedAsClean", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/MarkBedAsCleanResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed MarkBedAsClean(int bedId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/MarkBedAsDirty", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/MarkBedAsDirtyResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed MarkBedAsDirty(int bedId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AddBedNote", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/AddBedNoteResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed AddBedNote(int bedId, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/DeleteBedNote", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/DeleteBedNoteResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed DeleteBedNote(int bedId, int noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetEntireDetectionHisto" +
            "ry", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetEntireDetectionHisto" +
            "ryResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Detection[] GetEntireDetectionHistory(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientCodes patientCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetLatestDetection", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetLatestDetectionRespo" +
            "nse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.Detection[] GetLatestDetection(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientCodes patientCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/RandomlyMovePatient", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/RandomlyMovePatientResp" +
            "onse")]
        void RandomlyMovePatient();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetDischargesBedData", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetDischargesBedDataRes" +
            "ponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData[] GetDischargesBedData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UpdateEstimatedDischarg" +
            "eDate", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/UpdateEstimatedDischarg" +
            "eDateResponse")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData UpdateEstimatedDischargeDate(int admissionId, System.DateTime estimatedDischargeDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetAdmissionsData", ReplyAction="http://schemas.cloudmaster.ie/2012/01/WCS/1/IDataServices/GetAdmissionsDataRespon" +
            "se")]
        Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionsData GetAdmissionsData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServicesChannel : Cloudmaster.WCS.DataServicesInvoker.DataServices.IDataServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServicesClient : System.ServiceModel.ClientBase<Cloudmaster.WCS.DataServicesInvoker.DataServices.IDataServices>, Cloudmaster.WCS.DataServicesInvoker.DataServices.IDataServices {
        
        public DataServicesClient() {
        }
        
        public DataServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.AuthenticationToken Authenticate(string pin) {
            return base.Channel.Authenticate(pin);
        }
        
        public System.DateTime GetTimestamp() {
            return base.Channel.GetTimestamp();
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.DeviceConfiguration GetConfigurations(string device) {
            return base.Channel.GetConfigurations(device);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.PollingTimeouts GetLatestPollingTimeouts(string device, int shortcutKeyNo) {
            return base.Channel.GetLatestPollingTimeouts(device, shortcutKeyNo);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Presence[] GetPresenceData() {
            return base.Channel.GetPresenceData();
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order[] GetOrders(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations) {
            return base.Channel.GetOrders(fromDate, toDate, locations);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AcknowledgeOrder(int orderId) {
            return base.Channel.AcknowledgeOrder(orderId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order HideOrder(int orderId) {
            return base.Channel.HideOrder(orderId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order UnhideOrder(int orderId) {
            return base.Channel.UnhideOrder(orderId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order UpdateProcedureTime(int orderId, System.DateTime procedureTime) {
            return base.Channel.UpdateProcedureTime(orderId, procedureTime);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AddOrderNote(int orderId, string note) {
            return base.Channel.AddOrderNote(orderId, note);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order DeleteOrderNote(int orderId, int noteId) {
            return base.Channel.DeleteOrderNote(orderId, noteId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Order AcknowledgeNotification(int notificationId) {
            return base.Channel.AcknowledgeNotification(notificationId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed[] GetCleaningBedData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations) {
            return base.Channel.GetCleaningBedData(locations);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed MarkBedAsClean(int bedId) {
            return base.Channel.MarkBedAsClean(bedId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed MarkBedAsDirty(int bedId) {
            return base.Channel.MarkBedAsDirty(bedId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed AddBedNote(int bedId, string note) {
            return base.Channel.AddBedNote(bedId, note);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Bed DeleteBedNote(int bedId, int noteId) {
            return base.Channel.DeleteBedNote(bedId, noteId);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Detection[] GetEntireDetectionHistory(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientCodes patientCodes) {
            return base.Channel.GetEntireDetectionHistory(fromDate, toDate, patientCodes);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.Detection[] GetLatestDetection(System.DateTime fromDate, System.DateTime toDate, Cloudmaster.WCS.DataServicesInvoker.DataServices.PatientCodes patientCodes) {
            return base.Channel.GetLatestDetection(fromDate, toDate, patientCodes);
        }
        
        public void RandomlyMovePatient() {
            base.Channel.RandomlyMovePatient();
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData[] GetDischargesBedData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations) {
            return base.Channel.GetDischargesBedData(locations);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.BedDischargeData UpdateEstimatedDischargeDate(int admissionId, System.DateTime estimatedDischargeDate) {
            return base.Channel.UpdateEstimatedDischargeDate(admissionId, estimatedDischargeDate);
        }
        
        public Cloudmaster.WCS.DataServicesInvoker.DataServices.AdmissionsData GetAdmissionsData(Cloudmaster.WCS.DataServicesInvoker.DataServices.LocationCodes locations) {
            return base.Channel.GetAdmissionsData(locations);
        }
    }
}
