

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Log : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Log entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Log()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Log(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Log> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Log.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Log_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Log_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int logId
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.logId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void logId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void logId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void logId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.c_Date);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.c_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ComputerName
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.ComputerName);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.ComputerName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComputerName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComputerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ComputerName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Thread
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Thread);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Thread, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Thread_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Thread_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Thread_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Level
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Level);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Level, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Level_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Level_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Level_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Logger
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Logger);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Logger, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Logger_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Logger_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Logger_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Message
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Message);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Message, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Message_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Message_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Message_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Exception
        {
            get
            {
                return global::LightSwitchApplication.Log.DetailsClass.GetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Exception);
            }
            set
            {
                global::LightSwitchApplication.Log.DetailsClass.SetValue(this, global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Exception, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exception_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exception_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exception_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Log,
                global::LightSwitchApplication.Log.DetailsClass,
                global::LightSwitchApplication.Log.DetailsClass.IImplementation,
                global::LightSwitchApplication.Log.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.logId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>.Entry
                __LogEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>.Entry(
                    global::LightSwitchApplication.Log.DetailsClass.__Log_CreateNew,
                    global::LightSwitchApplication.Log.DetailsClass.__Log_Created,
                    global::LightSwitchApplication.Log.DetailsClass.__Log_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Log __Log_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Log> es)
            {
                return new global::LightSwitchApplication.Log(es);
            }
            private static void __Log_Created(global::LightSwitchApplication.Log e)
            {
                e.Log_Created();
            }
            private static bool __Log_AllowSaveWithErrors(global::LightSwitchApplication.Log e)
            {
                bool result = false;
                e.Log_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Log.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int> logId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.logId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime> c_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.c_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> ComputerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.ComputerName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> Thread
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Thread) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> Level
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Level) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> Logger
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Logger) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> Message
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Message) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string> Exception
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties.Exception) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int logId { get; }
                new global::System.DateTime c_Date { get; set; }
                new string ComputerName { get; set; }
                new string Thread { get; set; }
                new string Level { get; set; }
                new string Logger { get; set; }
                new string Message { get; set; }
                new string Exception { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int>.Entry
                    logId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int>.Entry(
                        "logId",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._logId_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._logId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._logId_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._logId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._logId_OnValueChanged);
                private static void _logId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._logId, sf);
                }
                private static bool _logId_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.logId_IsReadOnly(ref result);
                    return result;
                }
                private static void _logId_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.logId_Validate(r);
                }
                private static int _logId_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.logId;
                }
                private static void _logId_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.logId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime>.Entry
                    c_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime>.Entry(
                        "c_Date",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._c_Date_OnValueChanged);
                private static void _c_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._c_Date, sf);
                }
                private static bool _c_Date_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.c_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_Date_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_Date_Validate(r);
                }
                private static global::System.DateTime _c_Date_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.c_Date;
                }
                private static void _c_Date_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.c_Date = global::LightSwitchApplication.Log.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _c_Date_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.c_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    ComputerName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "ComputerName",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._ComputerName_OnValueChanged);
                private static void _ComputerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._ComputerName, sf);
                }
                private static bool _ComputerName_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.ComputerName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ComputerName_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ComputerName_Validate(r);
                }
                private static string _ComputerName_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.ComputerName;
                }
                private static void _ComputerName_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ComputerName = v;
                }
                private static void _ComputerName_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.ComputerName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    Thread = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "Thread",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Thread_OnValueChanged);
                private static void _Thread_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._Thread, sf);
                }
                private static bool _Thread_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.Thread_IsReadOnly(ref result);
                    return result;
                }
                private static void _Thread_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Thread_Validate(r);
                }
                private static string _Thread_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.Thread;
                }
                private static void _Thread_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Thread = v;
                }
                private static void _Thread_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.Thread_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    Level = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "Level",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Level_OnValueChanged);
                private static void _Level_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._Level, sf);
                }
                private static bool _Level_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.Level_IsReadOnly(ref result);
                    return result;
                }
                private static void _Level_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Level_Validate(r);
                }
                private static string _Level_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.Level;
                }
                private static void _Level_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Level = v;
                }
                private static void _Level_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.Level_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    Logger = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "Logger",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Logger_OnValueChanged);
                private static void _Logger_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._Logger, sf);
                }
                private static bool _Logger_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.Logger_IsReadOnly(ref result);
                    return result;
                }
                private static void _Logger_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Logger_Validate(r);
                }
                private static string _Logger_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.Logger;
                }
                private static void _Logger_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Logger = v;
                }
                private static void _Logger_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.Logger_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    Message = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "Message",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Message_OnValueChanged);
                private static void _Message_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._Message, sf);
                }
                private static bool _Message_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.Message_IsReadOnly(ref result);
                    return result;
                }
                private static void _Message_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Message_Validate(r);
                }
                private static string _Message_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.Message;
                }
                private static void _Message_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Message = v;
                }
                private static void _Message_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.Message_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry
                    Exception = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Entry(
                        "Exception",
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_Stub,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_ComputeIsReadOnly,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_Validate,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_GetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_SetImplementationValue,
                        global::LightSwitchApplication.Log.DetailsClass.PropertySetProperties._Exception_OnValueChanged);
                private static void _Exception_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Log.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data> c, global::LightSwitchApplication.Log.DetailsClass d, object sf)
                {
                    c(d, ref d._Exception, sf);
                }
                private static bool _Exception_ComputeIsReadOnly(global::LightSwitchApplication.Log e)
                {
                    bool result = false;
                    e.Exception_IsReadOnly(ref result);
                    return result;
                }
                private static void _Exception_Validate(global::LightSwitchApplication.Log e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Exception_Validate(r);
                }
                private static string _Exception_GetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d)
                {
                    return d.ImplementationEntity.Exception;
                }
                private static void _Exception_SetImplementationValue(global::LightSwitchApplication.Log.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Exception = v;
                }
                private static void _Exception_OnValueChanged(global::LightSwitchApplication.Log e)
                {
                    e.Exception_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, int>.Data _logId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, global::System.DateTime>.Data _c_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _ComputerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _Thread;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _Level;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _Logger;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _Message;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Log, global::LightSwitchApplication.Log.DetailsClass, string>.Data _Exception;
            
        }
    
        #endregion
    }
    
    #endregion
}
