

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Device : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Device entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Device()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Device(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Device> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Device.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int deviceId
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.deviceId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void deviceId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void deviceId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void deviceId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string name
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.name);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string os
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.os);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.os, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void os_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void os_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void os_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string description
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.description);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ipAddress
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.ipAddress);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.ipAddress, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ipAddress_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ipAddress_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ipAddress_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> lastConnection
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lastConnection);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lastConnection, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lastConnection_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lastConnection_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lastConnection_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int lockTimeout
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lockTimeout);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lockTimeout, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lockTimeout_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lockTimeout_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void lockTimeout_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Configuration Configuration
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Connection> Connections
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Connections);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Connection> ConnectionsQuery
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetQuery(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Connections);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Pin> Pins
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Pins);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Pin> PinsQuery
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetQuery(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Pins);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Location Location
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Device,
                global::LightSwitchApplication.Device.DetailsClass,
                global::LightSwitchApplication.Device.DetailsClass.IImplementation,
                global::LightSwitchApplication.Device.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.deviceId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>.Entry
                __DeviceEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>.Entry(
                    global::LightSwitchApplication.Device.DetailsClass.__Device_CreateNew,
                    global::LightSwitchApplication.Device.DetailsClass.__Device_Created,
                    global::LightSwitchApplication.Device.DetailsClass.__Device_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Device __Device_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Device> es)
            {
                return new global::LightSwitchApplication.Device(es);
            }
            private static void __Device_Created(global::LightSwitchApplication.Device e)
            {
                e.Device_Created();
            }
            private static bool __Device_AllowSaveWithErrors(global::LightSwitchApplication.Device e)
            {
                bool result = false;
                e.Device_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Device.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int> deviceId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.deviceId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> os
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.os) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> ipAddress
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.ipAddress) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>> lastConnection
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lastConnection) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int> lockTimeout
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.lockTimeout) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration> Configuration
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection> Connections
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Connections) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin> Pins
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Pins) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int deviceId { get; }
                new string name { get; set; }
                new string os { get; set; }
                new string description { get; set; }
                new string ipAddress { get; set; }
                new global::System.Nullable<global::System.DateTime> lastConnection { get; set; }
                new int lockTimeout { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Configuration { get; set; }
                new global::System.Collections.IEnumerable Connections { get; }
                new global::System.Collections.IEnumerable Pins { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Location { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry
                    deviceId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry(
                        "deviceId",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._deviceId_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._deviceId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._deviceId_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._deviceId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._deviceId_OnValueChanged);
                private static void _deviceId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._deviceId, sf);
                }
                private static bool _deviceId_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.deviceId_IsReadOnly(ref result);
                    return result;
                }
                private static void _deviceId_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.deviceId_Validate(r);
                }
                private static int _deviceId_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.deviceId;
                }
                private static void _deviceId_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.deviceId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "name",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._name_OnValueChanged);
                private static void _name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._name, sf);
                }
                private static bool _name_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.name_IsReadOnly(ref result);
                    return result;
                }
                private static void _name_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.name_Validate(r);
                }
                private static string _name_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.name;
                }
                private static void _name_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.name = v;
                }
                private static void _name_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    os = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "os",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._os_OnValueChanged);
                private static void _os_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._os, sf);
                }
                private static bool _os_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.os_IsReadOnly(ref result);
                    return result;
                }
                private static void _os_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.os_Validate(r);
                }
                private static string _os_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.os;
                }
                private static void _os_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.os = v;
                }
                private static void _os_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.os_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "description",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._description_OnValueChanged);
                private static void _description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._description, sf);
                }
                private static bool _description_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.description_IsReadOnly(ref result);
                    return result;
                }
                private static void _description_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.description_Validate(r);
                }
                private static string _description_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.description;
                }
                private static void _description_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.description = v;
                }
                private static void _description_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    ipAddress = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "ipAddress",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ipAddress_OnValueChanged);
                private static void _ipAddress_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._ipAddress, sf);
                }
                private static bool _ipAddress_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.ipAddress_IsReadOnly(ref result);
                    return result;
                }
                private static void _ipAddress_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ipAddress_Validate(r);
                }
                private static string _ipAddress_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.ipAddress;
                }
                private static void _ipAddress_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ipAddress = v;
                }
                private static void _ipAddress_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.ipAddress_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    lastConnection = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "lastConnection",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lastConnection_OnValueChanged);
                private static void _lastConnection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._lastConnection, sf);
                }
                private static bool _lastConnection_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.lastConnection_IsReadOnly(ref result);
                    return result;
                }
                private static void _lastConnection_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.lastConnection_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _lastConnection_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.lastConnection;
                }
                private static void _lastConnection_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.lastConnection = global::LightSwitchApplication.Device.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _lastConnection_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.lastConnection_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry
                    lockTimeout = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry(
                        "lockTimeout",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._lockTimeout_OnValueChanged);
                private static void _lockTimeout_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._lockTimeout, sf);
                }
                private static bool _lockTimeout_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.lockTimeout_IsReadOnly(ref result);
                    return result;
                }
                private static void _lockTimeout_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.lockTimeout_Validate(r);
                }
                private static int _lockTimeout_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.lockTimeout;
                }
                private static void _lockTimeout_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, int v)
                {
                    d.ImplementationEntity.lockTimeout = v;
                }
                private static void _lockTimeout_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.lockTimeout_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration>.Entry
                    Configuration = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration>.Entry(
                        "Configuration",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Configuration_OnValueChanged);
                private static void _Configuration_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Configuration, sf);
                }
                private static bool _Configuration_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Configuration_IsReadOnly(ref result);
                    return result;
                }
                private static void _Configuration_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Configuration_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Configuration_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Configuration;
                }
                private static global::LightSwitchApplication.Configuration _Configuration_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration, ref d._Configuration);
                }
                private static void _Configuration_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.Configuration v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration, ref d._Configuration, (i, ev) => i.Configuration = ev, v);
                }
                private static void _Configuration_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Configuration, ref d._Configuration);
                }
                private static void _Configuration_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Configuration_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection>.Entry
                    Connections = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection>.Entry(
                        "Connections",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Connections_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Connections_GetReferencedEntities,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Connections_GetEntityCollection);
                private static void _Connections_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Connections, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Connection> _Connections_GetReferencedEntities(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Connections, ref d._Connections);
                }
                private static global::System.Collections.IEnumerable _Connections_GetEntityCollection(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Connections;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin>.Entry
                    Pins = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin>.Entry(
                        "Pins",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Pins_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Pins_GetReferencedEntities,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Pins_GetEntityCollection);
                private static void _Pins_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Pins, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Pin> _Pins_GetReferencedEntities(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Pin, global::LightSwitchApplication.Pin.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Pins, ref d._Pins);
                }
                private static global::System.Collections.IEnumerable _Pins_GetEntityCollection(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Pins;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location>.Entry(
                        "Location",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Location_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static global::LightSwitchApplication.Location _Location_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Location, global::LightSwitchApplication.Location.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.Location v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location, ref d._Location, (i, ev) => i.Location = ev, v);
                }
                private static void _Location_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Location_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data _deviceId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _os;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _ipAddress;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _lastConnection;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data _lockTimeout;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Configuration>.Data _Configuration;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Connection>.Data _Connections;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Pin>.Data _Pins;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Location>.Data _Location;
            
        }
    
        #endregion
    }
    
    #endregion
}
