

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class NotificationRule : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the NotificationRule entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NotificationRule()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NotificationRule(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.NotificationRule> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.NotificationRule.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NotificationRule_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NotificationRule_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int notificationRuleId
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.notificationRuleId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void notificationRuleId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void notificationRuleId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void notificationRuleId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string description
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.description);
            }
            set
            {
                global::LightSwitchApplication.NotificationRule.DetailsClass.SetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int priorToProcedureTime
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.priorToProcedureTime);
            }
            set
            {
                global::LightSwitchApplication.NotificationRule.DetailsClass.SetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.priorToProcedureTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priorToProcedureTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priorToProcedureTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priorToProcedureTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> durationMinutes
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.durationMinutes);
            }
            set
            {
                global::LightSwitchApplication.NotificationRule.DetailsClass.SetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.durationMinutes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool isAcknowledgmentRequired
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.isAcknowledgmentRequired);
            }
            set
            {
                global::LightSwitchApplication.NotificationRule.DetailsClass.SetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.isAcknowledgmentRequired, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void isAcknowledgmentRequired_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void isAcknowledgmentRequired_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void isAcknowledgmentRequired_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Procedure Procedure
        {
            get
            {
                return global::LightSwitchApplication.NotificationRule.DetailsClass.GetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure);
            }
            set
            {
                global::LightSwitchApplication.NotificationRule.DetailsClass.SetValue(this, global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.NotificationRule,
                global::LightSwitchApplication.NotificationRule.DetailsClass,
                global::LightSwitchApplication.NotificationRule.DetailsClass.IImplementation,
                global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.notificationRuleId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>.Entry
                __NotificationRuleEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>.Entry(
                    global::LightSwitchApplication.NotificationRule.DetailsClass.__NotificationRule_CreateNew,
                    global::LightSwitchApplication.NotificationRule.DetailsClass.__NotificationRule_Created,
                    global::LightSwitchApplication.NotificationRule.DetailsClass.__NotificationRule_AllowSaveWithErrors);
            private static global::LightSwitchApplication.NotificationRule __NotificationRule_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.NotificationRule> es)
            {
                return new global::LightSwitchApplication.NotificationRule(es);
            }
            private static void __NotificationRule_Created(global::LightSwitchApplication.NotificationRule e)
            {
                e.NotificationRule_Created();
            }
            private static bool __NotificationRule_AllowSaveWithErrors(global::LightSwitchApplication.NotificationRule e)
            {
                bool result = false;
                e.NotificationRule_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int> notificationRuleId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.notificationRuleId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string> description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int> priorToProcedureTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.priorToProcedureTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>> durationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.durationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool> isAcknowledgmentRequired
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.isAcknowledgmentRequired) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure> Procedure
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int notificationRuleId { get; }
                new string description { get; set; }
                new int priorToProcedureTime { get; set; }
                new global::System.Nullable<int> durationMinutes { get; set; }
                new bool isAcknowledgmentRequired { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Procedure { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Entry
                    notificationRuleId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Entry(
                        "notificationRuleId",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._notificationRuleId_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._notificationRuleId_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._notificationRuleId_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._notificationRuleId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._notificationRuleId_OnValueChanged);
                private static void _notificationRuleId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._notificationRuleId, sf);
                }
                private static bool _notificationRuleId_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.notificationRuleId_IsReadOnly(ref result);
                    return result;
                }
                private static void _notificationRuleId_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.notificationRuleId_Validate(r);
                }
                private static int _notificationRuleId_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.notificationRuleId;
                }
                private static void _notificationRuleId_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.notificationRuleId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string>.Entry
                    description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string>.Entry(
                        "description",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_GetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_SetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._description_OnValueChanged);
                private static void _description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._description, sf);
                }
                private static bool _description_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.description_IsReadOnly(ref result);
                    return result;
                }
                private static void _description_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.description_Validate(r);
                }
                private static string _description_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.description;
                }
                private static void _description_SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.description = v;
                }
                private static void _description_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Entry
                    priorToProcedureTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Entry(
                        "priorToProcedureTime",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_GetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_SetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._priorToProcedureTime_OnValueChanged);
                private static void _priorToProcedureTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._priorToProcedureTime, sf);
                }
                private static bool _priorToProcedureTime_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.priorToProcedureTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _priorToProcedureTime_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.priorToProcedureTime_Validate(r);
                }
                private static int _priorToProcedureTime_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.priorToProcedureTime;
                }
                private static void _priorToProcedureTime_SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d, int v)
                {
                    d.ImplementationEntity.priorToProcedureTime = v;
                }
                private static void _priorToProcedureTime_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.priorToProcedureTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>>.Entry
                    durationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>>.Entry(
                        "durationMinutes",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_GetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_SetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._durationMinutes_OnValueChanged);
                private static void _durationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._durationMinutes, sf);
                }
                private static bool _durationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.durationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _durationMinutes_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.durationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _durationMinutes_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.durationMinutes;
                }
                private static void _durationMinutes_SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.durationMinutes = v;
                }
                private static void _durationMinutes_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.durationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool>.Entry
                    isAcknowledgmentRequired = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool>.Entry(
                        "isAcknowledgmentRequired",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_GetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_SetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._isAcknowledgmentRequired_OnValueChanged);
                private static void _isAcknowledgmentRequired_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._isAcknowledgmentRequired, sf);
                }
                private static bool _isAcknowledgmentRequired_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.isAcknowledgmentRequired_IsReadOnly(ref result);
                    return result;
                }
                private static void _isAcknowledgmentRequired_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.isAcknowledgmentRequired_Validate(r);
                }
                private static bool _isAcknowledgmentRequired_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.isAcknowledgmentRequired;
                }
                private static void _isAcknowledgmentRequired_SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.isAcknowledgmentRequired = v;
                }
                private static void _isAcknowledgmentRequired_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.isAcknowledgmentRequired_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure>.Entry
                    Procedure = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure>.Entry(
                        "Procedure",
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_Stub,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_ComputeIsReadOnly,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_Validate,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_GetCoreImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_GetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_SetImplementationValue,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_Refresh,
                        global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties._Procedure_OnValueChanged);
                private static void _Procedure_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NotificationRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure>.Data> c, global::LightSwitchApplication.NotificationRule.DetailsClass d, object sf)
                {
                    c(d, ref d._Procedure, sf);
                }
                private static bool _Procedure_ComputeIsReadOnly(global::LightSwitchApplication.NotificationRule e)
                {
                    bool result = false;
                    e.Procedure_IsReadOnly(ref result);
                    return result;
                }
                private static void _Procedure_Validate(global::LightSwitchApplication.NotificationRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Procedure_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Procedure_GetCoreImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.ImplementationEntity.Procedure;
                }
                private static global::LightSwitchApplication.Procedure _Procedure_GetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure, ref d._Procedure);
                }
                private static void _Procedure_SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass d, global::LightSwitchApplication.Procedure v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure, ref d._Procedure, (i, ev) => i.Procedure = ev, v);
                }
                private static void _Procedure_Refresh(global::LightSwitchApplication.NotificationRule.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.NotificationRule.DetailsClass.PropertySetProperties.Procedure, ref d._Procedure);
                }
                private static void _Procedure_OnValueChanged(global::LightSwitchApplication.NotificationRule e)
                {
                    e.Procedure_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Data _notificationRuleId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, string>.Data _description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, int>.Data _priorToProcedureTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::System.Nullable<int>>.Data _durationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, bool>.Data _isAcknowledgmentRequired;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass, global::LightSwitchApplication.Procedure>.Data _Procedure;
            
        }
    
        #endregion
    }
    
    #endregion
}
