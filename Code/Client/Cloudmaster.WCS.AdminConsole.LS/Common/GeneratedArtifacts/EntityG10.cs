

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Procedure : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Procedure entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Procedure()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Procedure(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Procedure> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Procedure.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int procedureId
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.procedureId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void procedureId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void procedureId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void procedureId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string externalId
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.externalId);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.externalId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void externalId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void externalId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void externalId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string code
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.code);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.code, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void code_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void code_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void code_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string description
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.description);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> durationMinutes
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.durationMinutes);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.durationMinutes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void durationMinutes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.NotificationRule> NotificationRules
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.NotificationRules);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.NotificationRule> NotificationRulesQuery
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetQuery(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.NotificationRules);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProcedureCategory ProcedureCategory
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureCategory_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureCategory_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureCategory_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ExternalSource ExternalSource
        {
            get
            {
                return global::LightSwitchApplication.Procedure.DetailsClass.GetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource);
            }
            set
            {
                global::LightSwitchApplication.Procedure.DetailsClass.SetValue(this, global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExternalSource_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExternalSource_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExternalSource_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Procedure,
                global::LightSwitchApplication.Procedure.DetailsClass,
                global::LightSwitchApplication.Procedure.DetailsClass.IImplementation,
                global::LightSwitchApplication.Procedure.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.procedureId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>.Entry
                __ProcedureEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>.Entry(
                    global::LightSwitchApplication.Procedure.DetailsClass.__Procedure_CreateNew,
                    global::LightSwitchApplication.Procedure.DetailsClass.__Procedure_Created,
                    global::LightSwitchApplication.Procedure.DetailsClass.__Procedure_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Procedure __Procedure_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Procedure> es)
            {
                return new global::LightSwitchApplication.Procedure(es);
            }
            private static void __Procedure_Created(global::LightSwitchApplication.Procedure e)
            {
                e.Procedure_Created();
            }
            private static bool __Procedure_AllowSaveWithErrors(global::LightSwitchApplication.Procedure e)
            {
                bool result = false;
                e.Procedure_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Procedure.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int> procedureId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.procedureId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string> externalId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.externalId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string> code
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.code) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string> description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>> durationMinutes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.durationMinutes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule> NotificationRules
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.NotificationRules) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory> ProcedureCategory
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource> ExternalSource
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int procedureId { get; }
                new string externalId { get; set; }
                new string code { get; set; }
                new string description { get; set; }
                new global::System.Nullable<int> durationMinutes { get; set; }
                new global::System.Collections.IEnumerable NotificationRules { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProcedureCategory { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ExternalSource { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int>.Entry
                    procedureId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int>.Entry(
                        "procedureId",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._procedureId_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._procedureId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._procedureId_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._procedureId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._procedureId_OnValueChanged);
                private static void _procedureId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._procedureId, sf);
                }
                private static bool _procedureId_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.procedureId_IsReadOnly(ref result);
                    return result;
                }
                private static void _procedureId_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.procedureId_Validate(r);
                }
                private static int _procedureId_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.procedureId;
                }
                private static void _procedureId_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.procedureId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry
                    externalId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry(
                        "externalId",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._externalId_OnValueChanged);
                private static void _externalId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._externalId, sf);
                }
                private static bool _externalId_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.externalId_IsReadOnly(ref result);
                    return result;
                }
                private static void _externalId_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.externalId_Validate(r);
                }
                private static string _externalId_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.externalId;
                }
                private static void _externalId_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, string v)
                {
                    d.ImplementationEntity.externalId = v;
                }
                private static void _externalId_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.externalId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry
                    code = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry(
                        "code",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._code_OnValueChanged);
                private static void _code_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._code, sf);
                }
                private static bool _code_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.code_IsReadOnly(ref result);
                    return result;
                }
                private static void _code_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.code_Validate(r);
                }
                private static string _code_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.code;
                }
                private static void _code_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, string v)
                {
                    d.ImplementationEntity.code = v;
                }
                private static void _code_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.code_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry
                    description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Entry(
                        "description",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._description_OnValueChanged);
                private static void _description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._description, sf);
                }
                private static bool _description_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.description_IsReadOnly(ref result);
                    return result;
                }
                private static void _description_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.description_Validate(r);
                }
                private static string _description_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.description;
                }
                private static void _description_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, string v)
                {
                    d.ImplementationEntity.description = v;
                }
                private static void _description_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>>.Entry
                    durationMinutes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>>.Entry(
                        "durationMinutes",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._durationMinutes_OnValueChanged);
                private static void _durationMinutes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._durationMinutes, sf);
                }
                private static bool _durationMinutes_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.durationMinutes_IsReadOnly(ref result);
                    return result;
                }
                private static void _durationMinutes_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.durationMinutes_Validate(r);
                }
                private static global::System.Nullable<int> _durationMinutes_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.durationMinutes;
                }
                private static void _durationMinutes_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.durationMinutes = v;
                }
                private static void _durationMinutes_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.durationMinutes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule>.Entry
                    NotificationRules = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule>.Entry(
                        "NotificationRules",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._NotificationRules_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._NotificationRules_GetReferencedEntities,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._NotificationRules_GetEntityCollection);
                private static void _NotificationRules_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._NotificationRules, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NotificationRule> _NotificationRules_GetReferencedEntities(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.NotificationRule, global::LightSwitchApplication.NotificationRule.DetailsClass>(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.NotificationRules, ref d._NotificationRules);
                }
                private static global::System.Collections.IEnumerable _NotificationRules_GetEntityCollection(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.NotificationRules;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory>.Entry
                    ProcedureCategory = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory>.Entry(
                        "ProcedureCategory",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_GetCoreImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_Refresh,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ProcedureCategory_OnValueChanged);
                private static void _ProcedureCategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._ProcedureCategory, sf);
                }
                private static bool _ProcedureCategory_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.ProcedureCategory_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProcedureCategory_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProcedureCategory_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProcedureCategory_GetCoreImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.ProcedureCategory;
                }
                private static global::LightSwitchApplication.ProcedureCategory _ProcedureCategory_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProcedureCategory, global::LightSwitchApplication.ProcedureCategory.DetailsClass>(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory, ref d._ProcedureCategory);
                }
                private static void _ProcedureCategory_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, global::LightSwitchApplication.ProcedureCategory v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory, ref d._ProcedureCategory, (i, ev) => i.ProcedureCategory = ev, v);
                }
                private static void _ProcedureCategory_Refresh(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ProcedureCategory, ref d._ProcedureCategory);
                }
                private static void _ProcedureCategory_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.ProcedureCategory_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource>.Entry
                    ExternalSource = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource>.Entry(
                        "ExternalSource",
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_Stub,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_ComputeIsReadOnly,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_Validate,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_GetCoreImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_GetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_SetImplementationValue,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_Refresh,
                        global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties._ExternalSource_OnValueChanged);
                private static void _ExternalSource_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Procedure.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource>.Data> c, global::LightSwitchApplication.Procedure.DetailsClass d, object sf)
                {
                    c(d, ref d._ExternalSource, sf);
                }
                private static bool _ExternalSource_ComputeIsReadOnly(global::LightSwitchApplication.Procedure e)
                {
                    bool result = false;
                    e.ExternalSource_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExternalSource_Validate(global::LightSwitchApplication.Procedure e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExternalSource_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ExternalSource_GetCoreImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.ImplementationEntity.ExternalSource;
                }
                private static global::LightSwitchApplication.ExternalSource _ExternalSource_GetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ExternalSource, global::LightSwitchApplication.ExternalSource.DetailsClass>(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource, ref d._ExternalSource);
                }
                private static void _ExternalSource_SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass d, global::LightSwitchApplication.ExternalSource v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource, ref d._ExternalSource, (i, ev) => i.ExternalSource = ev, v);
                }
                private static void _ExternalSource_Refresh(global::LightSwitchApplication.Procedure.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Procedure.DetailsClass.PropertySetProperties.ExternalSource, ref d._ExternalSource);
                }
                private static void _ExternalSource_OnValueChanged(global::LightSwitchApplication.Procedure e)
                {
                    e.ExternalSource_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, int>.Data _procedureId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data _externalId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data _code;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, string>.Data _description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::System.Nullable<int>>.Data _durationMinutes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.NotificationRule>.Data _NotificationRules;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ProcedureCategory>.Data _ProcedureCategory;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Procedure, global::LightSwitchApplication.Procedure.DetailsClass, global::LightSwitchApplication.ExternalSource>.Data _ExternalSource;
            
        }
    
        #endregion
    }
    
    #endregion
}
