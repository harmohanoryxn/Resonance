

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Connection : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Connection entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Connection()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Connection(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Connection> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Connection.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Connection_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Connection_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int connectionId
        {
            get
            {
                return global::LightSwitchApplication.Connection.DetailsClass.GetValue(this, global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionId);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime connectionTime
        {
            get
            {
                return global::LightSwitchApplication.Connection.DetailsClass.GetValue(this, global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionTime);
            }
            set
            {
                global::LightSwitchApplication.Connection.DetailsClass.SetValue(this, global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void connectionTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Device Device
        {
            get
            {
                return global::LightSwitchApplication.Connection.DetailsClass.GetValue(this, global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device);
            }
            set
            {
                global::LightSwitchApplication.Connection.DetailsClass.SetValue(this, global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Connection,
                global::LightSwitchApplication.Connection.DetailsClass,
                global::LightSwitchApplication.Connection.DetailsClass.IImplementation,
                global::LightSwitchApplication.Connection.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>.Entry
                __ConnectionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>.Entry(
                    global::LightSwitchApplication.Connection.DetailsClass.__Connection_CreateNew,
                    global::LightSwitchApplication.Connection.DetailsClass.__Connection_Created,
                    global::LightSwitchApplication.Connection.DetailsClass.__Connection_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Connection __Connection_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Connection> es)
            {
                return new global::LightSwitchApplication.Connection(es);
            }
            private static void __Connection_Created(global::LightSwitchApplication.Connection e)
            {
                e.Connection_Created();
            }
            private static bool __Connection_AllowSaveWithErrors(global::LightSwitchApplication.Connection e)
            {
                bool result = false;
                e.Connection_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Connection.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int> connectionId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime> connectionTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.connectionTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device> Device
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int connectionId { get; }
                new global::System.DateTime connectionTime { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Device { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int>.Entry
                    connectionId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int>.Entry(
                        "connectionId",
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionId_Stub,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionId_Validate,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionId_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionId_OnValueChanged);
                private static void _connectionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Connection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int>.Data> c, global::LightSwitchApplication.Connection.DetailsClass d, object sf)
                {
                    c(d, ref d._connectionId, sf);
                }
                private static bool _connectionId_ComputeIsReadOnly(global::LightSwitchApplication.Connection e)
                {
                    bool result = false;
                    e.connectionId_IsReadOnly(ref result);
                    return result;
                }
                private static void _connectionId_Validate(global::LightSwitchApplication.Connection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.connectionId_Validate(r);
                }
                private static int _connectionId_GetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d)
                {
                    return d.ImplementationEntity.connectionId;
                }
                private static void _connectionId_OnValueChanged(global::LightSwitchApplication.Connection e)
                {
                    e.connectionId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime>.Entry
                    connectionTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime>.Entry(
                        "connectionTime",
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_Stub,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_Validate,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_GetImplementationValue,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_SetImplementationValue,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._connectionTime_OnValueChanged);
                private static void _connectionTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Connection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Connection.DetailsClass d, object sf)
                {
                    c(d, ref d._connectionTime, sf);
                }
                private static bool _connectionTime_ComputeIsReadOnly(global::LightSwitchApplication.Connection e)
                {
                    bool result = false;
                    e.connectionTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _connectionTime_Validate(global::LightSwitchApplication.Connection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.connectionTime_Validate(r);
                }
                private static global::System.DateTime _connectionTime_GetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d)
                {
                    return d.ImplementationEntity.connectionTime;
                }
                private static void _connectionTime_SetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.connectionTime = global::LightSwitchApplication.Connection.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _connectionTime_OnValueChanged(global::LightSwitchApplication.Connection e)
                {
                    e.connectionTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device>.Entry
                    Device = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device>.Entry(
                        "Device",
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_Stub,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_ComputeIsReadOnly,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_Validate,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_GetCoreImplementationValue,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_GetImplementationValue,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_SetImplementationValue,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_Refresh,
                        global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties._Device_OnValueChanged);
                private static void _Device_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Connection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device>.Data> c, global::LightSwitchApplication.Connection.DetailsClass d, object sf)
                {
                    c(d, ref d._Device, sf);
                }
                private static bool _Device_ComputeIsReadOnly(global::LightSwitchApplication.Connection e)
                {
                    bool result = false;
                    e.Device_IsReadOnly(ref result);
                    return result;
                }
                private static void _Device_Validate(global::LightSwitchApplication.Connection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Device_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Device_GetCoreImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d)
                {
                    return d.ImplementationEntity.Device;
                }
                private static global::LightSwitchApplication.Device _Device_GetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device, ref d._Device);
                }
                private static void _Device_SetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass d, global::LightSwitchApplication.Device v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device, ref d._Device, (i, ev) => i.Device = ev, v);
                }
                private static void _Device_Refresh(global::LightSwitchApplication.Connection.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Connection.DetailsClass.PropertySetProperties.Device, ref d._Device);
                }
                private static void _Device_OnValueChanged(global::LightSwitchApplication.Connection e)
                {
                    e.Device_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, int>.Data _connectionId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::System.DateTime>.Data _connectionTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Connection, global::LightSwitchApplication.Connection.DetailsClass, global::LightSwitchApplication.Device>.Data _Device;
            
        }
    
        #endregion
    }
    
    #endregion
}
