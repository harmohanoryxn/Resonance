//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WcsDB", "FK_ConfigurationConfigurationLocation", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Configuration), "ConfigurationLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.ConfigurationLocation), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_ConfigurationConfigurationType", "ConfigurationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.ConfigurationType), "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Configuration), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_ConfigurationDevice", "Configuration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Configuration), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Device), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_DeviceConnection", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Device), "Connection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Connection), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_DevicePin", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Device), "Pin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Pin), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_LocationConfigurationLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Location), "ConfigurationLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.ConfigurationLocation), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_LocationWCS_Device", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Location), "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Device), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_NotificationRuleProcedure", "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.Procedure), "NotificationRule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.NotificationRule), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_ProcedureCategoryProcedure", "ProcedureCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.ProcedureCategory), "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Procedure), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_ExternalSourceProcedure", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.ExternalSource), "Procedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.Procedure), true)]
[assembly: EdmRelationshipAttribute("WcsDB", "FK_ExternalSourceProcedureCategory", "ExternalSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WcsDB.Implementation.ExternalSource), "ProcedureCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WcsDB.Implementation.ProcedureCategory), true)]

#endregion

namespace WcsDB.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WcsDBObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WcsDBObjectContext object using the connection string found in the 'WcsDBObjectContext' section of the application configuration file.
        /// </summary>
        public WcsDBObjectContext() : base("name=WcsDBObjectContext", "WcsDBObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WcsDBObjectContext object.
        /// </summary>
        public WcsDBObjectContext(string connectionString) : base(connectionString, "WcsDBObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WcsDBObjectContext object.
        /// </summary>
        public WcsDBObjectContext(EntityConnection connection) : base(connection, "WcsDBObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configurations
        {
            get
            {
                if ((_Configurations == null))
                {
                    _Configurations = base.CreateObjectSet<Configuration>("Configurations");
                }
                return _Configurations;
            }
        }
        private ObjectSet<Configuration> _Configurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigurationLocation> ConfigurationLocations
        {
            get
            {
                if ((_ConfigurationLocations == null))
                {
                    _ConfigurationLocations = base.CreateObjectSet<ConfigurationLocation>("ConfigurationLocations");
                }
                return _ConfigurationLocations;
            }
        }
        private ObjectSet<ConfigurationLocation> _ConfigurationLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigurationType> ConfigurationTypes
        {
            get
            {
                if ((_ConfigurationTypes == null))
                {
                    _ConfigurationTypes = base.CreateObjectSet<ConfigurationType>("ConfigurationTypes");
                }
                return _ConfigurationTypes;
            }
        }
        private ObjectSet<ConfigurationType> _ConfigurationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Connection> Connections
        {
            get
            {
                if ((_Connections == null))
                {
                    _Connections = base.CreateObjectSet<Connection>("Connections");
                }
                return _Connections;
            }
        }
        private ObjectSet<Connection> _Connections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationRule> NotificationRules
        {
            get
            {
                if ((_NotificationRules == null))
                {
                    _NotificationRules = base.CreateObjectSet<NotificationRule>("NotificationRules");
                }
                return _NotificationRules;
            }
        }
        private ObjectSet<NotificationRule> _NotificationRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pin> Pins
        {
            get
            {
                if ((_Pins == null))
                {
                    _Pins = base.CreateObjectSet<Pin>("Pins");
                }
                return _Pins;
            }
        }
        private ObjectSet<Pin> _Pins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Procedure> Procedures
        {
            get
            {
                if ((_Procedures == null))
                {
                    _Procedures = base.CreateObjectSet<Procedure>("Procedures");
                }
                return _Procedures;
            }
        }
        private ObjectSet<Procedure> _Procedures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcedureCategory> ProcedureCategories
        {
            get
            {
                if ((_ProcedureCategories == null))
                {
                    _ProcedureCategories = base.CreateObjectSet<ProcedureCategory>("ProcedureCategories");
                }
                return _ProcedureCategories;
            }
        }
        private ObjectSet<ProcedureCategory> _ProcedureCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExternalSource> ExternalSources
        {
            get
            {
                if ((_ExternalSources == null))
                {
                    _ExternalSources = base.CreateObjectSet<ExternalSource>("ExternalSources");
                }
                return _ExternalSources;
            }
        }
        private ObjectSet<ExternalSource> _ExternalSources;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurations(Configuration configuration)
        {
            base.AddObject("Configurations", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigurationLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurationLocations(ConfigurationLocation configurationLocation)
        {
            base.AddObject("ConfigurationLocations", configurationLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigurationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurationTypes(ConfigurationType configurationType)
        {
            base.AddObject("ConfigurationTypes", configurationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Connections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConnections(Connection connection)
        {
            base.AddObject("Connections", connection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationRules(NotificationRule notificationRule)
        {
            base.AddObject("NotificationRules", notificationRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPins(Pin pin)
        {
            base.AddObject("Pins", pin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Procedures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcedures(Procedure procedure)
        {
            base.AddObject("Procedures", procedure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcedureCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcedureCategories(ProcedureCategory procedureCategory)
        {
            base.AddObject("ProcedureCategories", procedureCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExternalSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExternalSources(ExternalSource externalSource)
        {
            base.AddObject("ExternalSources", externalSource);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="configurationType_ConfigurationTypeId">Initial value of the ConfigurationType_ConfigurationTypeId property.</param>
        public static Configuration CreateConfiguration(global::System.Int32 configurationId, global::System.String name, global::System.Int32 configurationType_ConfigurationTypeId)
        {
            Configuration configuration = new Configuration();
            configuration.configurationId = configurationId;
            configuration.name = name;
            configuration.ConfigurationType_ConfigurationTypeId = configurationType_ConfigurationTypeId;
            return configuration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                if (_configurationId != value)
                {
                    OnconfigurationIdChanging(value);
                    ReportPropertyChanging("configurationId");
                    _configurationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("configurationId");
                    OnconfigurationIdChanged();
                }
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationType_ConfigurationTypeId
        {
            get
            {
                return _ConfigurationType_ConfigurationTypeId;
            }
            set
            {
                OnConfigurationType_ConfigurationTypeIdChanging(value);
                ReportPropertyChanging("ConfigurationType_ConfigurationTypeId");
                _ConfigurationType_ConfigurationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfigurationType_ConfigurationTypeId");
                OnConfigurationType_ConfigurationTypeIdChanged();
            }
        }
        private global::System.Int32 _ConfigurationType_ConfigurationTypeId;
        partial void OnConfigurationType_ConfigurationTypeIdChanging(global::System.Int32 value);
        partial void OnConfigurationType_ConfigurationTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationConfigurationLocation", "ConfigurationLocation")]
        public EntityCollection<ConfigurationLocation> ConfigurationLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigurationLocation>("WcsDB.FK_ConfigurationConfigurationLocation", "ConfigurationLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigurationLocation>("WcsDB.FK_ConfigurationConfigurationLocation", "ConfigurationLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationConfigurationType", "ConfigurationType")]
        public ConfigurationType ConfigurationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WcsDB.FK_ConfigurationConfigurationType", "ConfigurationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WcsDB.FK_ConfigurationConfigurationType", "ConfigurationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfigurationType> ConfigurationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigurationType>("WcsDB.FK_ConfigurationConfigurationType", "ConfigurationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfigurationType>("WcsDB.FK_ConfigurationConfigurationType", "ConfigurationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationDevice", "Device")]
        public EntityCollection<Device> Devices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("WcsDB.FK_ConfigurationDevice", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("WcsDB.FK_ConfigurationDevice", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="ConfigurationLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigurationLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigurationLocation object.
        /// </summary>
        /// <param name="configurationLocationId">Initial value of the configurationLocationId property.</param>
        /// <param name="isDefault">Initial value of the isDefault property.</param>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="locationId">Initial value of the locationId property.</param>
        public static ConfigurationLocation CreateConfigurationLocation(global::System.Int32 configurationLocationId, global::System.Boolean isDefault, global::System.Int32 configurationId, global::System.Int32 locationId)
        {
            ConfigurationLocation configurationLocation = new ConfigurationLocation();
            configurationLocation.configurationLocationId = configurationLocationId;
            configurationLocation.isDefault = isDefault;
            configurationLocation.configurationId = configurationId;
            configurationLocation.locationId = locationId;
            return configurationLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationLocationId
        {
            get
            {
                return _configurationLocationId;
            }
            set
            {
                if (_configurationLocationId != value)
                {
                    OnconfigurationLocationIdChanging(value);
                    ReportPropertyChanging("configurationLocationId");
                    _configurationLocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("configurationLocationId");
                    OnconfigurationLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _configurationLocationId;
        partial void OnconfigurationLocationIdChanging(global::System.Int32 value);
        partial void OnconfigurationLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isDefault
        {
            get
            {
                return _isDefault;
            }
            set
            {
                OnisDefaultChanging(value);
                ReportPropertyChanging("isDefault");
                _isDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isDefault");
                OnisDefaultChanged();
            }
        }
        private global::System.Boolean _isDefault;
        partial void OnisDefaultChanging(global::System.Boolean value);
        partial void OnisDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                OnconfigurationIdChanging(value);
                ReportPropertyChanging("configurationId");
                _configurationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configurationId");
                OnconfigurationIdChanged();
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                OnlocationIdChanging(value);
                ReportPropertyChanging("locationId");
                _locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("locationId");
                OnlocationIdChanged();
            }
        }
        private global::System.Int32 _locationId;
        partial void OnlocationIdChanging(global::System.Int32 value);
        partial void OnlocationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationConfigurationLocation", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationConfigurationLocation", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationConfigurationLocation", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationConfigurationLocation", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("WcsDB.FK_ConfigurationConfigurationLocation", "Configuration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_LocationConfigurationLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationConfigurationLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationConfigurationLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationConfigurationLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WcsDB.FK_LocationConfigurationLocation", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="ConfigurationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigurationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigurationType object.
        /// </summary>
        /// <param name="configurationTypeId">Initial value of the ConfigurationTypeId property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static ConfigurationType CreateConfigurationType(global::System.Int32 configurationTypeId, global::System.String name)
        {
            ConfigurationType configurationType = new ConfigurationType();
            configurationType.ConfigurationTypeId = configurationTypeId;
            configurationType.name = name;
            return configurationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConfigurationTypeId
        {
            get
            {
                return _ConfigurationTypeId;
            }
            set
            {
                if (_ConfigurationTypeId != value)
                {
                    OnConfigurationTypeIdChanging(value);
                    ReportPropertyChanging("ConfigurationTypeId");
                    _ConfigurationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigurationTypeId");
                    OnConfigurationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ConfigurationTypeId;
        partial void OnConfigurationTypeIdChanging(global::System.Int32 value);
        partial void OnConfigurationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationConfigurationType", "Configuration")]
        public EntityCollection<Configuration> Configurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Configuration>("WcsDB.FK_ConfigurationConfigurationType", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Configuration>("WcsDB.FK_ConfigurationConfigurationType", "Configuration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Connection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Connection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Connection object.
        /// </summary>
        /// <param name="connectionId">Initial value of the connectionId property.</param>
        /// <param name="connectionTime">Initial value of the connectionTime property.</param>
        /// <param name="deviceId">Initial value of the deviceId property.</param>
        public static Connection CreateConnection(global::System.Int32 connectionId, global::System.DateTime connectionTime, global::System.Int32 deviceId)
        {
            Connection connection = new Connection();
            connection.connectionId = connectionId;
            connection.connectionTime = connectionTime;
            connection.deviceId = deviceId;
            return connection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 connectionId
        {
            get
            {
                return _connectionId;
            }
            set
            {
                if (_connectionId != value)
                {
                    OnconnectionIdChanging(value);
                    ReportPropertyChanging("connectionId");
                    _connectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("connectionId");
                    OnconnectionIdChanged();
                }
            }
        }
        private global::System.Int32 _connectionId;
        partial void OnconnectionIdChanging(global::System.Int32 value);
        partial void OnconnectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime connectionTime
        {
            get
            {
                return _connectionTime;
            }
            set
            {
                OnconnectionTimeChanging(value);
                ReportPropertyChanging("connectionTime");
                _connectionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("connectionTime");
                OnconnectionTimeChanged();
            }
        }
        private global::System.DateTime _connectionTime;
        partial void OnconnectionTimeChanging(global::System.DateTime value);
        partial void OnconnectionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 deviceId
        {
            get
            {
                return _deviceId;
            }
            set
            {
                OndeviceIdChanging(value);
                ReportPropertyChanging("deviceId");
                _deviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deviceId");
                OndeviceIdChanged();
            }
        }
        private global::System.Int32 _deviceId;
        partial void OndeviceIdChanging(global::System.Int32 value);
        partial void OndeviceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_DeviceConnection", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DeviceConnection", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DeviceConnection", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DeviceConnection", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("WcsDB.FK_DeviceConnection", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="deviceId">Initial value of the deviceId property.</param>
        /// <param name="lockTimeout">Initial value of the lockTimeout property.</param>
        /// <param name="configurationId">Initial value of the configurationId property.</param>
        /// <param name="locationId">Initial value of the locationId property.</param>
        public static Device CreateDevice(global::System.Int32 deviceId, global::System.Int32 lockTimeout, global::System.Int32 configurationId, global::System.Int32 locationId)
        {
            Device device = new Device();
            device.deviceId = deviceId;
            device.lockTimeout = lockTimeout;
            device.configurationId = configurationId;
            device.locationId = locationId;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 deviceId
        {
            get
            {
                return _deviceId;
            }
            set
            {
                if (_deviceId != value)
                {
                    OndeviceIdChanging(value);
                    ReportPropertyChanging("deviceId");
                    _deviceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("deviceId");
                    OndeviceIdChanged();
                }
            }
        }
        private global::System.Int32 _deviceId;
        partial void OndeviceIdChanging(global::System.Int32 value);
        partial void OndeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String os
        {
            get
            {
                return _os;
            }
            set
            {
                OnosChanging(value);
                ReportPropertyChanging("os");
                _os = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("os");
                OnosChanged();
            }
        }
        private global::System.String _os;
        partial void OnosChanging(global::System.String value);
        partial void OnosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipAddress
        {
            get
            {
                return _ipAddress;
            }
            set
            {
                OnipAddressChanging(value);
                ReportPropertyChanging("ipAddress");
                _ipAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipAddress");
                OnipAddressChanged();
            }
        }
        private global::System.String _ipAddress;
        partial void OnipAddressChanging(global::System.String value);
        partial void OnipAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastConnection
        {
            get
            {
                return _lastConnection;
            }
            set
            {
                OnlastConnectionChanging(value);
                ReportPropertyChanging("lastConnection");
                _lastConnection = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastConnection");
                OnlastConnectionChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastConnection;
        partial void OnlastConnectionChanging(Nullable<global::System.DateTime> value);
        partial void OnlastConnectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lockTimeout
        {
            get
            {
                return _lockTimeout;
            }
            set
            {
                OnlockTimeoutChanging(value);
                ReportPropertyChanging("lockTimeout");
                _lockTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lockTimeout");
                OnlockTimeoutChanged();
            }
        }
        private global::System.Int32 _lockTimeout;
        partial void OnlockTimeoutChanging(global::System.Int32 value);
        partial void OnlockTimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 configurationId
        {
            get
            {
                return _configurationId;
            }
            set
            {
                OnconfigurationIdChanging(value);
                ReportPropertyChanging("configurationId");
                _configurationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("configurationId");
                OnconfigurationIdChanged();
            }
        }
        private global::System.Int32 _configurationId;
        partial void OnconfigurationIdChanging(global::System.Int32 value);
        partial void OnconfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                OnlocationIdChanging(value);
                ReportPropertyChanging("locationId");
                _locationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("locationId");
                OnlocationIdChanged();
            }
        }
        private global::System.Int32 _locationId;
        partial void OnlocationIdChanging(global::System.Int32 value);
        partial void OnlocationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ConfigurationDevice", "Configuration")]
        public Configuration Configuration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationDevice", "Configuration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationDevice", "Configuration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Configuration> ConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Configuration>("WcsDB.FK_ConfigurationDevice", "Configuration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Configuration>("WcsDB.FK_ConfigurationDevice", "Configuration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_DeviceConnection", "Connection")]
        public EntityCollection<Connection> Connections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Connection>("WcsDB.FK_DeviceConnection", "Connection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Connection>("WcsDB.FK_DeviceConnection", "Connection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_DevicePin", "Pin")]
        public EntityCollection<Pin> Pins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pin>("WcsDB.FK_DevicePin", "Pin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pin>("WcsDB.FK_DevicePin", "Pin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_LocationWCS_Device", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationWCS_Device", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationWCS_Device", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("WcsDB.FK_LocationWCS_Device", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("WcsDB.FK_LocationWCS_Device", "Location", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="ExternalSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExternalSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExternalSource object.
        /// </summary>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        /// <param name="source">Initial value of the source property.</param>
        public static ExternalSource CreateExternalSource(global::System.Int32 externalSourceId, global::System.String source)
        {
            ExternalSource externalSource = new ExternalSource();
            externalSource.externalSourceId = externalSourceId;
            externalSource.source = source;
            return externalSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                if (_externalSourceId != value)
                {
                    OnexternalSourceIdChanging(value);
                    ReportPropertyChanging("externalSourceId");
                    _externalSourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("externalSourceId");
                    OnexternalSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ExternalSourceProcedure", "Procedure")]
        public EntityCollection<Procedure> Procedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Procedure>("WcsDB.FK_ExternalSourceProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Procedure>("WcsDB.FK_ExternalSourceProcedure", "Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ExternalSourceProcedureCategory", "ProcedureCategory")]
        public EntityCollection<ProcedureCategory> ProcedureCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProcedureCategory>("WcsDB.FK_ExternalSourceProcedureCategory", "ProcedureCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProcedureCategory>("WcsDB.FK_ExternalSourceProcedureCategory", "ProcedureCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the locationId property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.String code, global::System.String name)
        {
            Location location = new Location();
            location.locationId = locationId;
            location.code = code;
            location.name = name;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 locationId
        {
            get
            {
                return _locationId;
            }
            set
            {
                if (_locationId != value)
                {
                    OnlocationIdChanging(value);
                    ReportPropertyChanging("locationId");
                    _locationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("locationId");
                    OnlocationIdChanged();
                }
            }
        }
        private global::System.Int32 _locationId;
        partial void OnlocationIdChanging(global::System.Int32 value);
        partial void OnlocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patientType
        {
            get
            {
                return _patientType;
            }
            set
            {
                OnpatientTypeChanging(value);
                ReportPropertyChanging("patientType");
                _patientType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patientType");
                OnpatientTypeChanged();
            }
        }
        private global::System.String _patientType;
        partial void OnpatientTypeChanging(global::System.String value);
        partial void OnpatientTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactInfo
        {
            get
            {
                return _contactInfo;
            }
            set
            {
                OncontactInfoChanging(value);
                ReportPropertyChanging("contactInfo");
                _contactInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactInfo");
                OncontactInfoChanged();
            }
        }
        private global::System.String _contactInfo;
        partial void OncontactInfoChanging(global::System.String value);
        partial void OncontactInfoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_LocationConfigurationLocation", "ConfigurationLocation")]
        public EntityCollection<ConfigurationLocation> ConfigurationLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigurationLocation>("WcsDB.FK_LocationConfigurationLocation", "ConfigurationLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigurationLocation>("WcsDB.FK_LocationConfigurationLocation", "ConfigurationLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_LocationWCS_Device", "Device")]
        public EntityCollection<Device> Devices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Device>("WcsDB.FK_LocationWCS_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Device>("WcsDB.FK_LocationWCS_Device", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logId">Initial value of the logId property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="computerName">Initial value of the ComputerName property.</param>
        /// <param name="thread">Initial value of the Thread property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="logger">Initial value of the Logger property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static Log CreateLog(global::System.Int32 logId, global::System.DateTime c_Date, global::System.String computerName, global::System.String thread, global::System.String level, global::System.String logger, global::System.String message)
        {
            Log log = new Log();
            log.logId = logId;
            log.c_Date = c_Date;
            log.ComputerName = computerName;
            log.Thread = thread;
            log.Level = level;
            log.Logger = logger;
            log.Message = message;
            return log;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 logId
        {
            get
            {
                return _logId;
            }
            set
            {
                if (_logId != value)
                {
                    OnlogIdChanging(value);
                    ReportPropertyChanging("logId");
                    _logId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("logId");
                    OnlogIdChanged();
                }
            }
        }
        private global::System.Int32 _logId;
        partial void OnlogIdChanging(global::System.Int32 value);
        partial void OnlogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                if (_c_Date != value)
                {
                    Onc_DateChanging(value);
                    ReportPropertyChanging("c_Date");
                    _c_Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("c_Date");
                    Onc_DateChanged();
                }
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComputerName
        {
            get
            {
                return _ComputerName;
            }
            set
            {
                OnComputerNameChanging(value);
                ReportPropertyChanging("ComputerName");
                _ComputerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ComputerName");
                OnComputerNameChanged();
            }
        }
        private global::System.String _ComputerName;
        partial void OnComputerNameChanging(global::System.String value);
        partial void OnComputerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Thread
        {
            get
            {
                return _Thread;
            }
            set
            {
                if (_Thread != value)
                {
                    OnThreadChanging(value);
                    ReportPropertyChanging("Thread");
                    _Thread = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Thread");
                    OnThreadChanged();
                }
            }
        }
        private global::System.String _Thread;
        partial void OnThreadChanging(global::System.String value);
        partial void OnThreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Level
        {
            get
            {
                return _Level;
            }
            set
            {
                if (_Level != value)
                {
                    OnLevelChanging(value);
                    ReportPropertyChanging("Level");
                    _Level = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Level");
                    OnLevelChanged();
                }
            }
        }
        private global::System.String _Level;
        partial void OnLevelChanging(global::System.String value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Logger
        {
            get
            {
                return _Logger;
            }
            set
            {
                if (_Logger != value)
                {
                    OnLoggerChanging(value);
                    ReportPropertyChanging("Logger");
                    _Logger = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Logger");
                    OnLoggerChanged();
                }
            }
        }
        private global::System.String _Logger;
        partial void OnLoggerChanging(global::System.String value);
        partial void OnLoggerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                if (_Message != value)
                {
                    OnMessageChanging(value);
                    ReportPropertyChanging("Message");
                    _Message = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Message");
                    OnMessageChanged();
                }
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="NotificationRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationRule object.
        /// </summary>
        /// <param name="notificationRuleId">Initial value of the notificationRuleId property.</param>
        /// <param name="priorToProcedureTime">Initial value of the priorToProcedureTime property.</param>
        /// <param name="isAcknowledgmentRequired">Initial value of the isAcknowledgmentRequired property.</param>
        /// <param name="procedure_procedureId">Initial value of the Procedure_procedureId property.</param>
        public static NotificationRule CreateNotificationRule(global::System.Int32 notificationRuleId, global::System.Int32 priorToProcedureTime, global::System.Boolean isAcknowledgmentRequired, global::System.Int32 procedure_procedureId)
        {
            NotificationRule notificationRule = new NotificationRule();
            notificationRule.notificationRuleId = notificationRuleId;
            notificationRule.priorToProcedureTime = priorToProcedureTime;
            notificationRule.isAcknowledgmentRequired = isAcknowledgmentRequired;
            notificationRule.Procedure_procedureId = procedure_procedureId;
            return notificationRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 notificationRuleId
        {
            get
            {
                return _notificationRuleId;
            }
            set
            {
                if (_notificationRuleId != value)
                {
                    OnnotificationRuleIdChanging(value);
                    ReportPropertyChanging("notificationRuleId");
                    _notificationRuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("notificationRuleId");
                    OnnotificationRuleIdChanged();
                }
            }
        }
        private global::System.Int32 _notificationRuleId;
        partial void OnnotificationRuleIdChanging(global::System.Int32 value);
        partial void OnnotificationRuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 priorToProcedureTime
        {
            get
            {
                return _priorToProcedureTime;
            }
            set
            {
                OnpriorToProcedureTimeChanging(value);
                ReportPropertyChanging("priorToProcedureTime");
                _priorToProcedureTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("priorToProcedureTime");
                OnpriorToProcedureTimeChanged();
            }
        }
        private global::System.Int32 _priorToProcedureTime;
        partial void OnpriorToProcedureTimeChanging(global::System.Int32 value);
        partial void OnpriorToProcedureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> durationMinutes
        {
            get
            {
                return _durationMinutes;
            }
            set
            {
                OndurationMinutesChanging(value);
                ReportPropertyChanging("durationMinutes");
                _durationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("durationMinutes");
                OndurationMinutesChanged();
            }
        }
        private Nullable<global::System.Int32> _durationMinutes;
        partial void OndurationMinutesChanging(Nullable<global::System.Int32> value);
        partial void OndurationMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isAcknowledgmentRequired
        {
            get
            {
                return _isAcknowledgmentRequired;
            }
            set
            {
                OnisAcknowledgmentRequiredChanging(value);
                ReportPropertyChanging("isAcknowledgmentRequired");
                _isAcknowledgmentRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAcknowledgmentRequired");
                OnisAcknowledgmentRequiredChanged();
            }
        }
        private global::System.Boolean _isAcknowledgmentRequired;
        partial void OnisAcknowledgmentRequiredChanging(global::System.Boolean value);
        partial void OnisAcknowledgmentRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Procedure_procedureId
        {
            get
            {
                return _Procedure_procedureId;
            }
            set
            {
                OnProcedure_procedureIdChanging(value);
                ReportPropertyChanging("Procedure_procedureId");
                _Procedure_procedureId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Procedure_procedureId");
                OnProcedure_procedureIdChanged();
            }
        }
        private global::System.Int32 _Procedure_procedureId;
        partial void OnProcedure_procedureIdChanging(global::System.Int32 value);
        partial void OnProcedure_procedureIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_NotificationRuleProcedure", "Procedure")]
        public Procedure Procedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WcsDB.FK_NotificationRuleProcedure", "Procedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WcsDB.FK_NotificationRuleProcedure", "Procedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Procedure> ProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Procedure>("WcsDB.FK_NotificationRuleProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Procedure>("WcsDB.FK_NotificationRuleProcedure", "Procedure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Pin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pin object.
        /// </summary>
        /// <param name="pinId">Initial value of the pinId property.</param>
        /// <param name="pin1">Initial value of the pin1 property.</param>
        /// <param name="device_deviceId">Initial value of the Device_deviceId property.</param>
        public static Pin CreatePin(global::System.Int32 pinId, global::System.String pin1, global::System.Int32 device_deviceId)
        {
            Pin pin = new Pin();
            pin.pinId = pinId;
            pin.pin1 = pin1;
            pin.Device_deviceId = device_deviceId;
            return pin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pinId
        {
            get
            {
                return _pinId;
            }
            set
            {
                if (_pinId != value)
                {
                    OnpinIdChanging(value);
                    ReportPropertyChanging("pinId");
                    _pinId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pinId");
                    OnpinIdChanged();
                }
            }
        }
        private global::System.Int32 _pinId;
        partial void OnpinIdChanging(global::System.Int32 value);
        partial void OnpinIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pin1
        {
            get
            {
                return _pin1;
            }
            set
            {
                Onpin1Changing(value);
                ReportPropertyChanging("pin1");
                _pin1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pin1");
                Onpin1Changed();
            }
        }
        private global::System.String _pin1;
        partial void Onpin1Changing(global::System.String value);
        partial void Onpin1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Device_deviceId
        {
            get
            {
                return _Device_deviceId;
            }
            set
            {
                OnDevice_deviceIdChanging(value);
                ReportPropertyChanging("Device_deviceId");
                _Device_deviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Device_deviceId");
                OnDevice_deviceIdChanged();
            }
        }
        private global::System.Int32 _Device_deviceId;
        partial void OnDevice_deviceIdChanging(global::System.Int32 value);
        partial void OnDevice_deviceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_DevicePin", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DevicePin", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DevicePin", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("WcsDB.FK_DevicePin", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("WcsDB.FK_DevicePin", "Device", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="Procedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Procedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Procedure object.
        /// </summary>
        /// <param name="procedureId">Initial value of the procedureId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="code">Initial value of the code property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="procedureCategory_procedureCategoryId">Initial value of the ProcedureCategory_procedureCategoryId property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        public static Procedure CreateProcedure(global::System.Int32 procedureId, global::System.String externalId, global::System.String code, global::System.String description, global::System.Int32 procedureCategory_procedureCategoryId, global::System.Int32 externalSourceId)
        {
            Procedure procedure = new Procedure();
            procedure.procedureId = procedureId;
            procedure.externalId = externalId;
            procedure.code = code;
            procedure.description = description;
            procedure.ProcedureCategory_procedureCategoryId = procedureCategory_procedureCategoryId;
            procedure.externalSourceId = externalSourceId;
            return procedure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 procedureId
        {
            get
            {
                return _procedureId;
            }
            set
            {
                if (_procedureId != value)
                {
                    OnprocedureIdChanging(value);
                    ReportPropertyChanging("procedureId");
                    _procedureId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("procedureId");
                    OnprocedureIdChanged();
                }
            }
        }
        private global::System.Int32 _procedureId;
        partial void OnprocedureIdChanging(global::System.Int32 value);
        partial void OnprocedureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> durationMinutes
        {
            get
            {
                return _durationMinutes;
            }
            set
            {
                OndurationMinutesChanging(value);
                ReportPropertyChanging("durationMinutes");
                _durationMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("durationMinutes");
                OndurationMinutesChanged();
            }
        }
        private Nullable<global::System.Int32> _durationMinutes;
        partial void OndurationMinutesChanging(Nullable<global::System.Int32> value);
        partial void OndurationMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProcedureCategory_procedureCategoryId
        {
            get
            {
                return _ProcedureCategory_procedureCategoryId;
            }
            set
            {
                OnProcedureCategory_procedureCategoryIdChanging(value);
                ReportPropertyChanging("ProcedureCategory_procedureCategoryId");
                _ProcedureCategory_procedureCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcedureCategory_procedureCategoryId");
                OnProcedureCategory_procedureCategoryIdChanged();
            }
        }
        private global::System.Int32 _ProcedureCategory_procedureCategoryId;
        partial void OnProcedureCategory_procedureCategoryIdChanging(global::System.Int32 value);
        partial void OnProcedureCategory_procedureCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_NotificationRuleProcedure", "NotificationRule")]
        public EntityCollection<NotificationRule> NotificationRules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationRule>("WcsDB.FK_NotificationRuleProcedure", "NotificationRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationRule>("WcsDB.FK_NotificationRuleProcedure", "NotificationRule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ProcedureCategoryProcedure", "ProcedureCategory")]
        public ProcedureCategory ProcedureCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WcsDB.FK_ProcedureCategoryProcedure", "ProcedureCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WcsDB.FK_ProcedureCategoryProcedure", "ProcedureCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProcedureCategory> ProcedureCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProcedureCategory>("WcsDB.FK_ProcedureCategoryProcedure", "ProcedureCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProcedureCategory>("WcsDB.FK_ProcedureCategoryProcedure", "ProcedureCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ExternalSourceProcedure", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedure", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedure", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedure", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedure", "ExternalSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WcsDB", Name="ProcedureCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcedureCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcedureCategory object.
        /// </summary>
        /// <param name="procedureCategoryId">Initial value of the procedureCategoryId property.</param>
        /// <param name="externalId">Initial value of the externalId property.</param>
        /// <param name="includeInMerge">Initial value of the includeInMerge property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="externalSourceId">Initial value of the externalSourceId property.</param>
        public static ProcedureCategory CreateProcedureCategory(global::System.Int32 procedureCategoryId, global::System.String externalId, global::System.Boolean includeInMerge, global::System.String description, global::System.Int32 externalSourceId)
        {
            ProcedureCategory procedureCategory = new ProcedureCategory();
            procedureCategory.procedureCategoryId = procedureCategoryId;
            procedureCategory.externalId = externalId;
            procedureCategory.includeInMerge = includeInMerge;
            procedureCategory.description = description;
            procedureCategory.externalSourceId = externalSourceId;
            return procedureCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 procedureCategoryId
        {
            get
            {
                return _procedureCategoryId;
            }
            set
            {
                if (_procedureCategoryId != value)
                {
                    OnprocedureCategoryIdChanging(value);
                    ReportPropertyChanging("procedureCategoryId");
                    _procedureCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("procedureCategoryId");
                    OnprocedureCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _procedureCategoryId;
        partial void OnprocedureCategoryIdChanging(global::System.Int32 value);
        partial void OnprocedureCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String externalId
        {
            get
            {
                return _externalId;
            }
            set
            {
                OnexternalIdChanging(value);
                ReportPropertyChanging("externalId");
                _externalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("externalId");
                OnexternalIdChanged();
            }
        }
        private global::System.String _externalId;
        partial void OnexternalIdChanging(global::System.String value);
        partial void OnexternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean includeInMerge
        {
            get
            {
                return _includeInMerge;
            }
            set
            {
                OnincludeInMergeChanging(value);
                ReportPropertyChanging("includeInMerge");
                _includeInMerge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("includeInMerge");
                OnincludeInMergeChanged();
            }
        }
        private global::System.Boolean _includeInMerge;
        partial void OnincludeInMergeChanging(global::System.Boolean value);
        partial void OnincludeInMergeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 externalSourceId
        {
            get
            {
                return _externalSourceId;
            }
            set
            {
                OnexternalSourceIdChanging(value);
                ReportPropertyChanging("externalSourceId");
                _externalSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalSourceId");
                OnexternalSourceIdChanged();
            }
        }
        private global::System.Int32 _externalSourceId;
        partial void OnexternalSourceIdChanging(global::System.Int32 value);
        partial void OnexternalSourceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ProcedureCategoryProcedure", "Procedure")]
        public EntityCollection<Procedure> Procedures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Procedure>("WcsDB.FK_ProcedureCategoryProcedure", "Procedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Procedure>("WcsDB.FK_ProcedureCategoryProcedure", "Procedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WcsDB", "FK_ExternalSourceProcedureCategory", "ExternalSource")]
        public ExternalSource ExternalSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedureCategory", "ExternalSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedureCategory", "ExternalSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExternalSource> ExternalSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedureCategory", "ExternalSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExternalSource>("WcsDB.FK_ExternalSourceProcedureCategory", "ExternalSource", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
