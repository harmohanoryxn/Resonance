//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class LocationsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private LocationsScreen() : base("LightSwitchApplication:LocationsScreen")
        {
            global::LightSwitchApplication.LocationsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static LocationsScreen CreateInstance()
        {
            return new global::LightSwitchApplication.LocationsScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Locations1_SelectionChanged();

        partial void Locations1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Locations1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Location> Locations1
        {
            get
            {
                return global::LightSwitchApplication.LocationsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties.Locations1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.LocationsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.LocationsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties.Locations1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>.Entry
                __LocationsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeCreated,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeActivated,
                    global::LightSwitchApplication.LocationsScreen.DetailsClass.__LocationsScreen_InvokeSaveErrorEvent);
            private static void __LocationsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.LocationsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.LocationsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __LocationsScreen_InvokeSavingEvent(global::LightSwitchApplication.LocationsScreen s)
            {
                bool handled = false;
                s.LocationsScreen_Saving(ref handled);
                return handled;
            }
            private static void __LocationsScreen_InvokeSavedEvent(global::LightSwitchApplication.LocationsScreen s)
            {
                s.LocationsScreen_Saved();
            }
            private static bool __LocationsScreen_InvokeClosingEvent(global::LightSwitchApplication.LocationsScreen s)
            {
                bool cancel = false;
                s.LocationsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __LocationsScreen_InvokeCreated(global::LightSwitchApplication.LocationsScreen s)
            {
                s.LocationsScreen_Created();
            }
            private static void __LocationsScreen_InvokeActivated(global::LightSwitchApplication.LocationsScreen s)
            {
                s.LocationsScreen_Activated();
            }
            private static bool __LocationsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.LocationsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.LocationsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.LocationsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.LocationsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Locations1Query()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    this.Screen.DataWorkspace.WcsDB.Locations,
                    (l) => l.code);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location>.Data _Locations1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location> Locations1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location>)base.GetItem(global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties.Locations1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location>.Entry
                    Locations1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location>.Entry(
                        "Locations1",
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_Stub,
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_Validate,
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_CreateQuery,
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_SelectionChanged,
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_OnCollectionChanged,
                        global::LightSwitchApplication.LocationsScreen.DetailsClass.PropertySetProperties._Locations1_OnLoaded);
                private static void _Locations1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LocationsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LocationsScreen, global::LightSwitchApplication.LocationsScreen.DetailsClass, global::LightSwitchApplication.Location>.Data> c, global::LightSwitchApplication.LocationsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Locations1, sf);
                }
                private static void _Locations1_Validate(global::LightSwitchApplication.LocationsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Locations1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Locations1_CreateQuery(global::LightSwitchApplication.LocationsScreen.DetailsClass d, object[] args)
                {
                    return d.Locations1Query();
                }
                private static void _Locations1_SelectionChanged(global::LightSwitchApplication.LocationsScreen s)
                {
                    s.Locations1_SelectionChanged();
                }
                private static void _Locations1_OnCollectionChanged(global::LightSwitchApplication.LocationsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Locations1_Changed(e);
                }
                private static void _Locations1_OnLoaded(global::LightSwitchApplication.LocationsScreen s, bool succeeded)
                {
                    s.Locations1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class ProceduresScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProceduresScreen() : base("LightSwitchApplication:ProceduresScreen")
        {
            global::LightSwitchApplication.ProceduresScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProceduresScreen CreateInstance()
        {
            return new global::LightSwitchApplication.ProceduresScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProceduresScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Procedures1_SelectionChanged();

        partial void Procedures1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Procedures1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Procedure> Procedures1
        {
            get
            {
                return global::LightSwitchApplication.ProceduresScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties.Procedures1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySet, global::LightSwitchApplication.ProceduresScreen.DetailsClass.CommandSet, global::LightSwitchApplication.ProceduresScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties.Procedures1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>.Entry
                __ProceduresScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeCreated,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeActivated,
                    global::LightSwitchApplication.ProceduresScreen.DetailsClass.__ProceduresScreen_InvokeSaveErrorEvent);
            private static void __ProceduresScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProceduresScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProceduresScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProceduresScreen_InvokeSavingEvent(global::LightSwitchApplication.ProceduresScreen s)
            {
                bool handled = false;
                s.ProceduresScreen_Saving(ref handled);
                return handled;
            }
            private static void __ProceduresScreen_InvokeSavedEvent(global::LightSwitchApplication.ProceduresScreen s)
            {
                s.ProceduresScreen_Saved();
            }
            private static bool __ProceduresScreen_InvokeClosingEvent(global::LightSwitchApplication.ProceduresScreen s)
            {
                bool cancel = false;
                s.ProceduresScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __ProceduresScreen_InvokeCreated(global::LightSwitchApplication.ProceduresScreen s)
            {
                s.ProceduresScreen_Created();
            }
            private static void __ProceduresScreen_InvokeActivated(global::LightSwitchApplication.ProceduresScreen s)
            {
                s.ProceduresScreen_Activated();
            }
            private static bool __ProceduresScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.ProceduresScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProceduresScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProceduresScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProceduresScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Procedures1Query()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.WcsDB.Procedures,
                    "ProcedureCategory");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Data _Procedures1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure> Procedures1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure>)base.GetItem(global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties.Procedures1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Entry
                    Procedures1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Entry(
                        "Procedures1",
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_Stub,
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_Validate,
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_CreateQuery,
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_SelectionChanged,
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_OnCollectionChanged,
                        global::LightSwitchApplication.ProceduresScreen.DetailsClass.PropertySetProperties._Procedures1_OnLoaded);
                private static void _Procedures1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProceduresScreen, global::LightSwitchApplication.ProceduresScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Data> c, global::LightSwitchApplication.ProceduresScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Procedures1, sf);
                }
                private static void _Procedures1_Validate(global::LightSwitchApplication.ProceduresScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Procedures1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Procedures1_CreateQuery(global::LightSwitchApplication.ProceduresScreen.DetailsClass d, object[] args)
                {
                    return d.Procedures1Query();
                }
                private static void _Procedures1_SelectionChanged(global::LightSwitchApplication.ProceduresScreen s)
                {
                    s.Procedures1_SelectionChanged();
                }
                private static void _Procedures1_OnCollectionChanged(global::LightSwitchApplication.ProceduresScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Procedures1_Changed(e);
                }
                private static void _Procedures1_OnLoaded(global::LightSwitchApplication.ProceduresScreen s, bool succeeded)
                {
                    s.Procedures1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class ProcedureDetailsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProcedureDetailsScreen(int ProcedureprocedureId) : base("LightSwitchApplication:ProcedureDetailsScreen")
        {
                this.ProcedureprocedureId = ProcedureprocedureId;
            global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProcedureDetailsScreen CreateInstance(int ProcedureprocedureId)
        {
            return new global::LightSwitchApplication.ProcedureDetailsScreen(
                        ProcedureprocedureId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureDetailsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Procedure_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_Loaded(bool succeeded);

        partial void ProcedureprocedureId_Changed();

        partial void NotificationRules_SelectionChanged();

        partial void NotificationRules_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NotificationRules_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Procedure Procedure
        {
            get
            {
                return global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.Procedure);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedure_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProcedureprocedureId
        {
            get 
            {
                return global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.ProcedureprocedureId);
            }
            set
            {
                global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.ProcedureprocedureId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureprocedureId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the NotificationRules visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.NotificationRule> NotificationRules
        {
            get
            {
                return global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.NotificationRules);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NotificationRules_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.Procedure;
                var initializeCommandEntry = global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSetProperties.Method;
                var initializeMethodEntry = global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSetProperties.Method;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry
                __ProcedureDetailsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeCreated,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeActivated,
                    global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.__ProcedureDetailsScreen_InvokeSaveErrorEvent);
            private static void __ProcedureDetailsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProcedureDetailsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProcedureDetailsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProcedureDetailsScreen_InvokeSavingEvent(global::LightSwitchApplication.ProcedureDetailsScreen s)
            {
                bool handled = false;
                s.ProcedureDetailsScreen_Saving(ref handled);
                return handled;
            }
            private static void __ProcedureDetailsScreen_InvokeSavedEvent(global::LightSwitchApplication.ProcedureDetailsScreen s)
            {
                s.ProcedureDetailsScreen_Saved();
            }
            private static bool __ProcedureDetailsScreen_InvokeClosingEvent(global::LightSwitchApplication.ProcedureDetailsScreen s)
            {
                bool cancel = false;
                s.ProcedureDetailsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __ProcedureDetailsScreen_InvokeCreated(global::LightSwitchApplication.ProcedureDetailsScreen s)
            {
                s.ProcedureDetailsScreen_Created();
            }
            private static void __ProcedureDetailsScreen_InvokeActivated(global::LightSwitchApplication.ProcedureDetailsScreen s)
            {
                s.ProcedureDetailsScreen_Activated();
            }
            private static bool __ProcedureDetailsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.ProcedureDetailsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProcedureDetailsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable NotificationRulesQuery()
            {
                if (this.Screen.Procedure == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.NotificationRule> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.NotificationRule>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Procedure.Details.Properties.NotificationRules).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Data _Procedure;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int>.Data _ProcedureprocedureId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule>.Data _NotificationRules;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Data _MethodMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure> Procedure
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure>)base.GetItem(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.Procedure);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int> ProcedureprocedureId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.ProcedureprocedureId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule> NotificationRules
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule>)base.GetItem(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties.NotificationRules);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Entry
                    Procedure = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Entry(
                        "Procedure",
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._Procedure_Stub,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._Procedure_Validate,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._Procedure_CreateQuery,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._Procedure_OnValueChanged,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._Procedure_OnLoaded);
                private static void _Procedure_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.Procedure>.Data> c, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Procedure, sf);
                }
                private static void _Procedure_Validate(global::LightSwitchApplication.ProcedureDetailsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Procedure_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Procedure_CreateQuery(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Procedure_OnValueChanged(global::LightSwitchApplication.ProcedureDetailsScreen s)
                {
                    s.Procedure_Changed();
                }

                private static void _Procedure_OnLoaded(global::LightSwitchApplication.ProcedureDetailsScreen s, bool succeeded)
                {
                    s.Procedure_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int>.Entry
                    ProcedureprocedureId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int>.Entry(
                        "ProcedureprocedureId",
                        false,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._ProcedureprocedureId_Stub,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._ProcedureprocedureId_Validate,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._ProcedureprocedureId_OnValueChanged);
                private static void _ProcedureprocedureId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ProcedureprocedureId, sf);
                }
                private static void _ProcedureprocedureId_Validate(global::LightSwitchApplication.ProcedureDetailsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProcedureprocedureId_Validate(r);
                }
                private static void _ProcedureprocedureId_OnValueChanged(global::LightSwitchApplication.ProcedureDetailsScreen s)
                {
                    s.ProcedureprocedureId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule>.Entry
                    NotificationRules = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule>.Entry(
                        "NotificationRules",
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_Stub,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_Validate,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_CreateQuery,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_SelectionChanged,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_OnCollectionChanged,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.PropertySetProperties._NotificationRules_OnLoaded);
                private static void _NotificationRules_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::LightSwitchApplication.NotificationRule>.Data> c, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._NotificationRules, sf);
                }
                private static void _NotificationRules_Validate(global::LightSwitchApplication.ProcedureDetailsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.NotificationRules_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _NotificationRules_CreateQuery(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object[] args)
                {
                    return d.NotificationRulesQuery();
                }
                private static void _NotificationRules_SelectionChanged(global::LightSwitchApplication.ProcedureDetailsScreen s)
                {
                    s.NotificationRules_SelectionChanged();
                }
                private static void _NotificationRules_OnCollectionChanged(global::LightSwitchApplication.ProcedureDetailsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.NotificationRules_Changed(e);
                }
                private static void _NotificationRules_OnLoaded(global::LightSwitchApplication.ProcedureDetailsScreen s, bool succeeded)
                {
                    s.NotificationRules_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Data> c, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass)d).Methods.Method.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProcedureDetailsScreen, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass>.Data> c, global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.ProcedureDetailsScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class ConfigurationsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ConfigurationsScreen() : base("LightSwitchApplication:ConfigurationsScreen")
        {
            global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ConfigurationsScreen CreateInstance()
        {
            return new global::LightSwitchApplication.ConfigurationsScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Configurations_SelectionChanged();

        partial void Configurations_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Loaded(bool succeeded);

        partial void ConfigurationLocations_SelectionChanged();

        partial void ConfigurationLocations_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationLocations_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Configurations visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration> Configurations
        {
            get
            {
                return global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties.Configurations);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ConfigurationLocations visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ConfigurationLocation> ConfigurationLocations
        {
            get
            {
                return global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties.ConfigurationLocations);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationLocations_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties.Configurations;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>.Entry
                __ConfigurationsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeCreated,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeActivated,
                    global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.__ConfigurationsScreen_InvokeSaveErrorEvent);
            private static void __ConfigurationsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ConfigurationsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ConfigurationsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ConfigurationsScreen_InvokeSavingEvent(global::LightSwitchApplication.ConfigurationsScreen s)
            {
                bool handled = false;
                s.ConfigurationsScreen_Saving(ref handled);
                return handled;
            }
            private static void __ConfigurationsScreen_InvokeSavedEvent(global::LightSwitchApplication.ConfigurationsScreen s)
            {
                s.ConfigurationsScreen_Saved();
            }
            private static bool __ConfigurationsScreen_InvokeClosingEvent(global::LightSwitchApplication.ConfigurationsScreen s)
            {
                bool cancel = false;
                s.ConfigurationsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __ConfigurationsScreen_InvokeCreated(global::LightSwitchApplication.ConfigurationsScreen s)
            {
                s.ConfigurationsScreen_Created();
            }
            private static void __ConfigurationsScreen_InvokeActivated(global::LightSwitchApplication.ConfigurationsScreen s)
            {
                s.ConfigurationsScreen_Activated();
            }
            private static bool __ConfigurationsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.ConfigurationsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.ConfigurationsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ConfigurationsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.WcsDB.Configurations,
                    "ConfigurationType");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ConfigurationLocationsQuery()
            {
                if (this.Screen.Configurations.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ConfigurationLocation> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ConfigurationLocation>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Configurations.SelectedItem.Details.Properties.ConfigurationLocations).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Location");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration>.Data _Configurations;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation>.Data _ConfigurationLocations;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration> Configurations
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration>)base.GetItem(global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties.Configurations);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation> ConfigurationLocations
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation>)base.GetItem(global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties.ConfigurationLocations);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration>.Entry
                    Configurations = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration>.Entry(
                        "Configurations",
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_Stub,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_Validate,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_CreateQuery,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_SelectionChanged,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_OnCollectionChanged,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._Configurations_OnLoaded);
                private static void _Configurations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.Configuration>.Data> c, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Configurations, sf);
                }
                private static void _Configurations_Validate(global::LightSwitchApplication.ConfigurationsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Configurations_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Configurations_CreateQuery(global::LightSwitchApplication.ConfigurationsScreen.DetailsClass d, object[] args)
                {
                    return d.ConfigurationsQuery();
                }
                private static void _Configurations_SelectionChanged(global::LightSwitchApplication.ConfigurationsScreen s)
                {
                    s.Configurations_SelectionChanged();
                }
                private static void _Configurations_OnCollectionChanged(global::LightSwitchApplication.ConfigurationsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Configurations_Changed(e);
                }
                private static void _Configurations_OnLoaded(global::LightSwitchApplication.ConfigurationsScreen s, bool succeeded)
                {
                    s.Configurations_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation>.Entry
                    ConfigurationLocations = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation>.Entry(
                        "ConfigurationLocations",
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_Stub,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_Validate,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_CreateQuery,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_SelectionChanged,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_OnCollectionChanged,
                        global::LightSwitchApplication.ConfigurationsScreen.DetailsClass.PropertySetProperties._ConfigurationLocations_OnLoaded);
                private static void _ConfigurationLocations_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConfigurationsScreen, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass, global::LightSwitchApplication.ConfigurationLocation>.Data> c, global::LightSwitchApplication.ConfigurationsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ConfigurationLocations, sf);
                }
                private static void _ConfigurationLocations_Validate(global::LightSwitchApplication.ConfigurationsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ConfigurationLocations_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ConfigurationLocations_CreateQuery(global::LightSwitchApplication.ConfigurationsScreen.DetailsClass d, object[] args)
                {
                    return d.ConfigurationLocationsQuery();
                }
                private static void _ConfigurationLocations_SelectionChanged(global::LightSwitchApplication.ConfigurationsScreen s)
                {
                    s.ConfigurationLocations_SelectionChanged();
                }
                private static void _ConfigurationLocations_OnCollectionChanged(global::LightSwitchApplication.ConfigurationsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ConfigurationLocations_Changed(e);
                }
                private static void _ConfigurationLocations_OnLoaded(global::LightSwitchApplication.ConfigurationsScreen s, bool succeeded)
                {
                    s.ConfigurationLocations_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class DevicesScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DevicesScreen() : base("LightSwitchApplication:DevicesScreen")
        {
            global::LightSwitchApplication.DevicesScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DevicesScreen CreateInstance()
        {
            return new global::LightSwitchApplication.DevicesScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevicesScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Devices_SelectionChanged();

        partial void Devices_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Devices visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Device> Devices
        {
            get
            {
                return global::LightSwitchApplication.DevicesScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties.Devices);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Devices_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySet, global::LightSwitchApplication.DevicesScreen.DetailsClass.CommandSet, global::LightSwitchApplication.DevicesScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties.Devices;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>.Entry
                __DevicesScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeCreated,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeActivated,
                    global::LightSwitchApplication.DevicesScreen.DetailsClass.__DevicesScreen_InvokeSaveErrorEvent);
            private static void __DevicesScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DevicesScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DevicesScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DevicesScreen_InvokeSavingEvent(global::LightSwitchApplication.DevicesScreen s)
            {
                bool handled = false;
                s.DevicesScreen_Saving(ref handled);
                return handled;
            }
            private static void __DevicesScreen_InvokeSavedEvent(global::LightSwitchApplication.DevicesScreen s)
            {
                s.DevicesScreen_Saved();
            }
            private static bool __DevicesScreen_InvokeClosingEvent(global::LightSwitchApplication.DevicesScreen s)
            {
                bool cancel = false;
                s.DevicesScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __DevicesScreen_InvokeCreated(global::LightSwitchApplication.DevicesScreen s)
            {
                s.DevicesScreen_Created();
            }
            private static void __DevicesScreen_InvokeActivated(global::LightSwitchApplication.DevicesScreen s)
            {
                s.DevicesScreen_Activated();
            }
            private static bool __DevicesScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.DevicesScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.DevicesScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DevicesScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DevicesScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DevicesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.WcsDB.Devices,
                        "Location"),
                    "Configuration");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device>.Data _Devices;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device> Devices
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device>)base.GetItem(global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties.Devices);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device>.Entry
                    Devices = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device>.Entry(
                        "Devices",
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_Stub,
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_Validate,
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_CreateQuery,
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_SelectionChanged,
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_OnCollectionChanged,
                        global::LightSwitchApplication.DevicesScreen.DetailsClass.PropertySetProperties._Devices_OnLoaded);
                private static void _Devices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DevicesScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DevicesScreen, global::LightSwitchApplication.DevicesScreen.DetailsClass, global::LightSwitchApplication.Device>.Data> c, global::LightSwitchApplication.DevicesScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Devices, sf);
                }
                private static void _Devices_Validate(global::LightSwitchApplication.DevicesScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Devices_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Devices_CreateQuery(global::LightSwitchApplication.DevicesScreen.DetailsClass d, object[] args)
                {
                    return d.DevicesQuery();
                }
                private static void _Devices_SelectionChanged(global::LightSwitchApplication.DevicesScreen s)
                {
                    s.Devices_SelectionChanged();
                }
                private static void _Devices_OnCollectionChanged(global::LightSwitchApplication.DevicesScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Devices_Changed(e);
                }
                private static void _Devices_OnLoaded(global::LightSwitchApplication.DevicesScreen s, bool succeeded)
                {
                    s.Devices_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class LogsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private LogsScreen() : base("LightSwitchApplication:LogsScreen")
        {
            global::LightSwitchApplication.LogsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static LogsScreen CreateInstance()
        {
            return new global::LightSwitchApplication.LogsScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LogsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Logs_SelectionChanged();

        partial void Logs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Logs_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Logs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Log> Logs
        {
            get
            {
                return global::LightSwitchApplication.LogsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties.Logs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Logs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.LogsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.LogsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties.Logs;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>.Entry
                __LogsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeCreated,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeActivated,
                    global::LightSwitchApplication.LogsScreen.DetailsClass.__LogsScreen_InvokeSaveErrorEvent);
            private static void __LogsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.LogsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.LogsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __LogsScreen_InvokeSavingEvent(global::LightSwitchApplication.LogsScreen s)
            {
                bool handled = false;
                s.LogsScreen_Saving(ref handled);
                return handled;
            }
            private static void __LogsScreen_InvokeSavedEvent(global::LightSwitchApplication.LogsScreen s)
            {
                s.LogsScreen_Saved();
            }
            private static bool __LogsScreen_InvokeClosingEvent(global::LightSwitchApplication.LogsScreen s)
            {
                bool cancel = false;
                s.LogsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __LogsScreen_InvokeCreated(global::LightSwitchApplication.LogsScreen s)
            {
                s.LogsScreen_Created();
            }
            private static void __LogsScreen_InvokeActivated(global::LightSwitchApplication.LogsScreen s)
            {
                s.LogsScreen_Activated();
            }
            private static bool __LogsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.LogsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.LogsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.LogsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.LogsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable LogsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                    this.Screen.DataWorkspace.WcsDB.Logs,
                    (l) => l.c_Date);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log>.Data _Logs;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log> Logs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log>)base.GetItem(global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties.Logs);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log>.Entry
                    Logs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log>.Entry(
                        "Logs",
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_Stub,
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_Validate,
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_CreateQuery,
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_SelectionChanged,
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_OnCollectionChanged,
                        global::LightSwitchApplication.LogsScreen.DetailsClass.PropertySetProperties._Logs_OnLoaded);
                private static void _Logs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LogsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.LogsScreen, global::LightSwitchApplication.LogsScreen.DetailsClass, global::LightSwitchApplication.Log>.Data> c, global::LightSwitchApplication.LogsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Logs, sf);
                }
                private static void _Logs_Validate(global::LightSwitchApplication.LogsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Logs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Logs_CreateQuery(global::LightSwitchApplication.LogsScreen.DetailsClass d, object[] args)
                {
                    return d.LogsQuery();
                }
                private static void _Logs_SelectionChanged(global::LightSwitchApplication.LogsScreen s)
                {
                    s.Logs_SelectionChanged();
                }
                private static void _Logs_OnCollectionChanged(global::LightSwitchApplication.LogsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Logs_Changed(e);
                }
                private static void _Logs_OnLoaded(global::LightSwitchApplication.LogsScreen s, bool succeeded)
                {
                    s.Logs_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class ConnectionsScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ConnectionsScreen() : base("LightSwitchApplication:ConnectionsScreen")
        {
            global::LightSwitchApplication.ConnectionsScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ConnectionsScreen CreateInstance()
        {
            return new global::LightSwitchApplication.ConnectionsScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConnectionsScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Connections_SelectionChanged();

        partial void Connections_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Connections_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Connections visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Connection> Connections
        {
            get
            {
                return global::LightSwitchApplication.ConnectionsScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties.Connections);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Connections_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySet, global::LightSwitchApplication.ConnectionsScreen.DetailsClass.CommandSet, global::LightSwitchApplication.ConnectionsScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties.Connections;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>.Entry
                __ConnectionsScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeCreated,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeActivated,
                    global::LightSwitchApplication.ConnectionsScreen.DetailsClass.__ConnectionsScreen_InvokeSaveErrorEvent);
            private static void __ConnectionsScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ConnectionsScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ConnectionsScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ConnectionsScreen_InvokeSavingEvent(global::LightSwitchApplication.ConnectionsScreen s)
            {
                bool handled = false;
                s.ConnectionsScreen_Saving(ref handled);
                return handled;
            }
            private static void __ConnectionsScreen_InvokeSavedEvent(global::LightSwitchApplication.ConnectionsScreen s)
            {
                s.ConnectionsScreen_Saved();
            }
            private static bool __ConnectionsScreen_InvokeClosingEvent(global::LightSwitchApplication.ConnectionsScreen s)
            {
                bool cancel = false;
                s.ConnectionsScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __ConnectionsScreen_InvokeCreated(global::LightSwitchApplication.ConnectionsScreen s)
            {
                s.ConnectionsScreen_Created();
            }
            private static void __ConnectionsScreen_InvokeActivated(global::LightSwitchApplication.ConnectionsScreen s)
            {
                s.ConnectionsScreen_Activated();
            }
            private static bool __ConnectionsScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.ConnectionsScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.ConnectionsScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ConnectionsScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ConnectionsScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ConnectionsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                        this.Screen.DataWorkspace.WcsDB.Connections,
                        (c) => c.connectionTime),
                    "Device");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection>.Data _Connections;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection> Connections
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection>)base.GetItem(global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties.Connections);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection>.Entry
                    Connections = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection>.Entry(
                        "Connections",
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_Stub,
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_Validate,
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_CreateQuery,
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_SelectionChanged,
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_OnCollectionChanged,
                        global::LightSwitchApplication.ConnectionsScreen.DetailsClass.PropertySetProperties._Connections_OnLoaded);
                private static void _Connections_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ConnectionsScreen, global::LightSwitchApplication.ConnectionsScreen.DetailsClass, global::LightSwitchApplication.Connection>.Data> c, global::LightSwitchApplication.ConnectionsScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Connections, sf);
                }
                private static void _Connections_Validate(global::LightSwitchApplication.ConnectionsScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Connections_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Connections_CreateQuery(global::LightSwitchApplication.ConnectionsScreen.DetailsClass d, object[] args)
                {
                    return d.ConnectionsQuery();
                }
                private static void _Connections_SelectionChanged(global::LightSwitchApplication.ConnectionsScreen s)
                {
                    s.Connections_SelectionChanged();
                }
                private static void _Connections_OnCollectionChanged(global::LightSwitchApplication.ConnectionsScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Connections_Changed(e);
                }
                private static void _Connections_OnLoaded(global::LightSwitchApplication.ConnectionsScreen s, bool succeeded)
                {
                    s.Connections_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
