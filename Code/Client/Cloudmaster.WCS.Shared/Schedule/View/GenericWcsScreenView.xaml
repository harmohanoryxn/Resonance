<UserControl x:Class="WCS.Shared.Schedule.GenericWcsScreenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:Alerts="clr-namespace:WCS.Shared.Alerts" 
			 xmlns:Security="clr-namespace:WCS.Shared.Security" xmlns:Schedule="clr-namespace:WCS.Shared.Schedule"
             mc:Ignorable="d" 
			 x:Name="uc"
			 MouseMove="HandleMouseMove" PreviewMouseDown="HandlePreviewMouseDown" PreviewTouchDown="HandlePreviewTouchDown">
	
	<Grid x:Name="genericRoot">

		<ContentPresenter Content="{Binding Path=ScheduleViewModel}" x:Name="schedule"  IsEnabled="{Binding Path=DataContext.SecurityViewModel.IsLocked, ElementName=uc, Converter={StaticResource booleanToOppositeConverter}}"/>

		<!-- Alert Popup -->
		<Alerts:AlertsView DataContext="{Binding AlertViewModel}" RenderTransformOrigin="0.5,0.5">
			<Alerts:AlertsView.RenderTransform>
				<ScaleTransform ScaleY="0" ScaleX="0"/>
			</Alerts:AlertsView.RenderTransform>
			<Alerts:AlertsView.Style>
				<Style TargetType="{x:Type Alerts:AlertsView}">
					<Style.Triggers>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=HasWarningAlerts}" Value="True" />
								<Condition Binding="{Binding Path=JustBeenLocked}" Value="True" />
							</MultiDataTrigger.Conditions>

							<MultiDataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="1" Duration="0:0:0.0" Storyboard.TargetProperty="RenderTransform.ScaleY" />
										<DoubleAnimation From="1" Duration="0:0:0.0" Storyboard.TargetProperty="RenderTransform.ScaleX" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.ExitActions>

							<MultiDataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="1" Duration="0:0:0.0" Storyboard.TargetProperty="RenderTransform.ScaleY" />
										<DoubleAnimation To="1" Duration="0:0:0.0" Storyboard.TargetProperty="RenderTransform.ScaleX" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>
						</MultiDataTrigger>

					</Style.Triggers>
				</Style>
			</Alerts:AlertsView.Style>
		</Alerts:AlertsView>

		<Grid>

			<!-- Blocks out the schedule from interaction from the user -->
			<Border x:Name="SecurityObscurer" IsHitTestVisible="True" Visibility="{Binding Path=SecurityViewModel.IsLocked, Converter={StaticResource booleanToVisibilityConverter}}" Opacity="0" Background="{StaticResource Apple10Brush}"/>

			<!-- Num Pad -->
			<Security:LockView x:Name="numpad" 
							   DataContext="{Binding Path=SecurityViewModel}"
							   HorizontalAlignment="Left" 
							   Height="{Binding ActualHeight, ElementName=genericRoot}"
							   Width="240"
							   Visibility="Collapsed">


				<Security:LockView.RenderTransform>
					<TranslateTransform X="{Binding ElementName=numpad, Path=ActualWidth, Converter={StaticResource negativeConverter}}"/>
				</Security:LockView.RenderTransform>
				<Security:LockView.Style>
					<Style TargetType="{x:Type Security:LockView}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding Path=IsLocked}" Value="True">
								<DataTrigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation To="0" Duration="0:0:0.3" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.X" />
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"   Storyboard.TargetProperty="(UIElement.Visibility)">
												<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation From="0" Duration="0:0:0.3" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.X" />
											<ObjectAnimationUsingKeyFrames BeginTime="0:0:0.3"   Storyboard.TargetProperty="(UIElement.Visibility)">
												<DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Security:LockView.Style>

			</Security:LockView>
		</Grid>

		<!-- Error Bar -->
		<Alerts:ErrorDisplayView x:Name="errorBar" 
								 Width="{Binding ElementName=uc, Path=ActualWidth}" Height="40" 
								 VerticalAlignment="Top"
								 DataContext="{Binding ErrorBarViewModel}"
								 RenderTransformOrigin="0.5,0.5">
			<Alerts:ErrorDisplayView.RenderTransform>
				<TranslateTransform Y="{Binding ElementName=errorBar, Path=ActualHeight, Converter={StaticResource negativeConverter}}"/>
			</Alerts:ErrorDisplayView.RenderTransform>
			<Alerts:ErrorDisplayView.Style>
				<Style TargetType="{x:Type Alerts:ErrorDisplayView}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=HasErrorMessage}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="0" Duration="0:0:0.3" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.Y" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="0" Duration="0:0:0.3" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.Y" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Alerts:ErrorDisplayView.Style>
		</Alerts:ErrorDisplayView>

		<!-- Navigation -->
		<Border Name="navigationBar"  Height="190" Background="{StaticResource Win8NavigationBackgroundBrush}" VerticalAlignment="Top">
			<Schedule:NavigationBar Height="190"/>
			<Border.RenderTransform>
				<TranslateTransform Y="{Binding ElementName=navigationBar, Path=ActualHeight, Converter={StaticResource negativeConverter}}"/>
			</Border.RenderTransform>
			<Border.Style>
				<Style TargetType="{x:Type Border}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ShowNavigationBar}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="0" Duration="0:0:0.4" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.Y" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation From="0" Duration="0:0:0.4" AccelerationRatio="0.3" DecelerationRatio="0.3" Storyboard.TargetProperty="RenderTransform.Y" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Border.Style>
		</Border>

	</Grid>

</UserControl>
