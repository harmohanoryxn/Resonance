<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="superSocket" type="SuperSocket.SocketEngine.Configuration.SocketServiceConfig, SuperSocket.SocketEngine" />
    <section name="endpoints" type="HL7Fuse.Hub.Configuration.EndPointConfigurationHandler, HL7Fuse.Hub" />
    <section name="messageRouting" type="HL7Fuse.Hub.Configuration.HL7RoutingRulesConfigurationHandler, HL7Fuse.Hub" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <connectionStrings>
    <add name="WCSEntities" connectionString="metadata=res://*/WCS.csdl|res://*/WCS.ssdl|res://*/WCS.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.;initial catalog=WCS;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <appSettings>
    <add key="ServiceName" value="Resonance" />
    <add key="CommunicationName" value="Resonance Medical" />
    <add key="EnvironmentIdentifier" value="PROD" />
    <!-- Handle each Hl7 message as separate event or use a MessageFactory class. The default is false -->
    <add key="HandleEachMessageAsEvent" value="false" />
    <!-- Send a positive ACK message instead of an error when a message handler is not implemented. The default is false -->
    <add key="AcceptEventIfNotImplemented" value="true" />
    <!-- Settings for HL7Fuse.Hub -->
    <add key="SendRetryPause" value="1000" />
    <!-- Milliseconds to wait before retrying to deliver message to the endpoint -->
    <add key="SendRetryCount" value="100" />
    <!-- Number of retries per message -->
    <!-- Message handler to use for the HL7Fuse.Hub -->
    <!--<add key="HubMessageHandler" value="SomeApplication.Class, Assembly"/>-->
    <add key="URIValue" value="http://localhost:62529/" />
    <!--<add key="URIValue" value="http://localhost/HL7MessageReciever/" />
    <add key="MessageFolder" value="D:\WCS\HL7MessagesTest\" />
    <add key="ErrorFolder" value="D:\WCS\HL7MessagesTest\Errors\" />-->
    <add key="MessageFolder" value="F:\HL7MessagesTest\" />
    <add key="ErrorFolder" value="F:\HL7MessagesTest\Errors\" />
  </appSettings>
  <superSocket>
    <servers>
      <server name="HL7Fuse" serverTypeName="MLLPServer" ip="192.168.1.6" port="2020" maxRequestLength="2048000" maxConnectionNumber="1000">
         <!--add attribute security="ssl" (or value tls) to enable an encrypted connection 
        <certificate filePath="localhost.pfx" password="supersocket"></certificate>-->
				
        <commandAssemblies>
          <add assembly="HL7Fuse.Hub" />
        </commandAssemblies>
      </server>
      <!--<server name="HL7FuseFile" serverTypeName="FileServer" incomingDirectory="..\..\..\Test Files\Incoming" outgoingDirectory="..\..\..\Test Files\Outgoing" backupDirectory="..\..\..\Test Files\Processed" errorDirectory="..\..\..\Test Files\Error" fileMask="*.txt" pollTime="1000" ip="127.0.0.1" port="1000">
        <commandAssemblies>
          <add assembly="HL7Fuse.Hub" />
        </commandAssemblies>
      </server>-->
      <server name="TestReceiver" serverTypeName="MLLPServer" ip="192.168.1.6" port="4040" maxConnectionNumber="1000" maxRequestLength="2048000">
			</server>
    </servers>
    <serverTypes>
      <add name="MLLPServer" type="HL7Fuse.MLLPServer, HL7Fuse" />
      <add name="FileServer" type="HL7Fuse.FileServer, HL7Fuse" />
    </serverTypes>
  </superSocket>
  <endpoints>
    <!--<FileEndpoint name="TestFileEndPoint" targetDirectory="c:\data\t" />-->
    <!--
		<MLLPClientEndPoint name="MLLPEndPoint" host="localhost" port="4050" serverCommunicationName="TestServer2" serverEnvironment="Development" />
		
        The HL7 over HTTP client is according to the following specs:
        http://hl7api.sourceforge.net/hapi-hl7overhttp/specification.html#a1.3_HTTP_Response_Codes
		-->
    	<HttpEndPoint name="TestHttpEndPoint" serverUri="http://localhost:62529/default.aspx" serverCommunicationName="TestServer2" serverEnvironment="Development" acceptAllSSlCertificates="true" />
	<!--		<HttpEndPoint name="TestHttpEndPoint2" serverUri="http://localhost:1057/Default.aspx" serverCommunicationName="TestServer2" serverEnvironment="Development" acceptAllSSlCertificates="true" />
-->
    <!--		<SSLEndPoint name="TestSSLEndPoint" host="localhost" port="4050" serverCommunicationName="TestServer2" serverEnvironment="Development" clientSideCertificatePath="\path\to\cert.pfx" clientSideCertificatePassword="certificatePW" />
-->
  </endpoints>
  <messageRouting>
    <rule endpoint="TestHttpEndPoint" routeOnValidRules="Any">  routeOnValidRules is set to All by default 
			<include hl7Version="*" structurename="*" />
					<exclude hl7Version="2.3" structurename="SIU_S12" /> 
		</rule>
    <!--<rule endpoint="TestFileEndPoint" routeOnValidRules="All">
			<include hl7Version="2.3" structurename="SIU_*" fieldFilter="MSH-3-1" fieldFilterValue="U*" />
		</rule>-->
  </messageRouting>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <runtime>
    <gcServer enabled="true" />
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V23" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Base" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V231" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V21" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V22" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V24" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHapi.Model.V25" publicKeyToken="d0d8ea960a3440eb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.5.0.6" newVersion="2.5.0.6" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="SuperSocket.SocketBase" publicKeyToken="6c80000676988ebb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.6.1" newVersion="1.6.6.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="SuperSocket.Common" publicKeyToken="6c80000676988ebb" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.6.1" newVersion="1.6.6.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>